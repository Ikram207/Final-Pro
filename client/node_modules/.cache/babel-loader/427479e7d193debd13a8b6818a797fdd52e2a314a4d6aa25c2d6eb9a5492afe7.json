{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { register } from '../services/api';\n// import '../styles/auth.css'; // Import du style\n\n// export default function Register({ onRegister }) {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     setSuccess('');\n//     const result = await register(name, email, password);\n//     if (result.message) {\n//       setSuccess('Inscription réussie ! Vous pouvez vous connecter.');\n//       setName('');\n//       setEmail('');\n//       setPassword('');\n//       onRegister();\n//     } else {\n//       setError(result.error || \"Erreur lors de l'inscription\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <div className=\"auth-card\">\n//         <form onSubmit={handleSubmit}>\n//           <h2>Inscription</h2>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Nom\"\n//             value={name}\n//             onChange={e => setName(e.target.value)}\n//             required\n//           />\n//           <br />\n//           <input\n//             type=\"email\"\n//             placeholder=\"Email\"\n//             value={email}\n//             onChange={e => setEmail(e.target.value)}\n//             required\n//           />\n//           <br />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Mot de passe\"\n//             value={password}\n//             onChange={e => setPassword(e.target.value)}\n//             required\n//           />\n//           <br />\n//           <button type=\"submit\">S'inscrire</button>\n//           {success && <p style={{color: 'green'}}>{success}</p>}\n//           {error && <p style={{color: 'red'}}>{error}</p>}\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n//------------------------------------------\n// import React, { useState } from 'react';\n\n// export default function Register({ goToLogin }) {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirm, setConfirm] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     setError('');\n//     setSuccess('');\n//     if (password !== confirm) {\n//       setError('Les mots de passe ne correspondent pas.');\n//       return;\n//     }\n\n//     try {\n//       const res = await fetch('/api/register', { // adapte URL backend\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await res.json();\n//       if (res.ok) {\n//         setSuccess('Compte créé avec succès. Vous pouvez vous connecter.');\n//         setEmail('');\n//         setPassword('');\n//         setConfirm('');\n//       } else {\n//         setError(data.message || 'Erreur lors de la création du compte');\n//       }\n//     } catch (err) {\n//       setError('Erreur réseau');\n//     }\n//   }\n\n//   return (\n//     <div style={{ maxWidth: 400, margin: 'auto', padding: 20 }}>\n//       <h2>Inscription</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={e => setEmail(e.target.value)}\n//           placeholder=\"Email\"\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={e => setPassword(e.target.value)}\n//           placeholder=\"Mot de passe\"\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           value={confirm}\n//           onChange={e => setConfirm(e.target.value)}\n//           placeholder=\"Confirmer le mot de passe\"\n//           required\n//         />\n//         <button type=\"submit\">S'inscrire</button>\n//       </form>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//       {success && <p style={{ color: 'green' }}>{success}</p>}\n\n//       <p>\n//         Déjà un compte ?{' '}\n//         <button onClick={goToLogin} style={{ color: 'blue', background: 'none', border: 'none', cursor: 'pointer' }}>\n//           Se connecter\n//         </button>\n//       </p>\n//     </div>\n//   );\n// }\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register({\n  goToLogin\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch('http://localhost:5000/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error('Erreur lors de l\\'inscription');\n      return res.json();\n    }).then(data => {\n      setMessage(data.message);\n      setError('');\n    }).catch(err => setError(err.message));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Mot de passe\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToLogin,\n      children: \"Retour \\xE0 la connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"HrUSimL6t0DlnjZITdZthZlYr3E=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","goToLogin","_s","email","setEmail","password","setPassword","message","setMessage","error","setError","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","json","data","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","value","onChange","target","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/components/Register.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { register } from '../services/api';\r\n// import '../styles/auth.css'; // Import du style\r\n\r\n// export default function Register({ onRegister }) {\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [success, setSuccess] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     setSuccess('');\r\n//     const result = await register(name, email, password);\r\n//     if (result.message) {\r\n//       setSuccess('Inscription réussie ! Vous pouvez vous connecter.');\r\n//       setName('');\r\n//       setEmail('');\r\n//       setPassword('');\r\n//       onRegister();\r\n//     } else {\r\n//       setError(result.error || \"Erreur lors de l'inscription\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <div className=\"auth-card\">\r\n//         <form onSubmit={handleSubmit}>\r\n//           <h2>Inscription</h2>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Nom\"\r\n//             value={name}\r\n//             onChange={e => setName(e.target.value)}\r\n//             required\r\n//           />\r\n//           <br />\r\n//           <input\r\n//             type=\"email\"\r\n//             placeholder=\"Email\"\r\n//             value={email}\r\n//             onChange={e => setEmail(e.target.value)}\r\n//             required\r\n//           />\r\n//           <br />\r\n//           <input\r\n//             type=\"password\"\r\n//             placeholder=\"Mot de passe\"\r\n//             value={password}\r\n//             onChange={e => setPassword(e.target.value)}\r\n//             required\r\n//           />\r\n//           <br />\r\n//           <button type=\"submit\">S'inscrire</button>\r\n//           {success && <p style={{color: 'green'}}>{success}</p>}\r\n//           {error && <p style={{color: 'red'}}>{error}</p>}\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n//------------------------------------------\r\n// import React, { useState } from 'react';\r\n\r\n// export default function Register({ goToLogin }) {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirm, setConfirm] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [success, setSuccess] = useState('');\r\n\r\n//   async function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     setSuccess('');\r\n//     if (password !== confirm) {\r\n//       setError('Les mots de passe ne correspondent pas.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const res = await fetch('/api/register', { // adapte URL backend\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await res.json();\r\n//       if (res.ok) {\r\n//         setSuccess('Compte créé avec succès. Vous pouvez vous connecter.');\r\n//         setEmail('');\r\n//         setPassword('');\r\n//         setConfirm('');\r\n//       } else {\r\n//         setError(data.message || 'Erreur lors de la création du compte');\r\n//       }\r\n//     } catch (err) {\r\n//       setError('Erreur réseau');\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 400, margin: 'auto', padding: 20 }}>\r\n//       <h2>Inscription</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={e => setEmail(e.target.value)}\r\n//           placeholder=\"Email\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={e => setPassword(e.target.value)}\r\n//           placeholder=\"Mot de passe\"\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={confirm}\r\n//           onChange={e => setConfirm(e.target.value)}\r\n//           placeholder=\"Confirmer le mot de passe\"\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">S'inscrire</button>\r\n//       </form>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//       {success && <p style={{ color: 'green' }}>{success}</p>}\r\n\r\n//       <p>\r\n//         Déjà un compte ?{' '}\r\n//         <button onClick={goToLogin} style={{ color: 'blue', background: 'none', border: 'none', cursor: 'pointer' }}>\r\n//           Se connecter\r\n//         </button>\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState } from 'react';\r\n\r\nexport default function Register({ goToLogin }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    fetch('http://localhost:5000/api/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, password }),\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) throw new Error('Erreur lors de l\\'inscription');\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setMessage(data.message);\r\n        setError('');\r\n      })\r\n      .catch(err => setError(err.message));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Inscription</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\" placeholder=\"Email\" required\r\n          value={email} onChange={e => setEmail(e.target.value)} />\r\n        <input\r\n          type=\"password\" placeholder=\"Mot de passe\" required\r\n          value={password} onChange={e => setPassword(e.target.value)} />\r\n        <button type=\"submit\">S'inscrire</button>\r\n      </form>\r\n      {message && <p style={{color:'green'}}>{message}</p>}\r\n      {error && <p style={{color:'red'}}>{error}</p>}\r\n      <button onClick={goToLogin}>Retour à la connexion</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASc,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAC,oCAAoC,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,KAAK;QAAEE;MAAS,CAAC;IAC1C,CAAC,CAAC,CACCe,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAC7D,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZjB,UAAU,CAACiB,IAAI,CAAClB,OAAO,CAAC;MACxBG,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,CACDgB,KAAK,CAACC,GAAG,IAAIjB,QAAQ,CAACiB,GAAG,CAACpB,OAAO,CAAC,CAAC;EACxC;EAEA,oBACER,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjC,OAAA;MAAMkC,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,gBAC3B7B,OAAA;QACEmC,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,OAAO;QAACC,QAAQ;QACzCC,KAAK,EAAElC,KAAM;QAACmC,QAAQ,EAAE1B,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAAC2B,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3DjC,OAAA;QACEmC,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,cAAc;QAACC,QAAQ;QACnDC,KAAK,EAAEhC,QAAS;QAACiC,QAAQ,EAAE1B,CAAC,IAAIN,WAAW,CAACM,CAAC,CAAC2B,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjEjC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACNzB,OAAO,iBAAIR,OAAA;MAAGyC,KAAK,EAAE;QAACC,KAAK,EAAC;MAAO,CAAE;MAAAb,QAAA,EAAErB;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnDvB,KAAK,iBAAIV,OAAA;MAAGyC,KAAK,EAAE;QAACC,KAAK,EAAC;MAAK,CAAE;MAAAb,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9CjC,OAAA;MAAQ2C,OAAO,EAAEzC,SAAU;MAAA2B,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAC9B,EAAA,CAzCuBF,QAAQ;AAAA2C,EAAA,GAAR3C,QAAQ;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}