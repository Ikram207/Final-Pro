{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask, getIdeas } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       console.log('Tâche créée reçue:', created);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login');\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null);\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       console.log('Tâche créée reçue:', created);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeApi = {\n  tasks: [{\n    id: 1,\n    title: 'Tâche 1',\n    status: 'pending',\n    dueDate: '2025-08-21',\n    description: 'Description de la tâche 1'\n  }, {\n    id: 2,\n    title: 'Tâche 2',\n    status: 'done',\n    dueDate: '2025-09-01',\n    description: 'Description de la tâche 2'\n  }],\n  createTask(task) {\n    return new Promise(resolve => {\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      this.tasks.push(newTask);\n      setTimeout(() => resolve(newTask), 500);\n    });\n  },\n  updateTask(id, updated) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.map(t => t.id === id ? {\n        ...t,\n        ...updated\n      } : t);\n      setTimeout(() => resolve(this.tasks.find(t => t.id === id)), 500);\n    });\n  },\n  deleteTask(id) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.filter(t => t.id !== id);\n      setTimeout(() => resolve({\n        success: true\n      }), 500);\n    });\n  },\n  getTasks() {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(this.tasks), 500);\n    });\n  }\n};\nconst statusColors = {\n  'pending': '#f0ad4e',\n  // orange\n  'in-progress': '#0275d8',\n  // bleu\n  'done': '#5cb85c' // vert\n};\nfunction Navbar({\n  onLogout\n}) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    style: {\n      backgroundColor: '#007BFF',\n      padding: '10px 20px',\n      color: '#fff',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      fontWeight: 'bold',\n      fontSize: '1.2rem',\n      marginBottom: 20,\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Mon App T\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogout,\n      style: {\n        backgroundColor: '#dc3545',\n        color: 'white',\n        border: 'none',\n        padding: '6px 12px',\n        borderRadius: 4,\n        cursor: 'pointer'\n      },\n      children: \"D\\xE9connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n}\n_c = Navbar;\nfunction TaskForm({\n  onSave,\n  editingTask,\n  cancelEdit\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [status, setStatus] = useState('pending');\n  const [dueDate, setDueDate] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title || '');\n      setStatus(editingTask.status || 'pending');\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : '');\n      setDescription(editingTask.description || '');\n    } else {\n      setTitle('');\n      setStatus('pending');\n      setDueDate('');\n      setDescription('');\n    }\n  }, [editingTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert('Le titre est obligatoire');\n      return;\n    }\n    if (!status) {\n      alert('Le statut est obligatoire');\n      return;\n    }\n    onSave({\n      title,\n      status,\n      dueDate,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: 20,\n      border: '1px solid #ccc',\n      padding: 15,\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editingTask ? 'Modifier une tâche' : 'Ajouter une tâche'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Titre :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        style: {\n          width: '100%',\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Statut :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        required: true,\n        style: {\n          width: '100%',\n          padding: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"En attente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Termin\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date limite :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        style: {\n          width: '100%',\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        style: {\n          width: '100%',\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        padding: '5px 10px'\n      },\n      children: editingTask ? 'Mettre à jour' : 'Enregistrer'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: cancelEdit,\n      style: {\n        padding: '5px 10px',\n        marginLeft: 10,\n        background: '#ccc'\n      },\n      children: \"Annuler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"BhSItGvbqA2WGTX+S0pt5sJ02n4=\");\n_c2 = TaskForm;\nexport default function App() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  useEffect(() => {\n    fakeApi.getTasks().then(setTasks);\n  }, []);\n  const handleSave = taskData => {\n    if (editingTask) {\n      fakeApi.updateTask(editingTask.id, taskData).then(updated => {\n        setTasks(tasks.map(t => t.id === updated.id ? updated : t));\n        setEditingTask(null);\n      });\n    } else {\n      fakeApi.createTask(taskData).then(newTask => {\n        setTasks([...tasks, newTask]);\n      });\n    }\n  };\n  const handleDelete = id => {\n    if (window.confirm('Confirmer la suppression ?')) {\n      fakeApi.deleteTask(id).then(() => {\n        setTasks(tasks.filter(t => t.id !== id));\n      });\n    }\n  };\n  const handleEdit = task => {\n    setEditingTask(task);\n  };\n  const cancelEdit = () => {\n    setEditingTask(null);\n  };\n  const handleLogout = () => {\n    alert('Déconnexion effectuée');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 900,\n      margin: 'auto',\n      padding: 20,\n      fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: handleSave,\n      editingTask: editingTask,\n      cancelEdit: cancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse',\n        boxShadow: '0 0 10px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: '#007BFF',\n            color: '#fff',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px'\n            },\n            children: \"Titre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px'\n            },\n            children: \"Statut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px'\n            },\n            children: \"Date limite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px'\n            },\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px'\n            },\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            borderBottom: '1px solid #ddd',\n            transition: 'background-color 0.3s',\n            cursor: 'default'\n          },\n          onMouseEnter: e => e.currentTarget.style.backgroundColor = '#f9f9f9',\n          onMouseLeave: e => e.currentTarget.style.backgroundColor = '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: task.title || 'Titre manquant'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                padding: '4px 8px',\n                borderRadius: 12,\n                color: '#fff',\n                backgroundColor: statusColors[task.status] || '#6c757d',\n                fontWeight: 'bold',\n                textTransform: 'capitalize',\n                fontSize: '0.9rem',\n                display: 'inline-block',\n                minWidth: 90,\n                textAlign: 'center'\n              },\n              children: task.status || 'Statut manquant'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: task.dueDate ? task.dueDate.substring(0, 10) : 'Date manquante'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: task.description || 'Description manquante'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(task),\n              style: {\n                cursor: 'pointer',\n                marginRight: 8,\n                backgroundColor: '#ffc107',\n                border: 'none',\n                borderRadius: 4,\n                padding: '4px 8px'\n              },\n              title: \"Modifier\",\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              style: {\n                cursor: 'pointer',\n                backgroundColor: '#dc3545',\n                border: 'none',\n                borderRadius: 4,\n                padding: '4px 8px',\n                color: '#fff'\n              },\n              title: \"Supprimer\",\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: 'center',\n              padding: 20\n            },\n            children: \"Aucune t\\xE2che disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"nwiSLkn6Y0JvLhs83lscW/YeAV0=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"TaskForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fakeApi","tasks","id","title","status","dueDate","description","createTask","task","Promise","resolve","newTask","Date","now","push","setTimeout","updateTask","updated","map","t","find","deleteTask","filter","success","getTasks","statusColors","Navbar","onLogout","style","backgroundColor","padding","color","display","justifyContent","alignItems","fontWeight","fontSize","marginBottom","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","cursor","_c","TaskForm","onSave","editingTask","cancelEdit","_s","setTitle","setStatus","setDueDate","setDescription","substring","handleSubmit","e","preventDefault","trim","alert","onSubmit","value","onChange","target","required","width","type","marginLeft","background","_c2","App","_s2","setTasks","setEditingTask","then","handleSave","taskData","handleDelete","window","confirm","handleEdit","handleLogout","maxWidth","margin","fontFamily","borderCollapse","boxShadow","textAlign","length","borderBottom","transition","onMouseEnter","currentTarget","onMouseLeave","textTransform","minWidth","marginRight","colSpan","_c3","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask, getIdeas } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       console.log('Tâche créée reçue:', created);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login');\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       console.log('Tâche créée reçue:', created);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst fakeApi = {\r\n  tasks: [\r\n    { id: 1, title: 'Tâche 1', status: 'pending', dueDate: '2025-08-21', description: 'Description de la tâche 1' },\r\n    { id: 2, title: 'Tâche 2', status: 'done', dueDate: '2025-09-01', description: 'Description de la tâche 2' },\r\n  ],\r\n  createTask(task) {\r\n    return new Promise(resolve => {\r\n      const newTask = { ...task, id: Date.now() };\r\n      this.tasks.push(newTask);\r\n      setTimeout(() => resolve(newTask), 500);\r\n    });\r\n  },\r\n  updateTask(id, updated) {\r\n    return new Promise(resolve => {\r\n      this.tasks = this.tasks.map(t => (t.id === id ? { ...t, ...updated } : t));\r\n      setTimeout(() => resolve(this.tasks.find(t => t.id === id)), 500);\r\n    });\r\n  },\r\n  deleteTask(id) {\r\n    return new Promise(resolve => {\r\n      this.tasks = this.tasks.filter(t => t.id !== id);\r\n      setTimeout(() => resolve({ success: true }), 500);\r\n    });\r\n  },\r\n  getTasks() {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => resolve(this.tasks), 500);\r\n    });\r\n  }\r\n};\r\n\r\nconst statusColors = {\r\n  'pending': '#f0ad4e',       // orange\r\n  'in-progress': '#0275d8',   // bleu\r\n  'done': '#5cb85c',          // vert\r\n};\r\n\r\nfunction Navbar({ onLogout }) {\r\n  return (\r\n    <nav style={{\r\n      backgroundColor: '#007BFF',\r\n      padding: '10px 20px',\r\n      color: '#fff',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      fontWeight: 'bold',\r\n      fontSize: '1.2rem',\r\n      marginBottom: 20,\r\n      borderRadius: 6,\r\n    }}>\r\n      <div>Mon App Tâches</div>\r\n      <button\r\n        onClick={onLogout}\r\n        style={{\r\n          backgroundColor: '#dc3545',\r\n          color: 'white',\r\n          border: 'none',\r\n          padding: '6px 12px',\r\n          borderRadius: 4,\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Déconnexion\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction TaskForm({ onSave, editingTask, cancelEdit }) {\r\n  const [title, setTitle] = useState('');\r\n  const [status, setStatus] = useState('pending');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (editingTask) {\r\n      setTitle(editingTask.title || '');\r\n      setStatus(editingTask.status || 'pending');\r\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : '');\r\n      setDescription(editingTask.description || '');\r\n    } else {\r\n      setTitle('');\r\n      setStatus('pending');\r\n      setDueDate('');\r\n      setDescription('');\r\n    }\r\n  }, [editingTask]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) {\r\n      alert('Le titre est obligatoire');\r\n      return;\r\n    }\r\n    if (!status) {\r\n      alert('Le statut est obligatoire');\r\n      return;\r\n    }\r\n    onSave({ title, status, dueDate, description });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: 20, border: '1px solid #ccc', padding: 15, borderRadius: 6 }}>\r\n      <h3>{editingTask ? 'Modifier une tâche' : 'Ajouter une tâche'}</h3>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Titre :</label><br />\r\n        <input value={title} onChange={e => setTitle(e.target.value)} required style={{ width: '100%', padding: 5 }} />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Statut :</label><br />\r\n        <select value={status} onChange={e => setStatus(e.target.value)} required style={{ width: '100%', padding: 5 }}>\r\n          <option value=\"pending\">En attente</option>\r\n          <option value=\"in-progress\">En cours</option>\r\n          <option value=\"done\">Terminé</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Date limite :</label><br />\r\n        <input type=\"date\" value={dueDate} onChange={e => setDueDate(e.target.value)} style={{ width: '100%', padding: 5 }} />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Description :</label><br />\r\n        <textarea value={description} onChange={e => setDescription(e.target.value)} style={{ width: '100%', padding: 5 }} />\r\n      </div>\r\n\r\n      <button type=\"submit\" style={{ padding: '5px 10px' }}>{editingTask ? 'Mettre à jour' : 'Enregistrer'}</button>\r\n\r\n      {editingTask && (\r\n        <button type=\"button\" onClick={cancelEdit} style={{ padding: '5px 10px', marginLeft: 10, background: '#ccc' }}>Annuler</button>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fakeApi.getTasks().then(setTasks);\r\n  }, []);\r\n\r\n  const handleSave = (taskData) => {\r\n    if (editingTask) {\r\n      fakeApi.updateTask(editingTask.id, taskData).then(updated => {\r\n        setTasks(tasks.map(t => (t.id === updated.id ? updated : t)));\r\n        setEditingTask(null);\r\n      });\r\n    } else {\r\n      fakeApi.createTask(taskData).then(newTask => {\r\n        setTasks([...tasks, newTask]);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Confirmer la suppression ?')) {\r\n      fakeApi.deleteTask(id).then(() => {\r\n        setTasks(tasks.filter(t => t.id !== id));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    setEditingTask(task);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    alert('Déconnexion effectuée');\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 900, margin: 'auto', padding: 20, fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\" }}>\r\n      <Navbar onLogout={handleLogout} />\r\n\r\n      <TaskForm onSave={handleSave} editingTask={editingTask} cancelEdit={cancelEdit} />\r\n\r\n      <table style={{ width: '100%', borderCollapse: 'collapse', boxShadow: '0 0 10px rgba(0,0,0,0.1)' }}>\r\n        <thead>\r\n          <tr style={{ backgroundColor: '#007BFF', color: '#fff', textAlign: 'left' }}>\r\n            <th style={{ padding: '10px' }}>Titre</th>\r\n            <th style={{ padding: '10px' }}>Statut</th>\r\n            <th style={{ padding: '10px' }}>Date limite</th>\r\n            <th style={{ padding: '10px' }}>Description</th>\r\n            <th style={{ padding: '10px' }}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.length > 0 ? (\r\n            tasks.map(task => (\r\n              <tr\r\n                key={task.id}\r\n                style={{\r\n                  borderBottom: '1px solid #ddd',\r\n                  transition: 'background-color 0.3s',\r\n                  cursor: 'default',\r\n                }}\r\n                onMouseEnter={e => e.currentTarget.style.backgroundColor = '#f9f9f9'}\r\n                onMouseLeave={e => e.currentTarget.style.backgroundColor = ''}\r\n              >\r\n                <td style={{ padding: '8px' }}>{task.title || 'Titre manquant'}</td>\r\n                <td style={{ padding: '8px' }}>\r\n                  <span\r\n                    style={{\r\n                      padding: '4px 8px',\r\n                      borderRadius: 12,\r\n                      color: '#fff',\r\n                      backgroundColor: statusColors[task.status] || '#6c757d',\r\n                      fontWeight: 'bold',\r\n                      textTransform: 'capitalize',\r\n                      fontSize: '0.9rem',\r\n                      display: 'inline-block',\r\n                      minWidth: 90,\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    {task.status || 'Statut manquant'}\r\n                  </span>\r\n                </td>\r\n                <td style={{ padding: '8px' }}>{task.dueDate ? task.dueDate.substring(0, 10) : 'Date manquante'}</td>\r\n                <td style={{ padding: '8px' }}>{task.description || 'Description manquante'}</td>\r\n                <td style={{ padding: '8px' }}>\r\n                  <button\r\n                    onClick={() => handleEdit(task)}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      marginRight: 8,\r\n                      backgroundColor: '#ffc107',\r\n                      border: 'none',\r\n                      borderRadius: 4,\r\n                      padding: '4px 8px',\r\n                    }}\r\n                    title=\"Modifier\"\r\n                  >\r\n                    ✏️\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(task.id)}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      backgroundColor: '#dc3545',\r\n                      border: 'none',\r\n                      borderRadius: 4,\r\n                      padding: '4px 8px',\r\n                      color: '#fff',\r\n                    }}\r\n                    title=\"Supprimer\"\r\n                  >\r\n                    🗑️\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr><td colSpan=\"5\" style={{ textAlign: 'center', padding: 20 }}>Aucune tâche disponible</td></tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}