{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import Login from './components/Login';\n// // import Register from './components/Register';\n// // import TaskForm from './components/TaskForm';\n// // import TaskList from './components/TaskList';\n\n// // export default function App() {\n// //   const [token, setToken] = useState(localStorage.getItem('token') || '');\n// //   const [view, setView] = useState('login'); // login | register | tasks\n// //   const [tasks, setTasks] = useState([]);\n\n// //   const handleLogin = async (jwt) => {\n// //     localStorage.setItem('token', jwt);\n// //     setToken(jwt);\n// //     setView('tasks');\n// //     // Fetch tasks after login\n// //     const { getTasks } = await import('./services/api');\n// //     const fetched = await getTasks(jwt);\n// //     setTasks(Array.isArray(fetched) ? fetched : []);\n// //   };\n\n// //   const handleLogout = () => {\n// //     localStorage.removeItem('token');\n// //     setToken('');\n// //     setTasks([]);\n// //     setView('login');\n// //   };\n\n// //   // Listen for taskAdded event to refresh tasks\n// //   React.useEffect(() => {\n// //     if (!token || view !== 'tasks') return;\n// //     const { getTasks } = require('./services/api');\n// //     const fetchTasks = async () => {\n// //       const fetched = await getTasks(token);\n// //       setTasks(Array.isArray(fetched) ? fetched : []);\n// //     };\n// //     fetchTasks();\n// //     const handler = () => fetchTasks();\n// //     window.addEventListener('taskAdded', handler);\n// //     return () => window.removeEventListener('taskAdded', handler);\n// //   }, [token, view]);\n\n// //   return (\n// //     <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\n// //       {!token && view === 'login' && (\n// //         <>\n// //           <Login onLogin={handleLogin} />\n// //           <p>\n// //             Pas de compte ?{' '}\n// //             <button onClick={() => setView('register')}>Inscrivez-vous</button>\n// //           </p>\n// //         </>\n// //       )}\n\n// //       {!token && view === 'register' && (\n// //         <>\n// //           <Register onRegister={() => setView('login')} />\n// //           <p>\n// //             Déjà un compte ?{' '}\n// //             <button onClick={() => setView('login')}>Connectez-vous</button>\n// //           </p>\n// //         </>\n// //       )}\n\n// //       {token && view === 'tasks' && (\n// //         <>\n// //           <button onClick={handleLogout}>Déconnexion</button>\n// //           <TaskForm token={token} />\n// //           <TaskList token={token} tasks={tasks} setTasks={setTasks} onEdit={() => {}} />\n// //         </>\n// //       )}\n// //     </div>\n// //   );\n// // }\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import IdeaForm from './components/IdeaForm';\n// import IdeaTable from './components/IdeaTable';\n// import { getTasks, getIdeas } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState('login');\n//   const [tasks, setTasks] = useState([]);\n//   const [ideas, setIdeas] = useState([]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n\n//     const fetchedIdeas = await getIdeas(jwt);\n//     setIdeas(Array.isArray(fetchedIdeas) ? fetchedIdeas : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setIdeas([]);\n//     setView('login');\n//   };\n\n//   // Rafraîchir les données quand on change de vue\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => setTasks(Array.isArray(data) ? data : []));\n//     }\n//     if (view === 'ideas') {\n//       getIdeas(token).then(data => setIdeas(Array.isArray(data) ? data : []));\n//     }\n//   }, [view, token]);\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm token={token} onSave={(newTask) => setTasks([...tasks, newTask])} />\n//           <TaskList token={token} tasks={tasks} setTasks={setTasks} />\n//         </>\n//       )}\n\n//       {token && view === 'ideas' && (\n//         <>\n//           <IdeaForm token={token} onSave={(newIdea) => setIdeas([...ideas, newIdea])} />\n//           <IdeaTable token={token} ideas={ideas} setIdeas={setIdeas} />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport IdeaTable from './components/IdeaTable';\nimport IdeaForm from './components/IdeaForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // état auth\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [isAuthenticated && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 27\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: () => setIsAuthenticated(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          onRegister: () => setIsAuthenticated(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ideas\",\n          element: /*#__PURE__*/_jsxDEV(IdeaTable, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/addidea\",\n          element: /*#__PURE__*/_jsxDEV(IdeaForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/ideas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Si pas connecté → rediriger vers login\n      _jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Login","Register","IdeaTable","IdeaForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","onRegister","to","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import Login from './components/Login';\r\n// // import Register from './components/Register';\r\n// // import TaskForm from './components/TaskForm';\r\n// // import TaskList from './components/TaskList';\r\n\r\n// // export default function App() {\r\n// //   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n// //   const [view, setView] = useState('login'); // login | register | tasks\r\n// //   const [tasks, setTasks] = useState([]);\r\n\r\n// //   const handleLogin = async (jwt) => {\r\n// //     localStorage.setItem('token', jwt);\r\n// //     setToken(jwt);\r\n// //     setView('tasks');\r\n// //     // Fetch tasks after login\r\n// //     const { getTasks } = await import('./services/api');\r\n// //     const fetched = await getTasks(jwt);\r\n// //     setTasks(Array.isArray(fetched) ? fetched : []);\r\n// //   };\r\n\r\n// //   const handleLogout = () => {\r\n// //     localStorage.removeItem('token');\r\n// //     setToken('');\r\n// //     setTasks([]);\r\n// //     setView('login');\r\n// //   };\r\n\r\n// //   // Listen for taskAdded event to refresh tasks\r\n// //   React.useEffect(() => {\r\n// //     if (!token || view !== 'tasks') return;\r\n// //     const { getTasks } = require('./services/api');\r\n// //     const fetchTasks = async () => {\r\n// //       const fetched = await getTasks(token);\r\n// //       setTasks(Array.isArray(fetched) ? fetched : []);\r\n// //     };\r\n// //     fetchTasks();\r\n// //     const handler = () => fetchTasks();\r\n// //     window.addEventListener('taskAdded', handler);\r\n// //     return () => window.removeEventListener('taskAdded', handler);\r\n// //   }, [token, view]);\r\n\r\n// //   return (\r\n// //     <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\r\n// //       {!token && view === 'login' && (\r\n// //         <>\r\n// //           <Login onLogin={handleLogin} />\r\n// //           <p>\r\n// //             Pas de compte ?{' '}\r\n// //             <button onClick={() => setView('register')}>Inscrivez-vous</button>\r\n// //           </p>\r\n// //         </>\r\n// //       )}\r\n\r\n// //       {!token && view === 'register' && (\r\n// //         <>\r\n// //           <Register onRegister={() => setView('login')} />\r\n// //           <p>\r\n// //             Déjà un compte ?{' '}\r\n// //             <button onClick={() => setView('login')}>Connectez-vous</button>\r\n// //           </p>\r\n// //         </>\r\n// //       )}\r\n\r\n// //       {token && view === 'tasks' && (\r\n// //         <>\r\n// //           <button onClick={handleLogout}>Déconnexion</button>\r\n// //           <TaskForm token={token} />\r\n// //           <TaskList token={token} tasks={tasks} setTasks={setTasks} onEdit={() => {}} />\r\n// //         </>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import IdeaForm from './components/IdeaForm';\r\n// import IdeaTable from './components/IdeaTable';\r\n// import { getTasks, getIdeas } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState('login');\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [ideas, setIdeas] = useState([]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n\r\n//     const fetchedIdeas = await getIdeas(jwt);\r\n//     setIdeas(Array.isArray(fetchedIdeas) ? fetchedIdeas : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setIdeas([]);\r\n//     setView('login');\r\n//   };\r\n\r\n//   // Rafraîchir les données quand on change de vue\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => setTasks(Array.isArray(data) ? data : []));\r\n//     }\r\n//     if (view === 'ideas') {\r\n//       getIdeas(token).then(data => setIdeas(Array.isArray(data) ? data : []));\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm token={token} onSave={(newTask) => setTasks([...tasks, newTask])} />\r\n//           <TaskList token={token} tasks={tasks} setTasks={setTasks} />\r\n//         </>\r\n//       )}\r\n\r\n//       {token && view === 'ideas' && (\r\n//         <>\r\n//           <IdeaForm token={token} onSave={(newIdea) => setIdeas([...ideas, newIdea])} />\r\n//           <IdeaTable token={token} ideas={ideas} setIdeas={setIdeas} />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport IdeaTable from './components/IdeaTable';\r\nimport IdeaForm from './components/IdeaForm';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // état auth\r\n\r\n  return (\r\n    <Router>\r\n      {isAuthenticated && <Navbar />} {/* Navbar seulement si connecté */}\r\n\r\n      <Routes>\r\n        {/* Pages publiques */}\r\n        <Route\r\n          path=\"/login\"\r\n          element={<Login onLogin={() => setIsAuthenticated(true)} />}\r\n        />\r\n        <Route\r\n          path=\"/register\"\r\n          element={<Register onRegister={() => setIsAuthenticated(true)} />}\r\n        />\r\n\r\n        {/* Pages privées */}\r\n        {isAuthenticated ? (\r\n          <>\r\n            <Route path=\"/ideas\" element={<IdeaTable />} />\r\n            <Route path=\"/addidea\" element={<IdeaForm />} />\r\n            <Route path=\"/\" element={<Navigate to=\"/ideas\" />} />\r\n          </>\r\n        ) : (\r\n          // Si pas connecté → rediriger vers login\r\n          <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/D,oBACEY,OAAA,CAACV,MAAM;IAAAiB,QAAA,GACJF,eAAe,iBAAIL,OAAA,CAACN,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC,eAEhCX,OAAA,CAACT,MAAM;MAAAgB,QAAA,gBAELP,OAAA,CAACR,KAAK;QACJoB,IAAI,EAAC,QAAQ;QACbC,OAAO,eAAEb,OAAA,CAACL,KAAK;UAACmB,OAAO,EAAEA,CAAA,KAAMR,kBAAkB,CAAC,IAAI;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACFX,OAAA,CAACR,KAAK;QACJoB,IAAI,EAAC,WAAW;QAChBC,OAAO,eAAEb,OAAA,CAACJ,QAAQ;UAACmB,UAAU,EAAEA,CAAA,KAAMT,kBAAkB,CAAC,IAAI;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,EAGDN,eAAe,gBACdL,OAAA,CAAAE,SAAA;QAAAK,QAAA,gBACEP,OAAA,CAACR,KAAK;UAACoB,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEb,OAAA,CAACH,SAAS;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CX,OAAA,CAACR,KAAK;UAACoB,IAAI,EAAC,UAAU;UAACC,OAAO,eAAEb,OAAA,CAACF,QAAQ;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChDX,OAAA,CAACR,KAAK;UAACoB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEb,OAAA,CAACP,QAAQ;YAACuB,EAAE,EAAC;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACrD,CAAC;MAAA;MAEH;MACAX,OAAA,CAACR,KAAK;QAACoB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEb,OAAA,CAACP,QAAQ;UAACuB,EAAE,EAAC;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACrD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACP,EAAA,CAhCQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}