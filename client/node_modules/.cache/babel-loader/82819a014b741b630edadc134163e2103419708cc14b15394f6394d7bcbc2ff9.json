{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\components\\\\TaskForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { createTask } from '../services/api';\n\n// export default function TaskForm({ token }) {\n//   const [title, setTitle] = useState('');\n//   const [dueDate, setDueDate] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     setSuccess('');\n//     if (!title) {\n//       setError('Le titre est obligatoire');\n//       return;\n//     }\n//     const result = await createTask(token, { title, dueDate });\n//     if (result._id) {\n//       setSuccess('Tâche créée !');\n//       setTitle('');\n//       setDueDate('');\n//       window.dispatchEvent(new Event('taskAdded')); // événement pour rafraichir la liste\n//     } else {\n//       setError(result.error || 'Erreur création tâche');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h3>Ajouter une tâche</h3>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Titre\"\n//         value={title}\n//         onChange={e => setTitle(e.target.value)}\n//         required\n//       />\n//       <br />\n//       <input\n//         type=\"date\"\n//         value={dueDate}\n//         onChange={e => setDueDate(e.target.value)}\n//       />\n//       <br />\n//       <button type=\"submit\">Ajouter</button>\n//       {success && <p style={{color: 'green'}}>{success}</p>}\n//       {error && <p style={{color: 'red'}}>{error}</p>}\n//     </form>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm({\n  token,\n  onSave,\n  editingTask,\n  cancelEdit\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [status, setStatus] = useState('pending');\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title);\n      setDescription(editingTask.description);\n      setDueDate(editingTask.dueDate.substring(0, 10));\n      setStatus(editingTask.status);\n    }\n  }, [editingTask]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert('Le titre est requis');\n      return;\n    }\n    const updatedTask = {\n      title,\n      description,\n      dueDate,\n      status\n    };\n    await onSave(updatedTask);\n    if (!editingTask) {\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      setStatus('pending');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"En attente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Termin\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: editingTask ? 'Mettre à jour' : 'Ajouter'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: cancelEdit,\n      children: \"Annuler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"KPxrmn7y8sI/Po8FI9lJvUSIL/4=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","token","onSave","editingTask","cancelEdit","_s","title","setTitle","description","setDescription","dueDate","setDueDate","status","setStatus","substring","handleSubmit","e","preventDefault","trim","alert","updatedTask","onSubmit","children","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/components/TaskForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { createTask } from '../services/api';\r\n\r\n// export default function TaskForm({ token }) {\r\n//   const [title, setTitle] = useState('');\r\n//   const [dueDate, setDueDate] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [success, setSuccess] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     setSuccess('');\r\n//     if (!title) {\r\n//       setError('Le titre est obligatoire');\r\n//       return;\r\n//     }\r\n//     const result = await createTask(token, { title, dueDate });\r\n//     if (result._id) {\r\n//       setSuccess('Tâche créée !');\r\n//       setTitle('');\r\n//       setDueDate('');\r\n//       window.dispatchEvent(new Event('taskAdded')); // événement pour rafraichir la liste\r\n//     } else {\r\n//       setError(result.error || 'Erreur création tâche');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <h3>Ajouter une tâche</h3>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Titre\"\r\n//         value={title}\r\n//         onChange={e => setTitle(e.target.value)}\r\n//         required\r\n//       />\r\n//       <br />\r\n//       <input\r\n//         type=\"date\"\r\n//         value={dueDate}\r\n//         onChange={e => setDueDate(e.target.value)}\r\n//       />\r\n//       <br />\r\n//       <button type=\"submit\">Ajouter</button>\r\n//       {success && <p style={{color: 'green'}}>{success}</p>}\r\n//       {error && <p style={{color: 'red'}}>{error}</p>}\r\n//     </form>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nexport default function TaskForm({ token, onSave, editingTask, cancelEdit }) {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [status, setStatus] = useState('pending');\r\n\r\n  useEffect(() => {\r\n    if (editingTask) {\r\n      setTitle(editingTask.title);\r\n      setDescription(editingTask.description);\r\n      setDueDate(editingTask.dueDate.substring(0, 10));\r\n      setStatus(editingTask.status);\r\n    }\r\n  }, [editingTask]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) {\r\n      alert('Le titre est requis');\r\n      return;\r\n    }\r\n    const updatedTask = { title, description, dueDate, status };\r\n    await onSave(updatedTask);\r\n    if (!editingTask) {\r\n      setTitle('');\r\n      setDescription('');\r\n      setDueDate('');\r\n      setStatus('pending');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n      <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\r\n      <input type=\"date\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} />\r\n      <select value={status} onChange={(e) => setStatus(e.target.value)}>\r\n        <option value=\"pending\">En attente</option>\r\n        <option value=\"completed\">Terminé</option>\r\n      </select>\r\n      <button type=\"submit\">{editingTask ? 'Mettre à jour' : 'Ajouter'}</button>\r\n      {editingTask && <button type=\"button\" onClick={cancelEdit}>Annuler</button>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}