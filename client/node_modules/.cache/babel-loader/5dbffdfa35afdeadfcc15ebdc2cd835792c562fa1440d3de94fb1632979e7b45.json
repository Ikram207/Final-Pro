{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// // ======== FAKE API simulée ==========\n// const fakeApi = {\n//   users: [],\n//   tasks: [],\n//   register(name, email, password) {\n//     return new Promise((resolve) => {\n//       setTimeout(() => {\n//         if (this.users.some((u) => u.email === email)) {\n//           resolve({ error: \"Cet email est déjà utilisé.\" });\n//         } else {\n//           this.users.push({ name, email, password });\n//           resolve({ message: \"Inscription réussie\" });\n//         }\n//       }, 500);\n//     });\n//   },\n//   login(email, password) {\n//     return new Promise((resolve) => {\n//       setTimeout(() => {\n//         const user = this.users.find(\n//           (u) => u.email === email && u.password === password\n//         );\n//         if (user) {\n//           resolve({ token: \"fake-jwt-token\", name: user.name });\n//         } else {\n//           resolve({ message: \"Email ou mot de passe incorrect\" });\n//         }\n//       }, 500);\n//     });\n//   },\n//   getTasks() {\n//     return new Promise((resolve) => {\n//       setTimeout(() => resolve(this.tasks), 300);\n//     });\n//   },\n//   createTask(task) {\n//     return new Promise((resolve) => {\n//       const newTask = { ...task, id: Date.now() };\n//       this.tasks.push(newTask);\n//       setTimeout(() => resolve(newTask), 300);\n//     });\n//   },\n//   updateTask(id, updated) {\n//     return new Promise((resolve) => {\n//       this.tasks = this.tasks.map((t) =>\n//         t.id === id ? { ...t, ...updated } : t\n//       );\n//       setTimeout(() => resolve(this.tasks.find((t) => t.id === id)), 300);\n//     });\n//   },\n//   deleteTask(id) {\n//     return new Promise((resolve) => {\n//       this.tasks = this.tasks.filter((t) => t.id !== id);\n//       setTimeout(() => resolve({ success: true }), 300);\n//     });\n//   },\n// };\n\n// // ======== Composant Navbar ==========\n// function Navbar({ onLogout, userName }) {\n//   return (\n//     <nav\n//       style={{\n//         backgroundColor: \"#007BFF\",\n//         padding: \"10px 20px\",\n//         color: \"#fff\",\n//         display: \"flex\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"center\",\n//         fontWeight: \"bold\",\n//         fontSize: \"1.2rem\",\n//         marginBottom: 20,\n//         borderRadius: 6,\n//       }}\n//     >\n//       <div>Mon App Tâches - Bonjour {userName}</div>\n//       <button\n//         onClick={() => {\n//           if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\n//             onLogout();\n//           }\n//         }}\n//         style={{\n//           backgroundColor: \"#dc3545\",\n//           color: \"white\",\n//           border: \"none\",\n//           padding: \"6px 12px\",\n//           borderRadius: 4,\n//           cursor: \"pointer\",\n//         }}\n//       >\n//         Déconnexion\n//       </button>\n//     </nav>\n//   );\n// }\n\n// // ======== Login ==========\n// function Login({ onLogin }) {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     const result = await fakeApi.login(email, password);\n//     if (result.token) {\n//       onLogin(result.token, result.name);\n//     } else {\n//       setError(result.message || \"Erreur de connexion\");\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         maxWidth: 350,\n//         margin: \"40px auto\",\n//         padding: 20,\n//         border: \"1px solid #ccc\",\n//         borderRadius: 8,\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Connexion</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Mot de passe\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <button\n//           type=\"submit\"\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             backgroundColor: \"#007BFF\",\n//             color: \"white\",\n//             fontWeight: \"bold\",\n//             border: \"none\",\n//             borderRadius: 5,\n//             cursor: \"pointer\",\n//           }}\n//         >\n//           Se connecter\n//         </button>\n//         {error && (\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\n//             {error}\n//           </p>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }\n\n// // ======== Register ==========\n// function Register({ onRegister }) {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setSuccess(\"\");\n//     const result = await fakeApi.register(name, email, password);\n//     if (result.message) {\n//       setSuccess(\"Inscription réussie ! Vous pouvez vous connecter.\");\n//       setName(\"\");\n//       setEmail(\"\");\n//       setPassword(\"\");\n//       setTimeout(() => {\n//         onRegister();\n//       }, 1500);\n//     } else {\n//       setError(result.error || \"Erreur lors de l'inscription\");\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         maxWidth: 350,\n//         margin: \"40px auto\",\n//         padding: 20,\n//         border: \"1px solid #ccc\",\n//         borderRadius: 8,\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Inscription</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Nom\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Mot de passe\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <button\n//           type=\"submit\"\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             backgroundColor: \"#007BFF\",\n//             color: \"white\",\n//             fontWeight: \"bold\",\n//             border: \"none\",\n//             borderRadius: 5,\n//             cursor: \"pointer\",\n//           }}\n//         >\n//           S'inscrire\n//         </button>\n//         {success && (\n//           <p style={{ color: \"green\", marginTop: 15, textAlign: \"center\" }}>\n//             {success}\n//           </p>\n//         )}\n//         {error && (\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\n//             {error}\n//           </p>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }\n\n// // ======== TaskForm ==========\n// function TaskForm({ onSave, editingTask, cancelEdit }) {\n//   const [title, setTitle] = useState(\"\");\n//   const [status, setStatus] = useState(\"pending\");\n//   const [dueDate, setDueDate] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n\n//   useEffect(() => {\n//     if (editingTask) {\n//       setTitle(editingTask.title || \"\");\n//       setStatus(editingTask.status || \"pending\");\n//       setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\n//       setDescription(editingTask.description || \"\");\n//     } else {\n//       setTitle(\"\");\n//       setStatus(\"pending\");\n//       setDueDate(\"\");\n//       setDescription(\"\");\n//     }\n//   }, [editingTask]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!title.trim()) {\n//       alert(\"Le titre est obligatoire\");\n//       return;\n//     }\n//     onSave({ title, status, dueDate, description });\n//   };\n\n//   return (\n//     <form\n//       onSubmit={handleSubmit}\n//       style={{\n//         marginBottom: 20,\n//         border: \"1px solid #ccc\",\n//         padding: 15,\n//         borderRadius: 6,\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <h3>{editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"}</h3>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Titre :</label>\n//         <br />\n//         <input\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//           style={{ width: \"100%\", padding: 5 }}\n//         />\n//       </div>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Statut :</label>\n//         <br />\n//         <select\n//           value={status}\n//           onChange={(e) => setStatus(e.target.value)}\n//           required\n//           style={{ width: \"100%\", padding: 5 }}\n//         >\n//           <option value=\"pending\">En attente</option>\n//           <option value=\"in-progress\">En cours</option>\n//           <option value=\"done\">Terminé</option>\n//         </select>\n//       </div>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Date limite :</label>\n//         <br />\n//         <input\n//           type=\"date\"\n//           value={dueDate}\n//           onChange={(e) => setDueDate(e.target.value)}\n//           style={{ width: \"100%\", padding: 5 }}\n//         />\n//       </div>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Description :</label>\n//         <br />\n//         <textarea\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           style={{ width: \"100%\", padding: 5 }}\n//         />\n//       </div>\n\n//       <button type=\"submit\" style={{ padding: \"5px 10px\" }}>\n//         {editingTask ? \"Mettre à jour\" : \"Enregistrer\"}\n//       </button>\n\n//       {editingTask && (\n//         <button\n//           type=\"button\"\n//           onClick={cancelEdit}\n//           style={{ padding: \"5px 10px\", marginLeft: 10, background: \"#ccc\" }}\n//         >\n//           Annuler\n//         </button>\n//       )}\n//     </form>\n//   );\n// }\n\n// // ======== TaskList ==========\n// const statusColors = {\n//   pending: \"#f0ad4e\",\n//   \"in-progress\": \"#0275d8\",\n//   done: \"#5cb85c\",\n// };\n\n// function TaskList({ tasks, onEdit, onDelete }) {\n//   return (\n//     <table\n//       style={{\n//         width: \"100%\",\n//         borderCollapse: \"collapse\",\n//         boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <thead>\n//         <tr style={{ backgroundColor: \"#007BFF\", color: \"#fff\", textAlign: \"left\" }}>\n//           <th style={{ padding: \"10px\" }}>Titre</th>\n//           <th style={{ padding: \"10px\" }}>Statut</th>\n//           <th style={{ padding: \"10px\" }}>Date limite</th>\n//           <th style={{ padding: \"10px\" }}>Description</th>\n//           <th style={{ padding: \"10px\" }}>Actions</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {tasks.length > 0 ? (\n//           tasks.map((task) => (\n//             <tr\n//               key={task.id}\n//               style={{\n//                 borderBottom: \"1px solid #ddd\",\n//                 transition: \"background-color 0.3s\",\n//                 cursor: \"default\",\n//               }}\n//               onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#f9f9f9\")}\n//               onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"\")}\n//             >\n//               <td style={{ padding: \"8px\" }}>{task.title || \"Titre manquant\"}</td>\n//               <td style={{ padding: \"8px\" }}>\n//                 <span\n//                   style={{\n//                     padding: \"4px 8px\",\n//                     borderRadius: 12,\n//                     color: \"#fff\",\n//                     backgroundColor: statusColors[task.status] || \"#6c757d\",\n//                     fontWeight: \"bold\",\n//                     textTransform: \"capitalize\",\n//                     fontSize: \"0.9rem\",\n//                     display: \"inline-block\",\n//                     minWidth: 90,\n//                     textAlign: \"center\",\n//                   }}\n//                 >\n//                   {task.status || \"Statut manquant\"}\n//                 </span>\n//               </td>\n//               <td style={{ padding: \"8px\" }}>\n//                 {task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"}\n//               </td>\n//               <td style={{ padding: \"8px\" }}>{task.description || \"Description manquante\"}</td>\n//               <td style={{ padding: \"8px\" }}>\n//                 <button\n//                   onClick={() => onEdit(task)}\n//                   style={{\n//                     cursor: \"pointer\",\n//                     marginRight: 8,\n//                     backgroundColor: \"#ffc107\",\n//                     border: \"none\",\n//                     borderRadius: 4,\n//                     padding: \"4px 8px\",\n//                   }}\n//                   title=\"Modifier\"\n//                 >\n//                   ✏️\n//                 </button>\n//                 <button\n//                   onClick={() => {\n//                     if (window.confirm(\"Confirmer la suppression ?\")) onDelete(task.id);\n//                   }}\n//                   style={{\n//                     cursor: \"pointer\",\n//                     backgroundColor: \"#dc3545\",\n//                     border: \"none\",\n//                     borderRadius: 4,\n//                     padding: \"4px 8px\",\n//                     color: \"#fff\",\n//                   }}\n//                   title=\"Supprimer\"\n//                 >\n//                   🗑️\n//                 </button>\n//               </td>\n//             </tr>\n//           ))\n//         ) : (\n//           <tr>\n//             <td colSpan=\"5\" style={{ textAlign: \"center\", padding: 20 }}>\n//               Aucune tâche disponible\n//             </td>\n//           </tr>\n//         )}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// // ======== APP PRINCIPAL ==========\n// export default function App() {\n//   const [token, setToken] = useState(\"\");\n//   const [userName, setUserName] = useState(\"\");\n//   const [view, setView] = useState(\"login\"); // login | register | dashboard\n\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n\n//   // Charger les tâches quand on est connecté et sur dashboard\n//   useEffect(() => {\n//     if (token && view === \"dashboard\") {\n//       fakeApi.getTasks().then(setTasks);\n//     }\n//   }, [token, view]);\n\n//   // Connexion réussie\n//   const handleLogin = (jwt, name) => {\n//     setToken(jwt);\n//     setUserName(name);\n//     setView(\"dashboard\");\n//   };\n\n//   // Déconnexion\n//   const handleLogout = () => {\n//     setToken(\"\");\n//     setUserName(\"\");\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView(\"login\");\n//   };\n\n//   // Enregistrer / modifier tâche\n//   const handleSaveTask = (taskData) => {\n//     if (editingTask) {\n//       fakeApi.updateTask(editingTask.id, taskData).then((updated) => {\n//         setTasks(tasks.map((t) => (t.id === updated.id ? updated : t)));\n//         setEditingTask(null);\n//       });\n//     } else {\n//       fakeApi.createTask(taskData).then((newTask) => {\n//         setTasks([...tasks, newTask]);\n//       });\n//     }\n//   };\n\n//   // Supprimer tâche\n//   const handleDeleteTask = (id) => {\n//     fakeApi.deleteTask(id).then(() => {\n//       setTasks(tasks.filter((t) => t.id !== id));\n//       if (editingTask && editingTask.id === id) {\n//         setEditingTask(null);\n//       }\n//     });\n//   };\n\n//   if (view === \"login\") {\n//     return (\n//       <>\n//         <Login onLogin={handleLogin} />\n//         <p style={{ textAlign: \"center\" }}>\n//           Pas encore de compte ?{\" \"}\n//           <button\n//             onClick={() => setView(\"register\")}\n//             style={{\n//               color: \"blue\",\n//               cursor: \"pointer\",\n//               border: \"none\",\n//               background: \"none\",\n//               padding: 0,\n//             }}\n//           >\n//             Inscrivez-vous\n//           </button>\n//         </p>\n//       </>\n//     );\n//   }\n\n//   if (view === \"register\") {\n//     return (\n//       <>\n//         <Register onRegister={() => setView(\"login\")} />\n//         <p style={{ textAlign: \"center\" }}>\n//           Déjà un compte ?{\" \"}\n//           <button\n//             onClick={() => setView(\"login\")}\n//             style={{\n//               color: \"blue\",\n//               cursor: \"pointer\",\n//               border: \"none\",\n//               background: \"none\",\n//               padding: 0,\n//             }}\n//           >\n//             Connectez-vous\n//           </button>\n//         </p>\n//       </>\n//     );\n//   }\n\n//   if (view === \"dashboard\") {\n//     return (\n//       <div\n//         style={{\n//           maxWidth: 900,\n//           margin: \"auto\",\n//           padding: 20,\n//                    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n//           backgroundColor: \"#f5f5f5\",\n//           minHeight: \"100vh\",\n//         }}\n//       >\n//         <Navbar onLogout={handleLogout} userName={userName} />\n\n//         <TaskForm\n//           onSave={handleSaveTask}\n//           editingTask={editingTask}\n//           cancelEdit={() => setEditingTask(null)}\n//         />\n\n//         <TaskList\n//           tasks={tasks}\n//           onEdit={setEditingTask}\n//           onDelete={handleDeleteTask}\n//         />\n//       </div>\n//     );\n//   }\n\n//   return null; // fallback, ne devrait jamais arriver\n// }\nimport React, { useState, useEffect } from \"react\";\n\n// ======== Fake API simulée ========\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeApi = {\n  users: [],\n  tasks: [],\n  register(name, email, password) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (this.users.some(u => u.email === email)) {\n          resolve({\n            error: \"Cet email est déjà utilisé.\"\n          });\n        } else {\n          this.users.push({\n            name,\n            email,\n            password\n          });\n          resolve({\n            message: \"Inscription réussie\"\n          });\n        }\n      }, 500);\n    });\n  },\n  login(email, password) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const user = this.users.find(u => u.email === email && u.password === password);\n        if (user) {\n          resolve({\n            token: \"fake-jwt-token\",\n            name: user.name\n          });\n        } else {\n          resolve({\n            message: \"Email ou mot de passe incorrect\"\n          });\n        }\n      }, 500);\n    });\n  },\n  getTasks() {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(this.tasks), 300);\n    });\n  },\n  createTask(task) {\n    return new Promise(resolve => {\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      this.tasks.push(newTask);\n      setTimeout(() => resolve(newTask), 300);\n    });\n  },\n  updateTask(id, updated) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.map(t => t.id === id ? {\n        ...t,\n        ...updated\n      } : t);\n      setTimeout(() => resolve(this.tasks.find(t => t.id === id)), 300);\n    });\n  },\n  deleteTask(id) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.filter(t => t.id !== id);\n      setTimeout(() => resolve({\n        success: true\n      }), 300);\n    });\n  }\n};\n\n// ======== Navbar ========\nfunction Navbar({\n  onLogout,\n  userName\n}) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    style: {\n      backgroundColor: \"#007BFF\",\n      padding: \"10px 20px\",\n      color: \"#fff\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      fontWeight: \"bold\",\n      fontSize: \"1.2rem\",\n      marginBottom: 20,\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Mon App T\\xE2ches - Bonjour \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\n          onLogout();\n        }\n      },\n      style: {\n        backgroundColor: \"#dc3545\",\n        color: \"white\",\n        border: \"none\",\n        padding: \"6px 12px\",\n        borderRadius: 4,\n        cursor: \"pointer\"\n      },\n      children: \"D\\xE9connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 705,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== Login ========\n_c = Navbar;\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    const result = await fakeApi.login(email, password);\n    if (result.token) {\n      onLogin(result.token, result.name);\n    } else {\n      setError(result.message || \"Erreur de connexion\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 350,\n      margin: \"40px auto\",\n      padding: 20,\n      border: \"1px solid #ccc\",\n      borderRadius: 8,\n      backgroundColor: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 20\n      },\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 15,\n          borderRadius: 5,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Mot de passe\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 15,\n          borderRadius: 5,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: \"100%\",\n          padding: 10,\n          backgroundColor: \"#007BFF\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          borderRadius: 5,\n          cursor: \"pointer\"\n        },\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          marginTop: 15,\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 759,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== Register ========\n_s(Login, \"/oUdbphBttpIcUsa7P1v1069QkA=\");\n_c2 = Login;\nfunction Register({\n  onRegister\n}) {\n  _s2();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleRegister = e => {\n    e.preventDefault();\n    // Ici, tu pourrais envoyer vers ton API\n    alert(`Compte créé pour ${name}`);\n    onRegister();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: \"50px auto\",\n      padding: 20,\n      border: \"1px solid #ccc\",\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cr\\xE9er un compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nom :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: 5,\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: 5,\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mot de passe :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: 5,\n            marginBottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"6px 12px\",\n          backgroundColor: \"#007BFF\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: 4\n        },\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 10,\n        textAlign: \"center\"\n      },\n      children: [\"D\\xE9j\\xE0 un compte ?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRegister,\n        style: {\n          color: \"blue\",\n          background: \"none\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 801,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== TaskFilter ========\n_s2(Register, \"U1DCtFSIKcmCKgpSr3L7jOg/618=\");\n_c3 = Register;\nfunction TaskFilter({\n  onFilterChange\n}) {\n  _s3();\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortField, setSortField] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  useEffect(() => {\n    onFilterChange({\n      status: statusFilter,\n      search: searchTerm,\n      sortField,\n      sortOrder\n    });\n  }, [statusFilter, searchTerm, sortField, sortOrder, onFilterChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20,\n      display: \"flex\",\n      gap: 10,\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: statusFilter,\n      onChange: e => setStatusFilter(e.target.value),\n      style: {\n        padding: \"6px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Tous les statuts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"En attente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"in-progress\",\n        children: \"En cours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"done\",\n        children: \"Termin\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Rechercher...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      style: {\n        padding: \"6px\",\n        flexGrow: 1,\n        minWidth: 150\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: sortField,\n      onChange: e => setSortField(e.target.value),\n      style: {\n        padding: \"6px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Trier par\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"title\",\n        children: \"Titre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"dueDate\",\n        children: \"Date limite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"status\",\n        children: \"Statut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: sortOrder,\n      onChange: e => setSortOrder(e.target.value),\n      style: {\n        padding: \"6px\"\n      },\n      disabled: !sortField,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"asc\",\n        children: \"Ascendant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"desc\",\n        children: \"Descendant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 842,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== TaskForm ========\n_s3(TaskFilter, \"Mo7qckIu+awYkzeCKOMd8LemI00=\");\n_c4 = TaskFilter;\nfunction TaskForm({\n  onSave,\n  editingTask,\n  cancelEdit\n}) {\n  _s4();\n  const [title, setTitle] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title || \"\");\n      setStatus(editingTask.status || \"pending\");\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\n      setDescription(editingTask.description || \"\");\n    } else {\n      setTitle(\"\");\n      setStatus(\"pending\");\n      setDueDate(\"\");\n      setDescription(\"\");\n    }\n  }, [editingTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert(\"Le titre est obligatoire\");\n      return;\n    }\n    onSave({\n      title,\n      status,\n      dueDate,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: 20,\n      border: \"1px solid #ccc\",\n      padding: 15,\n      borderRadius: 6,\n      backgroundColor: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Titre :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Statut :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"En attente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Termin\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date limite :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        rows: 3,\n        style: {\n          width: \"100%\",\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginRight: 10,\n          padding: \"6px 12px\",\n          border: \"none\",\n          borderRadius: 4,\n          backgroundColor: \"#007BFF\",\n          color: \"#fff\",\n          cursor: \"pointer\"\n        },\n        children: editingTask ? \"Mettre à jour\" : \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 9\n      }, this), editingTask && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelEdit,\n        style: {\n          padding: \"6px 12px\",\n          border: \"none\",\n          borderRadius: 4,\n          backgroundColor: \"#6c757d\",\n          color: \"#fff\",\n          cursor: \"pointer\"\n        },\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 898,\n    columnNumber: 5\n  }, this);\n}\n// ======== TaskList ========\n_s4(TaskForm, \"wMPaLzBV1C+1Yc+RYgJrjY/LpNE=\");\n_c5 = TaskForm;\nconst statusColors = {\n  pending: \"#f0ad4e\",\n  \"in-progress\": \"#0275d8\",\n  done: \"#5cb85c\"\n};\nfunction TaskList({\n  tasks,\n  onEdit,\n  onDelete\n}) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\",\n      boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\n      backgroundColor: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          backgroundColor: \"#007BFF\",\n          color: \"#fff\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: \"Statut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: \"Date limite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          borderBottom: \"1px solid #ddd\",\n          cursor: \"default\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: \"8px\"\n          },\n          children: task.title || \"Titre manquant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: \"8px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"4px 8px\",\n              borderRadius: 12,\n              color: \"#fff\",\n              backgroundColor: statusColors[task.status] || \"#6c757d\",\n              fontWeight: \"bold\",\n              textTransform: \"capitalize\",\n              fontSize: \"0.9rem\",\n              display: \"inline-block\",\n              minWidth: 90,\n              textAlign: \"center\"\n            },\n            children: task.status || \"Statut manquant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: \"8px\"\n          },\n          children: task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: \"8px\"\n          },\n          children: task.description || \"Description manquante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onEdit(task),\n            style: {\n              cursor: \"pointer\",\n              marginRight: 8,\n              backgroundColor: \"#ffc107\",\n              border: \"none\",\n              borderRadius: 4,\n              padding: \"4px 8px\"\n            },\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (window.confirm(\"Confirmer la suppression ?\")) onDelete(task.id);\n            },\n            style: {\n              cursor: \"pointer\",\n              backgroundColor: \"#dc3545\",\n              border: \"none\",\n              borderRadius: 4,\n              padding: \"4px 8px\",\n              color: \"#fff\"\n            },\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"5\",\n          style: {\n            textAlign: \"center\",\n            padding: 10\n          },\n          children: \"Aucune t\\xE2che disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 947,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== App ========\n_c6 = TaskList;\nexport default function App() {\n  _s5();\n  const [view, setView] = useState(\"login\"); // \"login\" | \"register\" | \"dashboard\"\n  const [token, setToken] = useState(null);\n  const [userName, setUserName] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  const [filter, setFilter] = useState({\n    status: \"\",\n    search: \"\",\n    sortField: \"\",\n    sortOrder: \"asc\"\n  });\n  useEffect(() => {\n    if (token) {\n      fetchTasks();\n    }\n  }, [token]);\n  const fetchTasks = async () => {\n    let data = await fakeApi.getTasks();\n\n    // Filtrage\n    if (filter.status) {\n      data = data.filter(t => t.status === filter.status);\n    }\n    if (filter.search) {\n      data = data.filter(t => t.title.toLowerCase().includes(filter.search.toLowerCase()));\n    }\n    // Tri\n    if (filter.sortField) {\n      data.sort((a, b) => {\n        let aField = a[filter.sortField] || \"\";\n        let bField = b[filter.sortField] || \"\";\n        if (filter.sortField === \"dueDate\") {\n          aField = aField || \"9999-12-31\";\n          bField = bField || \"9999-12-31\";\n        }\n        if (aField < bField) return filter.sortOrder === \"asc\" ? -1 : 1;\n        if (aField > bField) return filter.sortOrder === \"asc\" ? 1 : -1;\n        return 0;\n      });\n    }\n    setTasks(data);\n  };\n  const handleSaveTask = async task => {\n    if (editingTask) {\n      await fakeApi.updateTask(editingTask.id, task);\n      setEditingTask(null);\n    } else {\n      await fakeApi.createTask(task);\n    }\n    fetchTasks();\n  };\n  const handleDeleteTask = async id => {\n    await fakeApi.deleteTask(id);\n    fetchTasks();\n  };\n  const handleEditTask = task => {\n    setEditingTask(task);\n  };\n  const handleLogout = () => {\n    setToken(null);\n    setUserName(\"\");\n    setView(\"login\");\n    setTasks([]);\n  };\n\n  // ======== Vue ========\n  if (!token) {\n    return view === \"login\" ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: (t, name) => {\n        setToken(t);\n        setUserName(name);\n        setView(\"dashboard\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onRegister: () => setView(\"login\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 124\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 900,\n      margin: \"20px auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onLogout: handleLogout,\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: handleSaveTask,\n      editingTask: editingTask,\n      cancelEdit: () => setEditingTask(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n      onFilterChange: f => {\n        setFilter(f);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onEdit: handleEditTask,\n      onDelete: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1060,\n    columnNumber: 5\n  }, this);\n}\n_s5(App, \"GUInZa6ZprUiDeslooDcUsYcqw0=\");\n_c7 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Login\");\n$RefreshReg$(_c3, \"Register\");\n$RefreshReg$(_c4, \"TaskFilter\");\n$RefreshReg$(_c5, \"TaskForm\");\n$RefreshReg$(_c6, \"TaskList\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fakeApi","users","tasks","register","name","email","password","Promise","resolve","setTimeout","some","u","error","push","message","login","user","find","token","getTasks","createTask","task","newTask","id","Date","now","updateTask","updated","map","t","deleteTask","filter","success","Navbar","onLogout","userName","style","backgroundColor","padding","color","display","justifyContent","alignItems","fontWeight","fontSize","marginBottom","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","confirm","border","cursor","_c","Login","onLogin","_s","setEmail","setPassword","setError","handleSubmit","e","preventDefault","result","maxWidth","margin","textAlign","onSubmit","type","placeholder","value","onChange","target","required","width","marginTop","_c2","Register","onRegister","_s2","setName","handleRegister","alert","background","_c3","TaskFilter","onFilterChange","_s3","statusFilter","setStatusFilter","searchTerm","setSearchTerm","sortField","setSortField","sortOrder","setSortOrder","status","search","gap","flexWrap","flexGrow","minWidth","disabled","_c4","TaskForm","onSave","editingTask","cancelEdit","_s4","title","setTitle","setStatus","dueDate","setDueDate","description","setDescription","substring","trim","rows","marginRight","_c5","statusColors","pending","done","TaskList","onEdit","onDelete","borderCollapse","boxShadow","length","borderBottom","textTransform","colSpan","_c6","App","_s5","view","setView","setToken","setUserName","setTasks","setEditingTask","setFilter","fetchTasks","data","toLowerCase","includes","sort","a","b","aField","bField","handleSaveTask","handleDeleteTask","handleEditTask","handleLogout","f","_c7","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// // ======== FAKE API simulée ==========\r\n// const fakeApi = {\r\n//   users: [],\r\n//   tasks: [],\r\n//   register(name, email, password) {\r\n//     return new Promise((resolve) => {\r\n//       setTimeout(() => {\r\n//         if (this.users.some((u) => u.email === email)) {\r\n//           resolve({ error: \"Cet email est déjà utilisé.\" });\r\n//         } else {\r\n//           this.users.push({ name, email, password });\r\n//           resolve({ message: \"Inscription réussie\" });\r\n//         }\r\n//       }, 500);\r\n//     });\r\n//   },\r\n//   login(email, password) {\r\n//     return new Promise((resolve) => {\r\n//       setTimeout(() => {\r\n//         const user = this.users.find(\r\n//           (u) => u.email === email && u.password === password\r\n//         );\r\n//         if (user) {\r\n//           resolve({ token: \"fake-jwt-token\", name: user.name });\r\n//         } else {\r\n//           resolve({ message: \"Email ou mot de passe incorrect\" });\r\n//         }\r\n//       }, 500);\r\n//     });\r\n//   },\r\n//   getTasks() {\r\n//     return new Promise((resolve) => {\r\n//       setTimeout(() => resolve(this.tasks), 300);\r\n//     });\r\n//   },\r\n//   createTask(task) {\r\n//     return new Promise((resolve) => {\r\n//       const newTask = { ...task, id: Date.now() };\r\n//       this.tasks.push(newTask);\r\n//       setTimeout(() => resolve(newTask), 300);\r\n//     });\r\n//   },\r\n//   updateTask(id, updated) {\r\n//     return new Promise((resolve) => {\r\n//       this.tasks = this.tasks.map((t) =>\r\n//         t.id === id ? { ...t, ...updated } : t\r\n//       );\r\n//       setTimeout(() => resolve(this.tasks.find((t) => t.id === id)), 300);\r\n//     });\r\n//   },\r\n//   deleteTask(id) {\r\n//     return new Promise((resolve) => {\r\n//       this.tasks = this.tasks.filter((t) => t.id !== id);\r\n//       setTimeout(() => resolve({ success: true }), 300);\r\n//     });\r\n//   },\r\n// };\r\n\r\n// // ======== Composant Navbar ==========\r\n// function Navbar({ onLogout, userName }) {\r\n//   return (\r\n//     <nav\r\n//       style={{\r\n//         backgroundColor: \"#007BFF\",\r\n//         padding: \"10px 20px\",\r\n//         color: \"#fff\",\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//         fontWeight: \"bold\",\r\n//         fontSize: \"1.2rem\",\r\n//         marginBottom: 20,\r\n//         borderRadius: 6,\r\n//       }}\r\n//     >\r\n//       <div>Mon App Tâches - Bonjour {userName}</div>\r\n//       <button\r\n//         onClick={() => {\r\n//           if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\r\n//             onLogout();\r\n//           }\r\n//         }}\r\n//         style={{\r\n//           backgroundColor: \"#dc3545\",\r\n//           color: \"white\",\r\n//           border: \"none\",\r\n//           padding: \"6px 12px\",\r\n//           borderRadius: 4,\r\n//           cursor: \"pointer\",\r\n//         }}\r\n//       >\r\n//         Déconnexion\r\n//       </button>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n// // ======== Login ==========\r\n// function Login({ onLogin }) {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     const result = await fakeApi.login(email, password);\r\n//     if (result.token) {\r\n//       onLogin(result.token, result.name);\r\n//     } else {\r\n//       setError(result.message || \"Erreur de connexion\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         maxWidth: 350,\r\n//         margin: \"40px auto\",\r\n//         padding: 20,\r\n//         border: \"1px solid #ccc\",\r\n//         borderRadius: 8,\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Connexion</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Mot de passe\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             backgroundColor: \"#007BFF\",\r\n//             color: \"white\",\r\n//             fontWeight: \"bold\",\r\n//             border: \"none\",\r\n//             borderRadius: 5,\r\n//             cursor: \"pointer\",\r\n//           }}\r\n//         >\r\n//           Se connecter\r\n//         </button>\r\n//         {error && (\r\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\r\n//             {error}\r\n//           </p>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // ======== Register ==========\r\n// function Register({ onRegister }) {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [success, setSuccess] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     setSuccess(\"\");\r\n//     const result = await fakeApi.register(name, email, password);\r\n//     if (result.message) {\r\n//       setSuccess(\"Inscription réussie ! Vous pouvez vous connecter.\");\r\n//       setName(\"\");\r\n//       setEmail(\"\");\r\n//       setPassword(\"\");\r\n//       setTimeout(() => {\r\n//         onRegister();\r\n//       }, 1500);\r\n//     } else {\r\n//       setError(result.error || \"Erreur lors de l'inscription\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         maxWidth: 350,\r\n//         margin: \"40px auto\",\r\n//         padding: 20,\r\n//         border: \"1px solid #ccc\",\r\n//         borderRadius: 8,\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Inscription</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Nom\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Mot de passe\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             backgroundColor: \"#007BFF\",\r\n//             color: \"white\",\r\n//             fontWeight: \"bold\",\r\n//             border: \"none\",\r\n//             borderRadius: 5,\r\n//             cursor: \"pointer\",\r\n//           }}\r\n//         >\r\n//           S'inscrire\r\n//         </button>\r\n//         {success && (\r\n//           <p style={{ color: \"green\", marginTop: 15, textAlign: \"center\" }}>\r\n//             {success}\r\n//           </p>\r\n//         )}\r\n//         {error && (\r\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\r\n//             {error}\r\n//           </p>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // ======== TaskForm ==========\r\n// function TaskForm({ onSave, editingTask, cancelEdit }) {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"pending\");\r\n//   const [dueDate, setDueDate] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     if (editingTask) {\r\n//       setTitle(editingTask.title || \"\");\r\n//       setStatus(editingTask.status || \"pending\");\r\n//       setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\r\n//       setDescription(editingTask.description || \"\");\r\n//     } else {\r\n//       setTitle(\"\");\r\n//       setStatus(\"pending\");\r\n//       setDueDate(\"\");\r\n//       setDescription(\"\");\r\n//     }\r\n//   }, [editingTask]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!title.trim()) {\r\n//       alert(\"Le titre est obligatoire\");\r\n//       return;\r\n//     }\r\n//     onSave({ title, status, dueDate, description });\r\n//   };\r\n\r\n//   return (\r\n//     <form\r\n//       onSubmit={handleSubmit}\r\n//       style={{\r\n//         marginBottom: 20,\r\n//         border: \"1px solid #ccc\",\r\n//         padding: 15,\r\n//         borderRadius: 6,\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <h3>{editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"}</h3>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Titre :</label>\r\n//         <br />\r\n//         <input\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Statut :</label>\r\n//         <br />\r\n//         <select\r\n//           value={status}\r\n//           onChange={(e) => setStatus(e.target.value)}\r\n//           required\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         >\r\n//           <option value=\"pending\">En attente</option>\r\n//           <option value=\"in-progress\">En cours</option>\r\n//           <option value=\"done\">Terminé</option>\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Date limite :</label>\r\n//         <br />\r\n//         <input\r\n//           type=\"date\"\r\n//           value={dueDate}\r\n//           onChange={(e) => setDueDate(e.target.value)}\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Description :</label>\r\n//         <br />\r\n//         <textarea\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <button type=\"submit\" style={{ padding: \"5px 10px\" }}>\r\n//         {editingTask ? \"Mettre à jour\" : \"Enregistrer\"}\r\n//       </button>\r\n\r\n//       {editingTask && (\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={cancelEdit}\r\n//           style={{ padding: \"5px 10px\", marginLeft: 10, background: \"#ccc\" }}\r\n//         >\r\n//           Annuler\r\n//         </button>\r\n//       )}\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// // ======== TaskList ==========\r\n// const statusColors = {\r\n//   pending: \"#f0ad4e\",\r\n//   \"in-progress\": \"#0275d8\",\r\n//   done: \"#5cb85c\",\r\n// };\r\n\r\n// function TaskList({ tasks, onEdit, onDelete }) {\r\n//   return (\r\n//     <table\r\n//       style={{\r\n//         width: \"100%\",\r\n//         borderCollapse: \"collapse\",\r\n//         boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <thead>\r\n//         <tr style={{ backgroundColor: \"#007BFF\", color: \"#fff\", textAlign: \"left\" }}>\r\n//           <th style={{ padding: \"10px\" }}>Titre</th>\r\n//           <th style={{ padding: \"10px\" }}>Statut</th>\r\n//           <th style={{ padding: \"10px\" }}>Date limite</th>\r\n//           <th style={{ padding: \"10px\" }}>Description</th>\r\n//           <th style={{ padding: \"10px\" }}>Actions</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {tasks.length > 0 ? (\r\n//           tasks.map((task) => (\r\n//             <tr\r\n//               key={task.id}\r\n//               style={{\r\n//                 borderBottom: \"1px solid #ddd\",\r\n//                 transition: \"background-color 0.3s\",\r\n//                 cursor: \"default\",\r\n//               }}\r\n//               onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#f9f9f9\")}\r\n//               onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"\")}\r\n//             >\r\n//               <td style={{ padding: \"8px\" }}>{task.title || \"Titre manquant\"}</td>\r\n//               <td style={{ padding: \"8px\" }}>\r\n//                 <span\r\n//                   style={{\r\n//                     padding: \"4px 8px\",\r\n//                     borderRadius: 12,\r\n//                     color: \"#fff\",\r\n//                     backgroundColor: statusColors[task.status] || \"#6c757d\",\r\n//                     fontWeight: \"bold\",\r\n//                     textTransform: \"capitalize\",\r\n//                     fontSize: \"0.9rem\",\r\n//                     display: \"inline-block\",\r\n//                     minWidth: 90,\r\n//                     textAlign: \"center\",\r\n//                   }}\r\n//                 >\r\n//                   {task.status || \"Statut manquant\"}\r\n//                 </span>\r\n//               </td>\r\n//               <td style={{ padding: \"8px\" }}>\r\n//                 {task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"}\r\n//               </td>\r\n//               <td style={{ padding: \"8px\" }}>{task.description || \"Description manquante\"}</td>\r\n//               <td style={{ padding: \"8px\" }}>\r\n//                 <button\r\n//                   onClick={() => onEdit(task)}\r\n//                   style={{\r\n//                     cursor: \"pointer\",\r\n//                     marginRight: 8,\r\n//                     backgroundColor: \"#ffc107\",\r\n//                     border: \"none\",\r\n//                     borderRadius: 4,\r\n//                     padding: \"4px 8px\",\r\n//                   }}\r\n//                   title=\"Modifier\"\r\n//                 >\r\n//                   ✏️\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     if (window.confirm(\"Confirmer la suppression ?\")) onDelete(task.id);\r\n//                   }}\r\n//                   style={{\r\n//                     cursor: \"pointer\",\r\n//                     backgroundColor: \"#dc3545\",\r\n//                     border: \"none\",\r\n//                     borderRadius: 4,\r\n//                     padding: \"4px 8px\",\r\n//                     color: \"#fff\",\r\n//                   }}\r\n//                   title=\"Supprimer\"\r\n//                 >\r\n//                   🗑️\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))\r\n//         ) : (\r\n//           <tr>\r\n//             <td colSpan=\"5\" style={{ textAlign: \"center\", padding: 20 }}>\r\n//               Aucune tâche disponible\r\n//             </td>\r\n//           </tr>\r\n//         )}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n// // ======== APP PRINCIPAL ==========\r\n// export default function App() {\r\n//   const [token, setToken] = useState(\"\");\r\n//   const [userName, setUserName] = useState(\"\");\r\n//   const [view, setView] = useState(\"login\"); // login | register | dashboard\r\n\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n\r\n//   // Charger les tâches quand on est connecté et sur dashboard\r\n//   useEffect(() => {\r\n//     if (token && view === \"dashboard\") {\r\n//       fakeApi.getTasks().then(setTasks);\r\n//     }\r\n//   }, [token, view]);\r\n\r\n//   // Connexion réussie\r\n//   const handleLogin = (jwt, name) => {\r\n//     setToken(jwt);\r\n//     setUserName(name);\r\n//     setView(\"dashboard\");\r\n//   };\r\n\r\n//   // Déconnexion\r\n//   const handleLogout = () => {\r\n//     setToken(\"\");\r\n//     setUserName(\"\");\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView(\"login\");\r\n//   };\r\n\r\n//   // Enregistrer / modifier tâche\r\n//   const handleSaveTask = (taskData) => {\r\n//     if (editingTask) {\r\n//       fakeApi.updateTask(editingTask.id, taskData).then((updated) => {\r\n//         setTasks(tasks.map((t) => (t.id === updated.id ? updated : t)));\r\n//         setEditingTask(null);\r\n//       });\r\n//     } else {\r\n//       fakeApi.createTask(taskData).then((newTask) => {\r\n//         setTasks([...tasks, newTask]);\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   // Supprimer tâche\r\n//   const handleDeleteTask = (id) => {\r\n//     fakeApi.deleteTask(id).then(() => {\r\n//       setTasks(tasks.filter((t) => t.id !== id));\r\n//       if (editingTask && editingTask.id === id) {\r\n//         setEditingTask(null);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   if (view === \"login\") {\r\n//     return (\r\n//       <>\r\n//         <Login onLogin={handleLogin} />\r\n//         <p style={{ textAlign: \"center\" }}>\r\n//           Pas encore de compte ?{\" \"}\r\n//           <button\r\n//             onClick={() => setView(\"register\")}\r\n//             style={{\r\n//               color: \"blue\",\r\n//               cursor: \"pointer\",\r\n//               border: \"none\",\r\n//               background: \"none\",\r\n//               padding: 0,\r\n//             }}\r\n//           >\r\n//             Inscrivez-vous\r\n//           </button>\r\n//         </p>\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n//   if (view === \"register\") {\r\n//     return (\r\n//       <>\r\n//         <Register onRegister={() => setView(\"login\")} />\r\n//         <p style={{ textAlign: \"center\" }}>\r\n//           Déjà un compte ?{\" \"}\r\n//           <button\r\n//             onClick={() => setView(\"login\")}\r\n//             style={{\r\n//               color: \"blue\",\r\n//               cursor: \"pointer\",\r\n//               border: \"none\",\r\n//               background: \"none\",\r\n//               padding: 0,\r\n//             }}\r\n//           >\r\n//             Connectez-vous\r\n//           </button>\r\n//         </p>\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n//   if (view === \"dashboard\") {\r\n//     return (\r\n//       <div\r\n//         style={{\r\n//           maxWidth: 900,\r\n//           margin: \"auto\",\r\n//           padding: 20,\r\n//                    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n//           backgroundColor: \"#f5f5f5\",\r\n//           minHeight: \"100vh\",\r\n//         }}\r\n//       >\r\n//         <Navbar onLogout={handleLogout} userName={userName} />\r\n\r\n//         <TaskForm\r\n//           onSave={handleSaveTask}\r\n//           editingTask={editingTask}\r\n//           cancelEdit={() => setEditingTask(null)}\r\n//         />\r\n\r\n//         <TaskList\r\n//           tasks={tasks}\r\n//           onEdit={setEditingTask}\r\n//           onDelete={handleDeleteTask}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return null; // fallback, ne devrait jamais arriver\r\n// }\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// ======== Fake API simulée ========\r\nconst fakeApi = {\r\n  users: [],\r\n  tasks: [],\r\n  register(name, email, password) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (this.users.some((u) => u.email === email)) {\r\n          resolve({ error: \"Cet email est déjà utilisé.\" });\r\n        } else {\r\n          this.users.push({ name, email, password });\r\n          resolve({ message: \"Inscription réussie\" });\r\n        }\r\n      }, 500);\r\n    });\r\n  },\r\n  login(email, password) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const user = this.users.find(\r\n          (u) => u.email === email && u.password === password\r\n        );\r\n        if (user) {\r\n          resolve({ token: \"fake-jwt-token\", name: user.name });\r\n        } else {\r\n          resolve({ message: \"Email ou mot de passe incorrect\" });\r\n        }\r\n      }, 500);\r\n    });\r\n  },\r\n  getTasks() {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => resolve(this.tasks), 300);\r\n    });\r\n  },\r\n  createTask(task) {\r\n    return new Promise((resolve) => {\r\n      const newTask = { ...task, id: Date.now() };\r\n      this.tasks.push(newTask);\r\n      setTimeout(() => resolve(newTask), 300);\r\n    });\r\n  },\r\n  updateTask(id, updated) {\r\n    return new Promise((resolve) => {\r\n      this.tasks = this.tasks.map((t) =>\r\n        t.id === id ? { ...t, ...updated } : t\r\n      );\r\n      setTimeout(() => resolve(this.tasks.find((t) => t.id === id)), 300);\r\n    });\r\n  },\r\n  deleteTask(id) {\r\n    return new Promise((resolve) => {\r\n      this.tasks = this.tasks.filter((t) => t.id !== id);\r\n      setTimeout(() => resolve({ success: true }), 300);\r\n    });\r\n  },\r\n};\r\n\r\n// ======== Navbar ========\r\nfunction Navbar({ onLogout, userName }) {\r\n  return (\r\n    <nav\r\n      style={{\r\n        backgroundColor: \"#007BFF\",\r\n        padding: \"10px 20px\",\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.2rem\",\r\n        marginBottom: 20,\r\n        borderRadius: 6,\r\n      }}\r\n    >\r\n      <div>Mon App Tâches - Bonjour {userName}</div>\r\n      <button\r\n        onClick={() => {\r\n          if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\r\n            onLogout();\r\n          }\r\n        }}\r\n        style={{\r\n          backgroundColor: \"#dc3545\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          padding: \"6px 12px\",\r\n          borderRadius: 4,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Déconnexion\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// ======== Login ========\r\nfunction Login({ onLogin }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    const result = await fakeApi.login(email, password);\r\n    if (result.token) {\r\n      onLogin(result.token, result.name);\r\n    } else {\r\n      setError(result.message || \"Erreur de connexion\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 350, margin: \"40px auto\", padding: 20, border: \"1px solid #ccc\", borderRadius: 8, backgroundColor: \"#fff\" }}>\r\n      <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Connexion</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          style={{ width: \"100%\", padding: 10, marginBottom: 15, borderRadius: 5, border: \"1px solid #ccc\" }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          style={{ width: \"100%\", padding: 10, marginBottom: 15, borderRadius: 5, border: \"1px solid #ccc\" }}\r\n        />\r\n        <button type=\"submit\" style={{ width: \"100%\", padding: 10, backgroundColor: \"#007BFF\", color: \"white\", fontWeight: \"bold\", border: \"none\", borderRadius: 5, cursor: \"pointer\" }}>\r\n          Se connecter\r\n        </button>\r\n        {error && <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ======== Register ========\r\nfunction Register({ onRegister }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    // Ici, tu pourrais envoyer vers ton API\r\n    alert(`Compte créé pour ${name}`);\r\n    onRegister();\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 400, margin: \"50px auto\", padding: 20, border: \"1px solid #ccc\", borderRadius: 6 }}>\r\n      <h2>Créer un compte</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <div>\r\n          <label>Nom :</label>\r\n          <input value={name} onChange={(e) => setName(e.target.value)} required style={{ width: \"100%\", padding: 5, marginBottom: 10 }} />\r\n        </div>\r\n        <div>\r\n          <label>Email :</label>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required style={{ width: \"100%\", padding: 5, marginBottom: 10 }} />\r\n        </div>\r\n        <div>\r\n          <label>Mot de passe :</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required style={{ width: \"100%\", padding: 5, marginBottom: 10 }} />\r\n        </div>\r\n        <button type=\"submit\" style={{ padding: \"6px 12px\", backgroundColor: \"#007BFF\", color: \"#fff\", border: \"none\", borderRadius: 4 }}>\r\n          S'inscrire\r\n        </button>\r\n      </form>\r\n      <p style={{ marginTop: 10, textAlign: \"center\" }}>\r\n        Déjà un compte ?{\" \"}\r\n        <button onClick={onRegister} style={{ color: \"blue\", background: \"none\", border: \"none\", cursor: \"pointer\" }}>\r\n          Se connecter\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ======== TaskFilter ========\r\nfunction TaskFilter({ onFilterChange }) {\r\n  const [statusFilter, setStatusFilter] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortField, setSortField] = useState(\"\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    onFilterChange({ status: statusFilter, search: searchTerm, sortField, sortOrder });\r\n  }, [statusFilter, searchTerm, sortField, sortOrder, onFilterChange]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20, display: \"flex\", gap: 10, flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n      <select value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)} style={{ padding: \"6px\" }}>\r\n        <option value=\"\">Tous les statuts</option>\r\n        <option value=\"pending\">En attente</option>\r\n        <option value=\"in-progress\">En cours</option>\r\n        <option value=\"done\">Terminé</option>\r\n      </select>\r\n\r\n      <input type=\"text\" placeholder=\"Rechercher...\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} style={{ padding: \"6px\", flexGrow: 1, minWidth: 150 }} />\r\n\r\n      <select value={sortField} onChange={(e) => setSortField(e.target.value)} style={{ padding: \"6px\" }}>\r\n        <option value=\"\">Trier par</option>\r\n        <option value=\"title\">Titre</option>\r\n        <option value=\"dueDate\">Date limite</option>\r\n        <option value=\"status\">Statut</option>\r\n      </select>\r\n\r\n      <select value={sortOrder} onChange={(e) => setSortOrder(e.target.value)} style={{ padding: \"6px\" }} disabled={!sortField}>\r\n        <option value=\"asc\">Ascendant</option>\r\n        <option value=\"desc\">Descendant</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ======== TaskForm ========\r\nfunction TaskForm({ onSave, editingTask, cancelEdit }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (editingTask) {\r\n      setTitle(editingTask.title || \"\");\r\n      setStatus(editingTask.status || \"pending\");\r\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\r\n      setDescription(editingTask.description || \"\");\r\n    } else {\r\n      setTitle(\"\");\r\n      setStatus(\"pending\");\r\n      setDueDate(\"\");\r\n      setDescription(\"\");\r\n    }\r\n  }, [editingTask]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) {\r\n      alert(\"Le titre est obligatoire\");\r\n      return;\r\n    }\r\n    onSave({ title, status, dueDate, description });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: 20, border: \"1px solid #ccc\", padding: 15, borderRadius: 6, backgroundColor: \"#fff\" }}>\r\n      <h3>{editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"}</h3>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Titre :</label>\r\n        <br />\r\n        <input value={title} onChange={(e) => setTitle(e.target.value)} required style={{ width: \"100%\", padding: 5 }} />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Statut :</label>\r\n        <br />\r\n        <select value={status} onChange={(e) => setStatus(e.target.value)} required style={{ width: \"100%\", padding: 5 }}>\r\n          <option value=\"pending\">En attente</option>\r\n                  <option value=\"in-progress\">En cours</option>\r\n          <option value=\"done\">Terminé</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Date limite :</label>\r\n        <br />\r\n        <input type=\"date\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} style={{ width: \"100%\", padding: 5 }} />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Description :</label>\r\n        <br />\r\n        <textarea value={description} onChange={(e) => setDescription(e.target.value)} rows={3} style={{ width: \"100%\", padding: 5 }} />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" style={{ marginRight: 10, padding: \"6px 12px\", border: \"none\", borderRadius: 4, backgroundColor: \"#007BFF\", color: \"#fff\", cursor: \"pointer\" }}>\r\n          {editingTask ? \"Mettre à jour\" : \"Ajouter\"}\r\n        </button>\r\n        {editingTask && (\r\n          <button type=\"button\" onClick={cancelEdit} style={{ padding: \"6px 12px\", border: \"none\", borderRadius: 4, backgroundColor: \"#6c757d\", color: \"#fff\", cursor: \"pointer\" }}>\r\n            Annuler\r\n          </button>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n// ======== TaskList ========\r\nconst statusColors = { pending: \"#f0ad4e\", \"in-progress\": \"#0275d8\", done: \"#5cb85c\" };\r\n\r\nfunction TaskList({ tasks, onEdit, onDelete }) {\r\n  return (\r\n    <table style={{ width: \"100%\", borderCollapse: \"collapse\", boxShadow: \"0 0 10px rgba(0,0,0,0.1)\", backgroundColor: \"#fff\" }}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#007BFF\", color: \"#fff\", textAlign: \"left\" }}>\r\n          <th style={{ padding: \"10px\" }}>Titre</th>\r\n          <th style={{ padding: \"10px\" }}>Statut</th>\r\n          <th style={{ padding: \"10px\" }}>Date limite</th>\r\n          <th style={{ padding: \"10px\" }}>Description</th>\r\n          <th style={{ padding: \"10px\" }}>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tasks.length > 0 ? (\r\n          tasks.map((task) => (\r\n            <tr key={task.id} style={{ borderBottom: \"1px solid #ddd\", cursor: \"default\" }}>\r\n              <td style={{ padding: \"8px\" }}>{task.title || \"Titre manquant\"}</td>\r\n              <td style={{ padding: \"8px\" }}>\r\n                <span style={{ padding: \"4px 8px\", borderRadius: 12, color: \"#fff\", backgroundColor: statusColors[task.status] || \"#6c757d\", fontWeight: \"bold\", textTransform: \"capitalize\", fontSize: \"0.9rem\", display: \"inline-block\", minWidth: 90, textAlign: \"center\" }}>\r\n                  {task.status || \"Statut manquant\"}\r\n                </span>\r\n              </td>\r\n              <td style={{ padding: \"8px\" }}>{task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"}</td>\r\n              <td style={{ padding: \"8px\" }}>{task.description || \"Description manquante\"}</td>\r\n              <td style={{ padding: \"8px\" }}>\r\n                <button onClick={() => onEdit(task)} style={{ cursor: \"pointer\", marginRight: 8, backgroundColor: \"#ffc107\", border: \"none\", borderRadius: 4, padding: \"4px 8px\" }}>✏️</button>\r\n                <button onClick={() => { if (window.confirm(\"Confirmer la suppression ?\")) onDelete(task.id); }} style={{ cursor: \"pointer\", backgroundColor: \"#dc3545\", border: \"none\", borderRadius: 4, padding: \"4px 8px\", color: \"#fff\" }}>🗑️</button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan=\"5\" style={{ textAlign: \"center\", padding: 10 }}>Aucune tâche disponible</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\n// ======== App ========\r\nexport default function App() {\r\n  const [view, setView] = useState(\"login\"); // \"login\" | \"register\" | \"dashboard\"\r\n  const [token, setToken] = useState(null);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [filter, setFilter] = useState({ status: \"\", search: \"\", sortField: \"\", sortOrder: \"asc\" });\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchTasks();\r\n    }\r\n  }, [token]);\r\n\r\n  const fetchTasks = async () => {\r\n    let data = await fakeApi.getTasks();\r\n\r\n    // Filtrage\r\n    if (filter.status) {\r\n      data = data.filter((t) => t.status === filter.status);\r\n    }\r\n    if (filter.search) {\r\n      data = data.filter((t) => t.title.toLowerCase().includes(filter.search.toLowerCase()));\r\n    }\r\n    // Tri\r\n    if (filter.sortField) {\r\n      data.sort((a, b) => {\r\n        let aField = a[filter.sortField] || \"\";\r\n        let bField = b[filter.sortField] || \"\";\r\n        if (filter.sortField === \"dueDate\") {\r\n          aField = aField || \"9999-12-31\";\r\n          bField = bField || \"9999-12-31\";\r\n        }\r\n        if (aField < bField) return filter.sortOrder === \"asc\" ? -1 : 1;\r\n        if (aField > bField) return filter.sortOrder === \"asc\" ? 1 : -1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    setTasks(data);\r\n  };\r\n\r\n  const handleSaveTask = async (task) => {\r\n    if (editingTask) {\r\n      await fakeApi.updateTask(editingTask.id, task);\r\n      setEditingTask(null);\r\n    } else {\r\n      await fakeApi.createTask(task);\r\n    }\r\n    fetchTasks();\r\n  };\r\n\r\n  const handleDeleteTask = async (id) => {\r\n    await fakeApi.deleteTask(id);\r\n    fetchTasks();\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    setEditingTask(task);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setToken(null);\r\n    setUserName(\"\");\r\n    setView(\"login\");\r\n    setTasks([]);\r\n  };\r\n\r\n  // ======== Vue ========\r\n  if (!token) {\r\n    return view === \"login\" ? <Login onLogin={(t, name) => { setToken(t); setUserName(name); setView(\"dashboard\"); }} /> : <Register onRegister={() => setView(\"login\")} />;\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: 900, margin: \"20px auto\", padding: 20 }}>\r\n      <Navbar onLogout={handleLogout} userName={userName} />\r\n      <TaskForm onSave={handleSaveTask} editingTask={editingTask} cancelEdit={() => setEditingTask(null)} />\r\n      <TaskFilter onFilterChange={(f) => { setFilter(f); }} />\r\n      <TaskList tasks={tasks} onEdit={handleEditTask} onDelete={handleDeleteTask} />\r\n    </div>\r\n  );\r\n}"],"mappings":";;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IAC9B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACf,IAAI,IAAI,CAACR,KAAK,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,KAAK,KAAKA,KAAK,CAAC,EAAE;UAC7CG,OAAO,CAAC;YAAEI,KAAK,EAAE;UAA8B,CAAC,CAAC;QACnD,CAAC,MAAM;UACL,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC;YAAET,IAAI;YAAEC,KAAK;YAAEC;UAAS,CAAC,CAAC;UAC1CE,OAAO,CAAC;YAAEM,OAAO,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}