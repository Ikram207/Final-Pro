{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\components\\\\TaskFilter.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// export default function TaskFilter({ onFilterChange }) {\n//   // états locaux pour filtre statut, recherche texte, et tri\n//   const [statusFilter, setStatusFilter] = useState('');\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [sortField, setSortField] = useState('');\n//   const [sortOrder, setSortOrder] = useState('asc');\n\n//   // Appelé à chaque changement de filtre ou tri\n//   const handleChange = () => {\n//     onFilterChange({\n//       status: statusFilter,\n//       search: searchTerm,\n//       sortField,\n//       sortOrder,\n//     });\n//   };\n\n//   // Effets pour déclencher handleChange quand un état change\n//   React.useEffect(() => {\n//     handleChange();\n//   }, [statusFilter, searchTerm, sortField, sortOrder]);\n\n//   return (\n//     <div style={{ marginBottom: 20, display: 'flex', gap: 10, flexWrap: 'wrap', alignItems: 'center' }}>\n//       {/* Filtre par statut */}\n//       <select\n//         value={statusFilter}\n//         onChange={e => setStatusFilter(e.target.value)}\n//         style={{ padding: '6px' }}\n//       >\n//         <option value=\"\">Tous les statuts</option>\n//         <option value=\"pending\">En attente</option>\n//         <option value=\"in-progress\">En cours</option>\n//         <option value=\"done\">Terminé</option>\n//       </select>\n\n//       {/* Recherche par texte */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Rechercher...\"\n//         value={searchTerm}\n//         onChange={e => setSearchTerm(e.target.value)}\n//         style={{ padding: '6px', flexGrow: 1, minWidth: 150 }}\n//       />\n\n//       {/* Tri - champ */}\n//       <select\n//         value={sortField}\n//         onChange={e => setSortField(e.target.value)}\n//         style={{ padding: '6px' }}\n//       >\n//         <option value=\"\">Trier par</option>\n//         <option value=\"title\">Titre</option>\n//         <option value=\"dueDate\">Date limite</option>\n//         <option value=\"status\">Statut</option>\n//       </select>\n\n//       {/* Tri - ordre */}\n//       <select\n//         value={sortOrder}\n//         onChange={e => setSortOrder(e.target.value)}\n//         style={{ padding: '6px' }}\n//         disabled={!sortField}\n//       >\n//         <option value=\"asc\">Ascendant</option>\n//         <option value=\"desc\">Descendant</option>\n//       </select>\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskFilter({\n  onFilterChange\n}) {\n  _s();\n  const [status, setStatus] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const handleStatusChange = e => {\n    setStatus(e.target.value);\n    onFilterChange({\n      status: e.target.value,\n      date\n    });\n  };\n  const handleDateChange = e => {\n    setDate(e.target.value);\n    onFilterChange({\n      status,\n      date: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"15px\",\n      display: \"flex\",\n      gap: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: handleStatusChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"in progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskFilter, \"yTdCOcWw5hQhYu3F7qPWfsXQdi0=\");\n_c = TaskFilter;\nvar _c;\n$RefreshReg$(_c, \"TaskFilter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskFilter","onFilterChange","_s","status","setStatus","date","setDate","handleStatusChange","e","target","value","handleDateChange","style","marginBottom","display","gap","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/components/TaskFilter.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// export default function TaskFilter({ onFilterChange }) {\r\n//   // états locaux pour filtre statut, recherche texte, et tri\r\n//   const [statusFilter, setStatusFilter] = useState('');\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [sortField, setSortField] = useState('');\r\n//   const [sortOrder, setSortOrder] = useState('asc');\r\n\r\n//   // Appelé à chaque changement de filtre ou tri\r\n//   const handleChange = () => {\r\n//     onFilterChange({\r\n//       status: statusFilter,\r\n//       search: searchTerm,\r\n//       sortField,\r\n//       sortOrder,\r\n//     });\r\n//   };\r\n\r\n//   // Effets pour déclencher handleChange quand un état change\r\n//   React.useEffect(() => {\r\n//     handleChange();\r\n//   }, [statusFilter, searchTerm, sortField, sortOrder]);\r\n\r\n//   return (\r\n//     <div style={{ marginBottom: 20, display: 'flex', gap: 10, flexWrap: 'wrap', alignItems: 'center' }}>\r\n//       {/* Filtre par statut */}\r\n//       <select\r\n//         value={statusFilter}\r\n//         onChange={e => setStatusFilter(e.target.value)}\r\n//         style={{ padding: '6px' }}\r\n//       >\r\n//         <option value=\"\">Tous les statuts</option>\r\n//         <option value=\"pending\">En attente</option>\r\n//         <option value=\"in-progress\">En cours</option>\r\n//         <option value=\"done\">Terminé</option>\r\n//       </select>\r\n\r\n//       {/* Recherche par texte */}\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Rechercher...\"\r\n//         value={searchTerm}\r\n//         onChange={e => setSearchTerm(e.target.value)}\r\n//         style={{ padding: '6px', flexGrow: 1, minWidth: 150 }}\r\n//       />\r\n\r\n//       {/* Tri - champ */}\r\n//       <select\r\n//         value={sortField}\r\n//         onChange={e => setSortField(e.target.value)}\r\n//         style={{ padding: '6px' }}\r\n//       >\r\n//         <option value=\"\">Trier par</option>\r\n//         <option value=\"title\">Titre</option>\r\n//         <option value=\"dueDate\">Date limite</option>\r\n//         <option value=\"status\">Statut</option>\r\n//       </select>\r\n\r\n//       {/* Tri - ordre */}\r\n//       <select\r\n//         value={sortOrder}\r\n//         onChange={e => setSortOrder(e.target.value)}\r\n//         style={{ padding: '6px' }}\r\n//         disabled={!sortField}\r\n//       >\r\n//         <option value=\"asc\">Ascendant</option>\r\n//         <option value=\"desc\">Descendant</option>\r\n//       </select>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function TaskFilter({ onFilterChange }) {\r\n  const [status, setStatus] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const handleStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n    onFilterChange({ status: e.target.value, date });\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n    onFilterChange({ status, date: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"15px\", display: \"flex\", gap: \"10px\" }}>\r\n      <select value={status} onChange={handleStatusChange}>\r\n        <option value=\"\">All Status</option>\r\n        <option value=\"pending\">Pending</option>\r\n        <option value=\"in progress\">In Progress</option>\r\n        <option value=\"completed\">Completed</option>\r\n      </select>\r\n\r\n      <input\r\n        type=\"date\"\r\n        value={date}\r\n        onChange={handleDateChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,kBAAkB,GAAIC,CAAC,IAAK;IAChCJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACzBT,cAAc,CAAC;MAAEE,MAAM,EAAEK,CAAC,CAACC,MAAM,CAACC,KAAK;MAAEL;IAAK,CAAC,CAAC;EAClD,CAAC;EAED,MAAMM,gBAAgB,GAAIH,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACvBT,cAAc,CAAC;MAAEE,MAAM;MAAEE,IAAI,EAAEG,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAClD,CAAC;EAED,oBACEX,OAAA;IAAKa,KAAK,EAAE;MAAEC,YAAY,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjEjB,OAAA;MAAQW,KAAK,EAAEP,MAAO;MAACc,QAAQ,EAAEV,kBAAmB;MAAAS,QAAA,gBAClDjB,OAAA;QAAQW,KAAK,EAAC,EAAE;QAAAM,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpCtB,OAAA;QAAQW,KAAK,EAAC,SAAS;QAAAM,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxCtB,OAAA;QAAQW,KAAK,EAAC,aAAa;QAAAM,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDtB,OAAA;QAAQW,KAAK,EAAC,WAAW;QAAAM,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAETtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXZ,KAAK,EAAEL,IAAK;MACZY,QAAQ,EAAEN;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CA9BuBF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}