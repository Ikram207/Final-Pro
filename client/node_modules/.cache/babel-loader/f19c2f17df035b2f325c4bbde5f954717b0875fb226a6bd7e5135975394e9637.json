{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState('login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     // Fetch tasks after login\n//     const { getTasks } = await import('./services/api');\n//     const fetched = await getTasks(jwt);\n//     setTasks(Array.isArray(fetched) ? fetched : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setView('login');\n//   };\n\n//   // Listen for taskAdded event to refresh tasks\n//   React.useEffect(() => {\n//     if (!token || view !== 'tasks') return;\n//     const { getTasks } = require('./services/api');\n//     const fetchTasks = async () => {\n//       const fetched = await getTasks(token);\n//       setTasks(Array.isArray(fetched) ? fetched : []);\n//     };\n//     fetchTasks();\n//     const handler = () => fetchTasks();\n//     window.addEventListener('taskAdded', handler);\n//     return () => window.removeEventListener('taskAdded', handler);\n//   }, [token, view]);\n\n//   return (\n//     <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\n//       {!token && view === 'login' && (\n//         <>\n//           <Login onLogin={handleLogin} />\n//           <p>\n//             Pas de compte ?{' '}\n//             <button onClick={() => setView('register')}>Inscrivez-vous</button>\n//           </p>\n//         </>\n//       )}\n\n//       {!token && view === 'register' && (\n//         <>\n//           <Register onRegister={() => setView('login')} />\n//           <p>\n//             Déjà un compte ?{' '}\n//             <button onClick={() => setView('login')}>Connectez-vous</button>\n//           </p>\n//         </>\n//       )}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <button onClick={handleLogout}>Déconnexion</button>\n//           <TaskForm token={token} />\n//           <TaskList token={token} tasks={tasks} setTasks={setTasks} onEdit={() => {}} />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// // import React, { useState, useEffect } from 'react';\n// // import Navbar from './components/Navbar';\n// // import Login from './components/Login';\n// // import Register from './components/Register';\n// // import TaskForm from './components/TaskForm';\n// // import TaskList from './components/TaskList';\n// // import IdeaForm from './components/IdeaForm';\n// // import IdeaTable from './components/IdeaTable';\n// // import { getTasks, getIdeas } from './services/api';\n\n// // export default function App() {\n// //   const [token, setToken] = useState(localStorage.getItem('token') || '');\n// //   const [view, setView] = useState('login');\n// //   const [tasks, setTasks] = useState([]);\n// //   const [ideas, setIdeas] = useState([]);\n\n// //   const handleLogin = async (jwt) => {\n// //     localStorage.setItem('token', jwt);\n// //     setToken(jwt);\n// //     setView('tasks');\n\n// //     const fetchedTasks = await getTasks(jwt);\n// //     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n\n// //     const fetchedIdeas = await getIdeas(jwt);\n// //     setIdeas(Array.isArray(fetchedIdeas) ? fetchedIdeas : []);\n// //   };\n\n// //   const handleLogout = () => {\n// //     localStorage.removeItem('token');\n// //     setToken('');\n// //     setTasks([]);\n// //     setIdeas([]);\n// //     setView('login');\n// //   };\n\n// //   // Rafraîchir les données quand on change de vue\n// //   useEffect(() => {\n// //     if (!token) return;\n// //     if (view === 'tasks') {\n// //       getTasks(token).then(data => setTasks(Array.isArray(data) ? data : []));\n// //     }\n// //     if (view === 'ideas') {\n// //       getIdeas(token).then(data => setIdeas(Array.isArray(data) ? data : []));\n// //     }\n// //   }, [view, token]);\n\n// //   return (\n// //     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n// //       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n// //       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n// //       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n// //       {token && view === 'tasks' && (\n// //         <>\n// //           <TaskForm token={token} onSave={(newTask) => setTasks([...tasks, newTask])} />\n// //           <TaskList token={token} tasks={tasks} setTasks={setTasks} />\n// //         </>\n// //       )}\n\n// //       {token && view === 'ideas' && (\n// //         <>\n// //           <IdeaForm token={token} onSave={(newIdea) => setIdeas([...ideas, newIdea])} />\n// //           <IdeaTable token={token} ideas={ideas} setIdeas={setIdeas} />\n// //         </>\n// //       )}\n// //     </div>\n// //   );\n// // }\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [view, setView] = useState(token ? 'dashboard' : 'login'); // login | register | dashboard\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n  const handleLogout = () => {\n    setToken('');\n    setView('login');\n  };\n  if (!token) {\n    if (view === 'login') {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: setToken,\n        switchToRegister: () => setView('register')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Register, {\n        switchToLogin: () => setView('login')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenue sur votre tableau de bord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"D\\xE9connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C4ob+fFLxhK+AuwzHt/j42Hx6bE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Register","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","view","setView","setItem","removeItem","handleLogout","onLogin","switchToRegister","fileName","_jsxFileName","lineNumber","columnNumber","switchToLogin","children","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState('login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     // Fetch tasks after login\r\n//     const { getTasks } = await import('./services/api');\r\n//     const fetched = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetched) ? fetched : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setView('login');\r\n//   };\r\n\r\n//   // Listen for taskAdded event to refresh tasks\r\n//   React.useEffect(() => {\r\n//     if (!token || view !== 'tasks') return;\r\n//     const { getTasks } = require('./services/api');\r\n//     const fetchTasks = async () => {\r\n//       const fetched = await getTasks(token);\r\n//       setTasks(Array.isArray(fetched) ? fetched : []);\r\n//     };\r\n//     fetchTasks();\r\n//     const handler = () => fetchTasks();\r\n//     window.addEventListener('taskAdded', handler);\r\n//     return () => window.removeEventListener('taskAdded', handler);\r\n//   }, [token, view]);\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\r\n//       {!token && view === 'login' && (\r\n//         <>\r\n//           <Login onLogin={handleLogin} />\r\n//           <p>\r\n//             Pas de compte ?{' '}\r\n//             <button onClick={() => setView('register')}>Inscrivez-vous</button>\r\n//           </p>\r\n//         </>\r\n//       )}\r\n\r\n//       {!token && view === 'register' && (\r\n//         <>\r\n//           <Register onRegister={() => setView('login')} />\r\n//           <p>\r\n//             Déjà un compte ?{' '}\r\n//             <button onClick={() => setView('login')}>Connectez-vous</button>\r\n//           </p>\r\n//         </>\r\n//       )}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <button onClick={handleLogout}>Déconnexion</button>\r\n//           <TaskForm token={token} />\r\n//           <TaskList token={token} tasks={tasks} setTasks={setTasks} onEdit={() => {}} />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import Navbar from './components/Navbar';\r\n// // import Login from './components/Login';\r\n// // import Register from './components/Register';\r\n// // import TaskForm from './components/TaskForm';\r\n// // import TaskList from './components/TaskList';\r\n// // import IdeaForm from './components/IdeaForm';\r\n// // import IdeaTable from './components/IdeaTable';\r\n// // import { getTasks, getIdeas } from './services/api';\r\n\r\n// // export default function App() {\r\n// //   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n// //   const [view, setView] = useState('login');\r\n// //   const [tasks, setTasks] = useState([]);\r\n// //   const [ideas, setIdeas] = useState([]);\r\n\r\n// //   const handleLogin = async (jwt) => {\r\n// //     localStorage.setItem('token', jwt);\r\n// //     setToken(jwt);\r\n// //     setView('tasks');\r\n\r\n// //     const fetchedTasks = await getTasks(jwt);\r\n// //     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n\r\n// //     const fetchedIdeas = await getIdeas(jwt);\r\n// //     setIdeas(Array.isArray(fetchedIdeas) ? fetchedIdeas : []);\r\n// //   };\r\n\r\n// //   const handleLogout = () => {\r\n// //     localStorage.removeItem('token');\r\n// //     setToken('');\r\n// //     setTasks([]);\r\n// //     setIdeas([]);\r\n// //     setView('login');\r\n// //   };\r\n\r\n// //   // Rafraîchir les données quand on change de vue\r\n// //   useEffect(() => {\r\n// //     if (!token) return;\r\n// //     if (view === 'tasks') {\r\n// //       getTasks(token).then(data => setTasks(Array.isArray(data) ? data : []));\r\n// //     }\r\n// //     if (view === 'ideas') {\r\n// //       getIdeas(token).then(data => setIdeas(Array.isArray(data) ? data : []));\r\n// //     }\r\n// //   }, [view, token]);\r\n\r\n// //   return (\r\n// //     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n// //       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n// //       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n// //       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n// //       {token && view === 'tasks' && (\r\n// //         <>\r\n// //           <TaskForm token={token} onSave={(newTask) => setTasks([...tasks, newTask])} />\r\n// //           <TaskList token={token} tasks={tasks} setTasks={setTasks} />\r\n// //         </>\r\n// //       )}\r\n\r\n// //       {token && view === 'ideas' && (\r\n// //         <>\r\n// //           <IdeaForm token={token} onSave={(newIdea) => setIdeas([...ideas, newIdea])} />\r\n// //           <IdeaTable token={token} ideas={ideas} setIdeas={setIdeas} />\r\n// //         </>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\nimport React, { useState, useEffect } from 'react';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\n\r\nexport default function App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n  const [view, setView] = useState(token ? 'dashboard' : 'login'); // login | register | dashboard\r\n\r\n  useEffect(() => {\r\n    if(token) {\r\n      localStorage.setItem('token', token);\r\n    } else {\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [token]);\r\n\r\n  const handleLogout = () => {\r\n    setToken('');\r\n    setView('login');\r\n  };\r\n\r\n  if(!token) {\r\n    if(view === 'login') {\r\n      return <Login onLogin={setToken} switchToRegister={() => setView('register')} />;\r\n    } else {\r\n      return <Register switchToLogin={() => setView('login')} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bienvenue sur votre tableau de bord</h1>\r\n      <button onClick={handleLogout}>Déconnexion</button>\r\n      {/* Ici tu peux mettre le contenu protégé */}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACvE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACQ,KAAK,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC;;EAEjEP,SAAS,CAAC,MAAM;IACd,IAAGO,KAAK,EAAE;MACRE,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;IACtC,CAAC,MAAM;MACLE,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBP,QAAQ,CAAC,EAAE,CAAC;IACZI,OAAO,CAAC,OAAO,CAAC;EAClB,CAAC;EAED,IAAG,CAACL,KAAK,EAAE;IACT,IAAGI,IAAI,KAAK,OAAO,EAAE;MACnB,oBAAOP,OAAA,CAACH,KAAK;QAACe,OAAO,EAAER,QAAS;QAACS,gBAAgB,EAAEA,CAAA,KAAML,OAAO,CAAC,UAAU;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAClF,CAAC,MAAM;MACL,oBAAOjB,OAAA,CAACF,QAAQ;QAACoB,aAAa,EAAEA,CAAA,KAAMV,OAAO,CAAC,OAAO;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC5D;EACF;EAEA,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAmC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CjB,OAAA;MAAQoB,OAAO,EAAET,YAAa;MAAAQ,QAAA,EAAC;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhD,CAAC;AAEV;AAACf,EAAA,CAhCuBD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}