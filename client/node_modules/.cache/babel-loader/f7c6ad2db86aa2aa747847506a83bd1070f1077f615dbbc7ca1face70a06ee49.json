{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState('login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     // Fetch tasks after login\n//     const { getTasks } = await import('./services/api');\n//     const fetched = await getTasks(jwt);\n//     setTasks(Array.isArray(fetched) ? fetched : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setView('login');\n//   };\n\n//   // Listen for taskAdded event to refresh tasks\n//   React.useEffect(() => {\n//     if (!token || view !== 'tasks') return;\n//     const { getTasks } = require('./services/api');\n//     const fetchTasks = async () => {\n//       const fetched = await getTasks(token);\n//       setTasks(Array.isArray(fetched) ? fetched : []);\n//     };\n//     fetchTasks();\n//     const handler = () => fetchTasks();\n//     window.addEventListener('taskAdded', handler);\n//     return () => window.removeEventListener('taskAdded', handler);\n//   }, [token, view]);\n\n//   return (\n//     <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\n//       {!token && view === 'login' && (\n//         <>\n//           <Login onLogin={handleLogin} />\n//           <p>\n//             Pas de compte ?{' '}\n//             <button onClick={() => setView('register')}>Inscrivez-vous</button>\n//           </p>\n//         </>\n//       )}\n\n//       {!token && view === 'register' && (\n//         <>\n//           <Register onRegister={() => setView('login')} />\n//           <p>\n//             Déjà un compte ?{' '}\n//             <button onClick={() => setView('login')}>Connectez-vous</button>\n//           </p>\n//         </>\n//       )}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <button onClick={handleLogout}>Déconnexion</button>\n//           <TaskForm token={token} />\n//           <TaskList token={token} tasks={tasks} setTasks={setTasks} onEdit={() => {}} />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// // import React, { useState, useEffect } from 'react';\n// // import Navbar from './components/Navbar';\n// // import Login from './components/Login';\n// // import Register from './components/Register';\n// // import TaskForm from './components/TaskForm';\n// // import TaskList from './components/TaskList';\n// // import IdeaForm from './components/IdeaForm';\n// // import IdeaTable from './components/IdeaTable';\n// // import { getTasks, getIdeas } from './services/api';\n\n// // export default function App() {\n// //   const [token, setToken] = useState(localStorage.getItem('token') || '');\n// //   const [view, setView] = useState('login');\n// //   const [tasks, setTasks] = useState([]);\n// //   const [ideas, setIdeas] = useState([]);\n\n// //   const handleLogin = async (jwt) => {\n// //     localStorage.setItem('token', jwt);\n// //     setToken(jwt);\n// //     setView('tasks');\n\n// //     const fetchedTasks = await getTasks(jwt);\n// //     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n\n// //     const fetchedIdeas = await getIdeas(jwt);\n// //     setIdeas(Array.isArray(fetchedIdeas) ? fetchedIdeas : []);\n// //   };\n\n// //   const handleLogout = () => {\n// //     localStorage.removeItem('token');\n// //     setToken('');\n// //     setTasks([]);\n// //     setIdeas([]);\n// //     setView('login');\n// //   };\n\n// //   // Rafraîchir les données quand on change de vue\n// //   useEffect(() => {\n// //     if (!token) return;\n// //     if (view === 'tasks') {\n// //       getTasks(token).then(data => setTasks(Array.isArray(data) ? data : []));\n// //     }\n// //     if (view === 'ideas') {\n// //       getIdeas(token).then(data => setIdeas(Array.isArray(data) ? data : []));\n// //     }\n// //   }, [view, token]);\n\n// //   return (\n// //     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n// //       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n// //       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n// //       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n// //       {token && view === 'tasks' && (\n// //         <>\n// //           <TaskForm token={token} onSave={(newTask) => setTasks([...tasks, newTask])} />\n// //           <TaskList token={token} tasks={tasks} setTasks={setTasks} />\n// //         </>\n// //       )}\n\n// //       {token && view === 'ideas' && (\n// //         <>\n// //           <IdeaForm token={token} onSave={(newIdea) => setIdeas([...ideas, newIdea])} />\n// //           <IdeaTable token={token} ideas={ideas} setIdeas={setIdeas} />\n// //         </>\n// //       )}\n// //     </div>\n// //   );\n// // }\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Navbar from './components/Navbar';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport IdeaForm from './components/IdeaForm';\nimport IdeaTable from './components/IdeaTable';\nimport api from './services/api.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [view, setView] = useState('tasks'); // tasks ou ideas\n  const [page, setPage] = useState(token ? 'platform' : 'login'); // login, register ou platform\n  const [tasks, setTasks] = useState([]);\n  const [ideas, setIdeas] = useState([]);\n  useEffect(() => {\n    if (!token) return;\n    if (view === 'tasks') {\n      api.get('/tasks', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => setTasks(res.data)).catch(console.error);\n    } else if (view === 'ideas') {\n      api.get('/ideas', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => setIdeas(res.data)).catch(console.error);\n    }\n  }, [token, view]);\n  function handleLogin(newToken) {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n    setPage('platform');\n  }\n  function handleLogout() {\n    localStorage.removeItem('token');\n    setToken('');\n    setTasks([]);\n    setIdeas([]);\n    setPage('login');\n  }\n\n  // Navigation entre Login/Register\n  if (page === 'login') {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      goToRegister: () => setPage('register')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 12\n    }, this);\n  }\n  if (page === 'register') {\n    return /*#__PURE__*/_jsxDEV(Register, {\n      goToLogin: () => setPage('login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Plateforme principale après connexion\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setView: setView,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), view === 'tasks' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n        token: token,\n        onSave: newTask => setTasks([...tasks, newTask])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        token: token,\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), view === 'ideas' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IdeaForm, {\n        token: token,\n        onSave: newIdea => setIdeas([...ideas, newIdea])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IdeaTable, {\n        ideas: ideas,\n        setIdeas: setIdeas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A36ECMWanwO+7BF+EY7JFTWUwWA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Register","Navbar","TaskForm","TaskList","IdeaForm","IdeaTable","api","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","localStorage","getItem","view","setView","page","setPage","tasks","setTasks","ideas","setIdeas","get","headers","Authorization","then","res","data","catch","console","error","handleLogin","newToken","setItem","handleLogout","removeItem","onLogin","goToRegister","fileName","_jsxFileName","lineNumber","columnNumber","goToLogin","children","onSave","newTask","newIdea","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState('login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     // Fetch tasks after login\r\n//     const { getTasks } = await import('./services/api');\r\n//     const fetched = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetched) ? fetched : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setView('login');\r\n//   };\r\n\r\n//   // Listen for taskAdded event to refresh tasks\r\n//   React.useEffect(() => {\r\n//     if (!token || view !== 'tasks') return;\r\n//     const { getTasks } = require('./services/api');\r\n//     const fetchTasks = async () => {\r\n//       const fetched = await getTasks(token);\r\n//       setTasks(Array.isArray(fetched) ? fetched : []);\r\n//     };\r\n//     fetchTasks();\r\n//     const handler = () => fetchTasks();\r\n//     window.addEventListener('taskAdded', handler);\r\n//     return () => window.removeEventListener('taskAdded', handler);\r\n//   }, [token, view]);\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\r\n//       {!token && view === 'login' && (\r\n//         <>\r\n//           <Login onLogin={handleLogin} />\r\n//           <p>\r\n//             Pas de compte ?{' '}\r\n//             <button onClick={() => setView('register')}>Inscrivez-vous</button>\r\n//           </p>\r\n//         </>\r\n//       )}\r\n\r\n//       {!token && view === 'register' && (\r\n//         <>\r\n//           <Register onRegister={() => setView('login')} />\r\n//           <p>\r\n//             Déjà un compte ?{' '}\r\n//             <button onClick={() => setView('login')}>Connectez-vous</button>\r\n//           </p>\r\n//         </>\r\n//       )}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <button onClick={handleLogout}>Déconnexion</button>\r\n//           <TaskForm token={token} />\r\n//           <TaskList token={token} tasks={tasks} setTasks={setTasks} onEdit={() => {}} />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import Navbar from './components/Navbar';\r\n// // import Login from './components/Login';\r\n// // import Register from './components/Register';\r\n// // import TaskForm from './components/TaskForm';\r\n// // import TaskList from './components/TaskList';\r\n// // import IdeaForm from './components/IdeaForm';\r\n// // import IdeaTable from './components/IdeaTable';\r\n// // import { getTasks, getIdeas } from './services/api';\r\n\r\n// // export default function App() {\r\n// //   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n// //   const [view, setView] = useState('login');\r\n// //   const [tasks, setTasks] = useState([]);\r\n// //   const [ideas, setIdeas] = useState([]);\r\n\r\n// //   const handleLogin = async (jwt) => {\r\n// //     localStorage.setItem('token', jwt);\r\n// //     setToken(jwt);\r\n// //     setView('tasks');\r\n\r\n// //     const fetchedTasks = await getTasks(jwt);\r\n// //     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n\r\n// //     const fetchedIdeas = await getIdeas(jwt);\r\n// //     setIdeas(Array.isArray(fetchedIdeas) ? fetchedIdeas : []);\r\n// //   };\r\n\r\n// //   const handleLogout = () => {\r\n// //     localStorage.removeItem('token');\r\n// //     setToken('');\r\n// //     setTasks([]);\r\n// //     setIdeas([]);\r\n// //     setView('login');\r\n// //   };\r\n\r\n// //   // Rafraîchir les données quand on change de vue\r\n// //   useEffect(() => {\r\n// //     if (!token) return;\r\n// //     if (view === 'tasks') {\r\n// //       getTasks(token).then(data => setTasks(Array.isArray(data) ? data : []));\r\n// //     }\r\n// //     if (view === 'ideas') {\r\n// //       getIdeas(token).then(data => setIdeas(Array.isArray(data) ? data : []));\r\n// //     }\r\n// //   }, [view, token]);\r\n\r\n// //   return (\r\n// //     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n// //       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n// //       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n// //       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n// //       {token && view === 'tasks' && (\r\n// //         <>\r\n// //           <TaskForm token={token} onSave={(newTask) => setTasks([...tasks, newTask])} />\r\n// //           <TaskList token={token} tasks={tasks} setTasks={setTasks} />\r\n// //         </>\r\n// //       )}\r\n\r\n// //       {token && view === 'ideas' && (\r\n// //         <>\r\n// //           <IdeaForm token={token} onSave={(newIdea) => setIdeas([...ideas, newIdea])} />\r\n// //           <IdeaTable token={token} ideas={ideas} setIdeas={setIdeas} />\r\n// //         </>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\nimport React, { useState, useEffect } from 'react';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Navbar from './components/Navbar';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\nimport IdeaForm from './components/IdeaForm';\r\nimport IdeaTable from './components/IdeaTable';\r\nimport api from './services/api.js';\r\n\r\nexport default function App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n  const [view, setView] = useState('tasks'); // tasks ou ideas\r\n  const [page, setPage] = useState(token ? 'platform' : 'login'); // login, register ou platform\r\n  const [tasks, setTasks] = useState([]);\r\n  const [ideas, setIdeas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    if (view === 'tasks') {\r\n      api.get('/tasks', { headers: { Authorization: `Bearer ${token}` } })\r\n        .then(res => setTasks(res.data))\r\n        .catch(console.error);\r\n    } else if (view === 'ideas') {\r\n      api.get('/ideas', { headers: { Authorization: `Bearer ${token}` } })\r\n        .then(res => setIdeas(res.data))\r\n        .catch(console.error);\r\n    }\r\n  }, [token, view]);\r\n\r\n  function handleLogin(newToken) {\r\n    localStorage.setItem('token', newToken);\r\n    setToken(newToken);\r\n    setPage('platform');\r\n  }\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem('token');\r\n    setToken('');\r\n    setTasks([]);\r\n    setIdeas([]);\r\n    setPage('login');\r\n  }\r\n\r\n  // Navigation entre Login/Register\r\n  if (page === 'login') {\r\n    return <Login onLogin={handleLogin} goToRegister={() => setPage('register')} />;\r\n  }\r\n  if (page === 'register') {\r\n    return <Register goToLogin={() => setPage('login')} />;\r\n  }\r\n\r\n  // Plateforme principale après connexion\r\n  return (\r\n    <div>\r\n      <Navbar setView={setView} handleLogout={handleLogout} />\r\n      {view === 'tasks' && (\r\n        <>\r\n          <TaskForm token={token} onSave={newTask => setTasks([...tasks, newTask])} />\r\n          <TaskList token={token} tasks={tasks} setTasks={setTasks} />\r\n        </>\r\n      )}\r\n      {view === 'ideas' && (\r\n        <>\r\n          <IdeaForm token={token} onSave={newIdea => setIdeas([...ideas, newIdea])} />\r\n          <IdeaTable ideas={ideas} setIdeas={setIdeas} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACkB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACvE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,OAAO,CAAC,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}