{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// // ======== FAKE API simulée ==========\n// const fakeApi = {\n//   users: [],\n//   tasks: [],\n//   register(name, email, password) {\n//     return new Promise((resolve) => {\n//       setTimeout(() => {\n//         if (this.users.some((u) => u.email === email)) {\n//           resolve({ error: \"Cet email est déjà utilisé.\" });\n//         } else {\n//           this.users.push({ name, email, password });\n//           resolve({ message: \"Inscription réussie\" });\n//         }\n//       }, 500);\n//     });\n//   },\n//   login(email, password) {\n//     return new Promise((resolve) => {\n//       setTimeout(() => {\n//         const user = this.users.find(\n//           (u) => u.email === email && u.password === password\n//         );\n//         if (user) {\n//           resolve({ token: \"fake-jwt-token\", name: user.name });\n//         } else {\n//           resolve({ message: \"Email ou mot de passe incorrect\" });\n//         }\n//       }, 500);\n//     });\n//   },\n//   getTasks() {\n//     return new Promise((resolve) => {\n//       setTimeout(() => resolve(this.tasks), 300);\n//     });\n//   },\n//   createTask(task) {\n//     return new Promise((resolve) => {\n//       const newTask = { ...task, id: Date.now() };\n//       this.tasks.push(newTask);\n//       setTimeout(() => resolve(newTask), 300);\n//     });\n//   },\n//   updateTask(id, updated) {\n//     return new Promise((resolve) => {\n//       this.tasks = this.tasks.map((t) =>\n//         t.id === id ? { ...t, ...updated } : t\n//       );\n//       setTimeout(() => resolve(this.tasks.find((t) => t.id === id)), 300);\n//     });\n//   },\n//   deleteTask(id) {\n//     return new Promise((resolve) => {\n//       this.tasks = this.tasks.filter((t) => t.id !== id);\n//       setTimeout(() => resolve({ success: true }), 300);\n//     });\n//   },\n// };\n\n// // ======== Composant Navbar ==========\n// function Navbar({ onLogout, userName }) {\n//   return (\n//     <nav\n//       style={{\n//         backgroundColor: \"#007BFF\",\n//         padding: \"10px 20px\",\n//         color: \"#fff\",\n//         display: \"flex\",\n//         justifyContent: \"space-between\",\n//         alignItems: \"center\",\n//         fontWeight: \"bold\",\n//         fontSize: \"1.2rem\",\n//         marginBottom: 20,\n//         borderRadius: 6,\n//       }}\n//     >\n//       <div>Mon App Tâches - Bonjour {userName}</div>\n//       <button\n//         onClick={() => {\n//           if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\n//             onLogout();\n//           }\n//         }}\n//         style={{\n//           backgroundColor: \"#dc3545\",\n//           color: \"white\",\n//           border: \"none\",\n//           padding: \"6px 12px\",\n//           borderRadius: 4,\n//           cursor: \"pointer\",\n//         }}\n//       >\n//         Déconnexion\n//       </button>\n//     </nav>\n//   );\n// }\n\n// // ======== Login ==========\n// function Login({ onLogin }) {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     const result = await fakeApi.login(email, password);\n//     if (result.token) {\n//       onLogin(result.token, result.name);\n//     } else {\n//       setError(result.message || \"Erreur de connexion\");\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         maxWidth: 350,\n//         margin: \"40px auto\",\n//         padding: 20,\n//         border: \"1px solid #ccc\",\n//         borderRadius: 8,\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Connexion</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Mot de passe\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <button\n//           type=\"submit\"\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             backgroundColor: \"#007BFF\",\n//             color: \"white\",\n//             fontWeight: \"bold\",\n//             border: \"none\",\n//             borderRadius: 5,\n//             cursor: \"pointer\",\n//           }}\n//         >\n//           Se connecter\n//         </button>\n//         {error && (\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\n//             {error}\n//           </p>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }\n\n// // ======== Register ==========\n// function Register({ onRegister }) {\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setSuccess(\"\");\n//     const result = await fakeApi.register(name, email, password);\n//     if (result.message) {\n//       setSuccess(\"Inscription réussie ! Vous pouvez vous connecter.\");\n//       setName(\"\");\n//       setEmail(\"\");\n//       setPassword(\"\");\n//       setTimeout(() => {\n//         onRegister();\n//       }, 1500);\n//     } else {\n//       setError(result.error || \"Erreur lors de l'inscription\");\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         maxWidth: 350,\n//         margin: \"40px auto\",\n//         padding: 20,\n//         border: \"1px solid #ccc\",\n//         borderRadius: 8,\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Inscription</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Nom\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Mot de passe\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             marginBottom: 15,\n//             borderRadius: 5,\n//             border: \"1px solid #ccc\",\n//           }}\n//         />\n//         <button\n//           type=\"submit\"\n//           style={{\n//             width: \"100%\",\n//             padding: 10,\n//             backgroundColor: \"#007BFF\",\n//             color: \"white\",\n//             fontWeight: \"bold\",\n//             border: \"none\",\n//             borderRadius: 5,\n//             cursor: \"pointer\",\n//           }}\n//         >\n//           S'inscrire\n//         </button>\n//         {success && (\n//           <p style={{ color: \"green\", marginTop: 15, textAlign: \"center\" }}>\n//             {success}\n//           </p>\n//         )}\n//         {error && (\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\n//             {error}\n//           </p>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }\n\n// // ======== TaskForm ==========\n// function TaskForm({ onSave, editingTask, cancelEdit }) {\n//   const [title, setTitle] = useState(\"\");\n//   const [status, setStatus] = useState(\"pending\");\n//   const [dueDate, setDueDate] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n\n//   useEffect(() => {\n//     if (editingTask) {\n//       setTitle(editingTask.title || \"\");\n//       setStatus(editingTask.status || \"pending\");\n//       setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\n//       setDescription(editingTask.description || \"\");\n//     } else {\n//       setTitle(\"\");\n//       setStatus(\"pending\");\n//       setDueDate(\"\");\n//       setDescription(\"\");\n//     }\n//   }, [editingTask]);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!title.trim()) {\n//       alert(\"Le titre est obligatoire\");\n//       return;\n//     }\n//     onSave({ title, status, dueDate, description });\n//   };\n\n//   return (\n//     <form\n//       onSubmit={handleSubmit}\n//       style={{\n//         marginBottom: 20,\n//         border: \"1px solid #ccc\",\n//         padding: 15,\n//         borderRadius: 6,\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <h3>{editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"}</h3>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Titre :</label>\n//         <br />\n//         <input\n//           value={title}\n//           onChange={(e) => setTitle(e.target.value)}\n//           required\n//           style={{ width: \"100%\", padding: 5 }}\n//         />\n//       </div>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Statut :</label>\n//         <br />\n//         <select\n//           value={status}\n//           onChange={(e) => setStatus(e.target.value)}\n//           required\n//           style={{ width: \"100%\", padding: 5 }}\n//         >\n//           <option value=\"pending\">En attente</option>\n//           <option value=\"in-progress\">En cours</option>\n//           <option value=\"done\">Terminé</option>\n//         </select>\n//       </div>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Date limite :</label>\n//         <br />\n//         <input\n//           type=\"date\"\n//           value={dueDate}\n//           onChange={(e) => setDueDate(e.target.value)}\n//           style={{ width: \"100%\", padding: 5 }}\n//         />\n//       </div>\n\n//       <div style={{ marginBottom: 10 }}>\n//         <label>Description :</label>\n//         <br />\n//         <textarea\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           style={{ width: \"100%\", padding: 5 }}\n//         />\n//       </div>\n\n//       <button type=\"submit\" style={{ padding: \"5px 10px\" }}>\n//         {editingTask ? \"Mettre à jour\" : \"Enregistrer\"}\n//       </button>\n\n//       {editingTask && (\n//         <button\n//           type=\"button\"\n//           onClick={cancelEdit}\n//           style={{ padding: \"5px 10px\", marginLeft: 10, background: \"#ccc\" }}\n//         >\n//           Annuler\n//         </button>\n//       )}\n//     </form>\n//   );\n// }\n\n// // ======== TaskList ==========\n// const statusColors = {\n//   pending: \"#f0ad4e\",\n//   \"in-progress\": \"#0275d8\",\n//   done: \"#5cb85c\",\n// };\n\n// function TaskList({ tasks, onEdit, onDelete }) {\n//   return (\n//     <table\n//       style={{\n//         width: \"100%\",\n//         borderCollapse: \"collapse\",\n//         boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\n//         backgroundColor: \"#fff\",\n//       }}\n//     >\n//       <thead>\n//         <tr style={{ backgroundColor: \"#007BFF\", color: \"#fff\", textAlign: \"left\" }}>\n//           <th style={{ padding: \"10px\" }}>Titre</th>\n//           <th style={{ padding: \"10px\" }}>Statut</th>\n//           <th style={{ padding: \"10px\" }}>Date limite</th>\n//           <th style={{ padding: \"10px\" }}>Description</th>\n//           <th style={{ padding: \"10px\" }}>Actions</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {tasks.length > 0 ? (\n//           tasks.map((task) => (\n//             <tr\n//               key={task.id}\n//               style={{\n//                 borderBottom: \"1px solid #ddd\",\n//                 transition: \"background-color 0.3s\",\n//                 cursor: \"default\",\n//               }}\n//               onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#f9f9f9\")}\n//               onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"\")}\n//             >\n//               <td style={{ padding: \"8px\" }}>{task.title || \"Titre manquant\"}</td>\n//               <td style={{ padding: \"8px\" }}>\n//                 <span\n//                   style={{\n//                     padding: \"4px 8px\",\n//                     borderRadius: 12,\n//                     color: \"#fff\",\n//                     backgroundColor: statusColors[task.status] || \"#6c757d\",\n//                     fontWeight: \"bold\",\n//                     textTransform: \"capitalize\",\n//                     fontSize: \"0.9rem\",\n//                     display: \"inline-block\",\n//                     minWidth: 90,\n//                     textAlign: \"center\",\n//                   }}\n//                 >\n//                   {task.status || \"Statut manquant\"}\n//                 </span>\n//               </td>\n//               <td style={{ padding: \"8px\" }}>\n//                 {task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"}\n//               </td>\n//               <td style={{ padding: \"8px\" }}>{task.description || \"Description manquante\"}</td>\n//               <td style={{ padding: \"8px\" }}>\n//                 <button\n//                   onClick={() => onEdit(task)}\n//                   style={{\n//                     cursor: \"pointer\",\n//                     marginRight: 8,\n//                     backgroundColor: \"#ffc107\",\n//                     border: \"none\",\n//                     borderRadius: 4,\n//                     padding: \"4px 8px\",\n//                   }}\n//                   title=\"Modifier\"\n//                 >\n//                   ✏️\n//                 </button>\n//                 <button\n//                   onClick={() => {\n//                     if (window.confirm(\"Confirmer la suppression ?\")) onDelete(task.id);\n//                   }}\n//                   style={{\n//                     cursor: \"pointer\",\n//                     backgroundColor: \"#dc3545\",\n//                     border: \"none\",\n//                     borderRadius: 4,\n//                     padding: \"4px 8px\",\n//                     color: \"#fff\",\n//                   }}\n//                   title=\"Supprimer\"\n//                 >\n//                   🗑️\n//                 </button>\n//               </td>\n//             </tr>\n//           ))\n//         ) : (\n//           <tr>\n//             <td colSpan=\"5\" style={{ textAlign: \"center\", padding: 20 }}>\n//               Aucune tâche disponible\n//             </td>\n//           </tr>\n//         )}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// // ======== APP PRINCIPAL ==========\n// export default function App() {\n//   const [token, setToken] = useState(\"\");\n//   const [userName, setUserName] = useState(\"\");\n//   const [view, setView] = useState(\"login\"); // login | register | dashboard\n\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n\n//   // Charger les tâches quand on est connecté et sur dashboard\n//   useEffect(() => {\n//     if (token && view === \"dashboard\") {\n//       fakeApi.getTasks().then(setTasks);\n//     }\n//   }, [token, view]);\n\n//   // Connexion réussie\n//   const handleLogin = (jwt, name) => {\n//     setToken(jwt);\n//     setUserName(name);\n//     setView(\"dashboard\");\n//   };\n\n//   // Déconnexion\n//   const handleLogout = () => {\n//     setToken(\"\");\n//     setUserName(\"\");\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView(\"login\");\n//   };\n\n//   // Enregistrer / modifier tâche\n//   const handleSaveTask = (taskData) => {\n//     if (editingTask) {\n//       fakeApi.updateTask(editingTask.id, taskData).then((updated) => {\n//         setTasks(tasks.map((t) => (t.id === updated.id ? updated : t)));\n//         setEditingTask(null);\n//       });\n//     } else {\n//       fakeApi.createTask(taskData).then((newTask) => {\n//         setTasks([...tasks, newTask]);\n//       });\n//     }\n//   };\n\n//   // Supprimer tâche\n//   const handleDeleteTask = (id) => {\n//     fakeApi.deleteTask(id).then(() => {\n//       setTasks(tasks.filter((t) => t.id !== id));\n//       if (editingTask && editingTask.id === id) {\n//         setEditingTask(null);\n//       }\n//     });\n//   };\n\n//   if (view === \"login\") {\n//     return (\n//       <>\n//         <Login onLogin={handleLogin} />\n//         <p style={{ textAlign: \"center\" }}>\n//           Pas encore de compte ?{\" \"}\n//           <button\n//             onClick={() => setView(\"register\")}\n//             style={{\n//               color: \"blue\",\n//               cursor: \"pointer\",\n//               border: \"none\",\n//               background: \"none\",\n//               padding: 0,\n//             }}\n//           >\n//             Inscrivez-vous\n//           </button>\n//         </p>\n//       </>\n//     );\n//   }\n\n//   if (view === \"register\") {\n//     return (\n//       <>\n//         <Register onRegister={() => setView(\"login\")} />\n//         <p style={{ textAlign: \"center\" }}>\n//           Déjà un compte ?{\" \"}\n//           <button\n//             onClick={() => setView(\"login\")}\n//             style={{\n//               color: \"blue\",\n//               cursor: \"pointer\",\n//               border: \"none\",\n//               background: \"none\",\n//               padding: 0,\n//             }}\n//           >\n//             Connectez-vous\n//           </button>\n//         </p>\n//       </>\n//     );\n//   }\n\n//   if (view === \"dashboard\") {\n//     return (\n//       <div\n//         style={{\n//           maxWidth: 900,\n//           margin: \"auto\",\n//           padding: 20,\n//                    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n//           backgroundColor: \"#f5f5f5\",\n//           minHeight: \"100vh\",\n//         }}\n//       >\n//         <Navbar onLogout={handleLogout} userName={userName} />\n\n//         <TaskForm\n//           onSave={handleSaveTask}\n//           editingTask={editingTask}\n//           cancelEdit={() => setEditingTask(null)}\n//         />\n\n//         <TaskList\n//           tasks={tasks}\n//           onEdit={setEditingTask}\n//           onDelete={handleDeleteTask}\n//         />\n//       </div>\n//     );\n//   }\n\n//   return null; // fallback, ne devrait jamais arriver\n// }\nimport React, { useState, useEffect } from \"react\";\n\n// ======== FAKE API simulée ==========\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeApi = {\n  users: [],\n  tasks: [],\n  register(name, email, password) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (this.users.some(u => u.email === email)) {\n          resolve({\n            error: \"Cet email est déjà utilisé.\"\n          });\n        } else {\n          this.users.push({\n            name,\n            email,\n            password\n          });\n          resolve({\n            message: \"Inscription réussie\"\n          });\n        }\n      }, 500);\n    });\n  },\n  login(email, password) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const user = this.users.find(u => u.email === email && u.password === password);\n        if (user) {\n          resolve({\n            token: \"fake-jwt-token\",\n            name: user.name\n          });\n        } else {\n          resolve({\n            message: \"Email ou mot de passe incorrect\"\n          });\n        }\n      }, 500);\n    });\n  },\n  getTasks() {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(this.tasks), 300);\n    });\n  },\n  createTask(task) {\n    return new Promise(resolve => {\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      this.tasks.push(newTask);\n      setTimeout(() => resolve(newTask), 300);\n    });\n  },\n  updateTask(id, updated) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.map(t => t.id === id ? {\n        ...t,\n        ...updated\n      } : t);\n      setTimeout(() => resolve(this.tasks.find(t => t.id === id)), 300);\n    });\n  },\n  deleteTask(id) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.filter(t => t.id !== id);\n      setTimeout(() => resolve({\n        success: true\n      }), 300);\n    });\n  }\n};\n\n// ======== Navbar ==========\nfunction Navbar({\n  onLogout,\n  userName\n}) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    style: {\n      backgroundColor: \"#007BFF\",\n      padding: \"10px 20px\",\n      color: \"#fff\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      fontWeight: \"bold\",\n      fontSize: \"1.2rem\",\n      marginBottom: 20,\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Mon App T\\xE2ches - Bonjour \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\n          onLogout();\n        }\n      },\n      style: {\n        backgroundColor: \"#dc3545\",\n        color: \"white\",\n        border: \"none\",\n        padding: \"6px 12px\",\n        borderRadius: 4,\n        cursor: \"pointer\"\n      },\n      children: \"D\\xE9connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 705,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== Login ==========\n_c = Navbar;\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    const result = await fakeApi.login(email, password);\n    if (result.token) {\n      onLogin(result.token, result.name);\n    } else {\n      setError(result.message || \"Erreur de connexion\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 350,\n      margin: \"40px auto\",\n      padding: 20,\n      border: \"1px solid #ccc\",\n      borderRadius: 8,\n      backgroundColor: \"#f9f9f9\",\n      boxShadow: \"0 0 10px rgba(0,0,0,0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 20\n      },\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 15,\n          borderRadius: 5,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Mot de passe\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 15,\n          borderRadius: 5,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: \"100%\",\n          padding: 10,\n          backgroundColor: \"#007BFF\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          borderRadius: 5,\n          cursor: \"pointer\"\n        },\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          marginTop: 15,\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 759,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== Register ==========\n_s(Login, \"/oUdbphBttpIcUsa7P1v1069QkA=\");\n_c2 = Login;\nfunction Register({\n  onRegister\n}) {\n  _s2();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    const result = await fakeApi.register(name, email, password);\n    if (result.message) {\n      setSuccess(\"Inscription réussie ! Vous pouvez vous connecter.\");\n      setName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setTimeout(() => {\n        onRegister();\n      }, 1500);\n    } else {\n      setError(result.error || \"Erreur lors de l'inscription\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 350,\n      margin: \"40px auto\",\n      padding: 20,\n      border: \"1px solid #ccc\",\n      borderRadius: 8,\n      backgroundColor: \"#f9f9f9\",\n      boxShadow: \"0 0 10px rgba(0,0,0,0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 20\n      },\n      children: \"Inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nom\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 15,\n          borderRadius: 5,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 15,\n          borderRadius: 5,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Mot de passe\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 15,\n          borderRadius: 5,\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: \"100%\",\n          padding: 10,\n          backgroundColor: \"#007BFF\",\n          color: \"white\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          borderRadius: 5,\n          cursor: \"pointer\"\n        },\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\",\n          marginTop: 15,\n          textAlign: \"center\"\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\",\n          marginTop: 15,\n          textAlign: \"center\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 852,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== TaskForm ========\n_s2(Register, \"vO1F+Trg2QhPVC1riPvb3dKGacw=\");\n_c3 = Register;\nfunction TaskForm({\n  onSave,\n  editingTask,\n  cancelEdit\n}) {\n  _s3();\n  const [title, setTitle] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title);\n      setStatus(editingTask.status);\n      setDueDate(editingTask.dueDate);\n      setDescription(editingTask.description);\n    } else {\n      setTitle(\"\");\n      setStatus(\"pending\");\n      setDueDate(\"\");\n      setDescription(\"\");\n    }\n  }, [editingTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert(\"Le titre est obligatoire\");\n      return;\n    }\n    onSave({\n      title,\n      status,\n      dueDate,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: 20,\n      padding: 15,\n      border: \"1px solid #ccc\",\n      borderRadius: 6,\n      backgroundColor: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Titre\",\n      required: true,\n      style: {\n        width: \"100%\",\n        padding: 8,\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      style: {\n        width: \"100%\",\n        padding: 8,\n        marginBottom: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"En attente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"in-progress\",\n        children: \"En cours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"done\",\n        children: \"Termin\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value),\n      style: {\n        width: \"100%\",\n        padding: 8,\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\",\n      style: {\n        width: \"100%\",\n        padding: 8,\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        padding: 8,\n        backgroundColor: \"#007BFF\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: 4,\n        marginRight: 5\n      },\n      children: editingTask ? \"Modifier\" : \"Ajouter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: cancelEdit,\n      style: {\n        padding: 8,\n        backgroundColor: \"#6c757d\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: 4\n      },\n      children: \"Annuler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 968,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== TaskList ==========\n_s3(TaskForm, \"wMPaLzBV1C+1Yc+RYgJrjY/LpNE=\");\n_c4 = TaskForm;\nconst statusColors = {\n  pending: \"#f0ad4e\",\n  \"in-progress\": \"#0275d8\",\n  done: \"#5cb85c\"\n};\nfunction TaskList({\n  tasks,\n  onEdit,\n  onDelete\n}) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\",\n      borderCollapse: \"collapse\",\n      backgroundColor: \"#fff\",\n      boxShadow: \"0 0 5px rgba(0,0,0,0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          backgroundColor: \"#007BFF\",\n          color: \"#fff\",\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: 10\n          },\n          children: \"Titre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: 10\n          },\n          children: \"Statut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: 10\n          },\n          children: \"Date limite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: 10\n          },\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            padding: 10\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n        style: {\n          borderBottom: \"1px solid #ddd\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: 8\n          },\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: 8,\n            color: statusColors[task.status]\n          },\n          children: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: 8\n          },\n          children: task.dueDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: 8\n          },\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            padding: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onEdit(task),\n            style: {\n              marginRight: 5\n            },\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (window.confirm(\"Supprimer cette tâche ?\")) onDelete(task.id);\n            },\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"5\",\n          style: {\n            textAlign: \"center\",\n            padding: 10\n          },\n          children: \"Aucune t\\xE2che\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 990,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== TaskFilter ==========\n_c5 = TaskList;\nfunction TaskFilter({\n  onFilterChange\n}) {\n  _s4();\n  const [status, setStatus] = useState(\"\");\n  const [sort, setSort] = useState(\"\");\n  useEffect(() => {\n    onFilterChange({\n      status,\n      sort\n    });\n  }, [status, sort]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: status,\n      onChange: e => setStatus(e.target.value),\n      style: {\n        padding: 6,\n        marginRight: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Tous les statuts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"En attente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"in-progress\",\n        children: \"En cours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"done\",\n        children: \"Termin\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: sort,\n      onChange: e => setSort(e.target.value),\n      style: {\n        padding: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Tri par d\\xE9faut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"asc\",\n        children: \"Date croissante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"desc\",\n        children: \"Date d\\xE9croissante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1032,\n    columnNumber: 5\n  }, this);\n}\n\n// ======== App ==========\n_s4(TaskFilter, \"KNH35PKiZ14LCPLair54G6YkHKo=\");\n_c6 = TaskFilter;\nexport default function App() {\n  _s5();\n  const [view, setView] = useState(\"login\");\n  const [user, setUser] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [editingTask, setEditingTask] = useState(null);\n  const filteredTasks = tasks.filter(t => !filters.status || t.status === filters.status).sort((a, b) => {\n    if (filters.sort === \"asc\") return new Date(a.dueDate) - new Date(b.dueDate);\n    if (filters.sort === \"desc\") return new Date(b.dueDate) - new Date(a.dueDate);\n    return 0;\n  });\n  const addTask = task => {\n    if (editingTask) {\n      setTasks(tasks.map(t => t.id === editingTask.id ? {\n        ...task,\n        id: t.id\n      } : t));\n      setEditingTask(null);\n    } else {\n      setTasks([...tasks, {\n        ...task,\n        id: Date.now()\n      }]);\n    }\n  };\n  const deleteTask = id => setTasks(tasks.filter(t => t.id !== id));\n  if (view === \"login\") {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: (token, name) => {\n        setUser(name);\n        setView(\"dashboard\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 12\n    }, this);\n  }\n  if (view === \"register\") {\n    return /*#__PURE__*/_jsxDEV(Register, {\n      onRegister: () => setView(\"login\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 12\n    }, this);\n  }\n  if (view === \"dashboard\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userName: user,\n        onLogout: () => setView(\"login\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n        onFilterChange: setFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        onSave: addTask,\n        editingTask: editingTask,\n        cancelEdit: () => setEditingTask(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        onEdit: setEditingTask,\n        onDelete: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n}\n_s5(App, \"nuTtndZIHDmV+7ULP5i4mDjIczY=\");\n_c7 = App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Login\");\n$RefreshReg$(_c3, \"Register\");\n$RefreshReg$(_c4, \"TaskForm\");\n$RefreshReg$(_c5, \"TaskList\");\n$RefreshReg$(_c6, \"TaskFilter\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fakeApi","users","tasks","register","name","email","password","Promise","resolve","setTimeout","some","u","error","push","message","login","user","find","token","getTasks","createTask","task","newTask","id","Date","now","updateTask","updated","map","t","deleteTask","filter","success","Navbar","onLogout","userName","style","backgroundColor","padding","color","display","justifyContent","alignItems","fontWeight","fontSize","marginBottom","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","confirm","border","cursor","_c","Login","onLogin","_s","setEmail","setPassword","setError","handleSubmit","e","preventDefault","result","maxWidth","margin","boxShadow","textAlign","onSubmit","type","placeholder","value","onChange","target","required","width","marginTop","_c2","Register","onRegister","_s2","setName","setSuccess","_c3","TaskForm","onSave","editingTask","cancelEdit","_s3","title","setTitle","status","setStatus","dueDate","setDueDate","description","setDescription","trim","alert","marginRight","_c4","statusColors","pending","done","TaskList","onEdit","onDelete","borderCollapse","length","borderBottom","colSpan","_c5","TaskFilter","onFilterChange","_s4","sort","setSort","_c6","App","_s5","view","setView","setUser","setTasks","filters","setFilters","setEditingTask","filteredTasks","a","b","addTask","_c7","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// // ======== FAKE API simulée ==========\r\n// const fakeApi = {\r\n//   users: [],\r\n//   tasks: [],\r\n//   register(name, email, password) {\r\n//     return new Promise((resolve) => {\r\n//       setTimeout(() => {\r\n//         if (this.users.some((u) => u.email === email)) {\r\n//           resolve({ error: \"Cet email est déjà utilisé.\" });\r\n//         } else {\r\n//           this.users.push({ name, email, password });\r\n//           resolve({ message: \"Inscription réussie\" });\r\n//         }\r\n//       }, 500);\r\n//     });\r\n//   },\r\n//   login(email, password) {\r\n//     return new Promise((resolve) => {\r\n//       setTimeout(() => {\r\n//         const user = this.users.find(\r\n//           (u) => u.email === email && u.password === password\r\n//         );\r\n//         if (user) {\r\n//           resolve({ token: \"fake-jwt-token\", name: user.name });\r\n//         } else {\r\n//           resolve({ message: \"Email ou mot de passe incorrect\" });\r\n//         }\r\n//       }, 500);\r\n//     });\r\n//   },\r\n//   getTasks() {\r\n//     return new Promise((resolve) => {\r\n//       setTimeout(() => resolve(this.tasks), 300);\r\n//     });\r\n//   },\r\n//   createTask(task) {\r\n//     return new Promise((resolve) => {\r\n//       const newTask = { ...task, id: Date.now() };\r\n//       this.tasks.push(newTask);\r\n//       setTimeout(() => resolve(newTask), 300);\r\n//     });\r\n//   },\r\n//   updateTask(id, updated) {\r\n//     return new Promise((resolve) => {\r\n//       this.tasks = this.tasks.map((t) =>\r\n//         t.id === id ? { ...t, ...updated } : t\r\n//       );\r\n//       setTimeout(() => resolve(this.tasks.find((t) => t.id === id)), 300);\r\n//     });\r\n//   },\r\n//   deleteTask(id) {\r\n//     return new Promise((resolve) => {\r\n//       this.tasks = this.tasks.filter((t) => t.id !== id);\r\n//       setTimeout(() => resolve({ success: true }), 300);\r\n//     });\r\n//   },\r\n// };\r\n\r\n// // ======== Composant Navbar ==========\r\n// function Navbar({ onLogout, userName }) {\r\n//   return (\r\n//     <nav\r\n//       style={{\r\n//         backgroundColor: \"#007BFF\",\r\n//         padding: \"10px 20px\",\r\n//         color: \"#fff\",\r\n//         display: \"flex\",\r\n//         justifyContent: \"space-between\",\r\n//         alignItems: \"center\",\r\n//         fontWeight: \"bold\",\r\n//         fontSize: \"1.2rem\",\r\n//         marginBottom: 20,\r\n//         borderRadius: 6,\r\n//       }}\r\n//     >\r\n//       <div>Mon App Tâches - Bonjour {userName}</div>\r\n//       <button\r\n//         onClick={() => {\r\n//           if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\r\n//             onLogout();\r\n//           }\r\n//         }}\r\n//         style={{\r\n//           backgroundColor: \"#dc3545\",\r\n//           color: \"white\",\r\n//           border: \"none\",\r\n//           padding: \"6px 12px\",\r\n//           borderRadius: 4,\r\n//           cursor: \"pointer\",\r\n//         }}\r\n//       >\r\n//         Déconnexion\r\n//       </button>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n// // ======== Login ==========\r\n// function Login({ onLogin }) {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     const result = await fakeApi.login(email, password);\r\n//     if (result.token) {\r\n//       onLogin(result.token, result.name);\r\n//     } else {\r\n//       setError(result.message || \"Erreur de connexion\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         maxWidth: 350,\r\n//         margin: \"40px auto\",\r\n//         padding: 20,\r\n//         border: \"1px solid #ccc\",\r\n//         borderRadius: 8,\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Connexion</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Mot de passe\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             backgroundColor: \"#007BFF\",\r\n//             color: \"white\",\r\n//             fontWeight: \"bold\",\r\n//             border: \"none\",\r\n//             borderRadius: 5,\r\n//             cursor: \"pointer\",\r\n//           }}\r\n//         >\r\n//           Se connecter\r\n//         </button>\r\n//         {error && (\r\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\r\n//             {error}\r\n//           </p>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // ======== Register ==========\r\n// function Register({ onRegister }) {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [success, setSuccess] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     setSuccess(\"\");\r\n//     const result = await fakeApi.register(name, email, password);\r\n//     if (result.message) {\r\n//       setSuccess(\"Inscription réussie ! Vous pouvez vous connecter.\");\r\n//       setName(\"\");\r\n//       setEmail(\"\");\r\n//       setPassword(\"\");\r\n//       setTimeout(() => {\r\n//         onRegister();\r\n//       }, 1500);\r\n//     } else {\r\n//       setError(result.error || \"Erreur lors de l'inscription\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         maxWidth: 350,\r\n//         margin: \"40px auto\",\r\n//         padding: 20,\r\n//         border: \"1px solid #ccc\",\r\n//         borderRadius: 8,\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Inscription</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Nom\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Mot de passe\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             marginBottom: 15,\r\n//             borderRadius: 5,\r\n//             border: \"1px solid #ccc\",\r\n//           }}\r\n//         />\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             width: \"100%\",\r\n//             padding: 10,\r\n//             backgroundColor: \"#007BFF\",\r\n//             color: \"white\",\r\n//             fontWeight: \"bold\",\r\n//             border: \"none\",\r\n//             borderRadius: 5,\r\n//             cursor: \"pointer\",\r\n//           }}\r\n//         >\r\n//           S'inscrire\r\n//         </button>\r\n//         {success && (\r\n//           <p style={{ color: \"green\", marginTop: 15, textAlign: \"center\" }}>\r\n//             {success}\r\n//           </p>\r\n//         )}\r\n//         {error && (\r\n//           <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\r\n//             {error}\r\n//           </p>\r\n//         )}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // ======== TaskForm ==========\r\n// function TaskForm({ onSave, editingTask, cancelEdit }) {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"pending\");\r\n//   const [dueDate, setDueDate] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     if (editingTask) {\r\n//       setTitle(editingTask.title || \"\");\r\n//       setStatus(editingTask.status || \"pending\");\r\n//       setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\r\n//       setDescription(editingTask.description || \"\");\r\n//     } else {\r\n//       setTitle(\"\");\r\n//       setStatus(\"pending\");\r\n//       setDueDate(\"\");\r\n//       setDescription(\"\");\r\n//     }\r\n//   }, [editingTask]);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!title.trim()) {\r\n//       alert(\"Le titre est obligatoire\");\r\n//       return;\r\n//     }\r\n//     onSave({ title, status, dueDate, description });\r\n//   };\r\n\r\n//   return (\r\n//     <form\r\n//       onSubmit={handleSubmit}\r\n//       style={{\r\n//         marginBottom: 20,\r\n//         border: \"1px solid #ccc\",\r\n//         padding: 15,\r\n//         borderRadius: 6,\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <h3>{editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"}</h3>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Titre :</label>\r\n//         <br />\r\n//         <input\r\n//           value={title}\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//           required\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Statut :</label>\r\n//         <br />\r\n//         <select\r\n//           value={status}\r\n//           onChange={(e) => setStatus(e.target.value)}\r\n//           required\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         >\r\n//           <option value=\"pending\">En attente</option>\r\n//           <option value=\"in-progress\">En cours</option>\r\n//           <option value=\"done\">Terminé</option>\r\n//         </select>\r\n//       </div>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Date limite :</label>\r\n//         <br />\r\n//         <input\r\n//           type=\"date\"\r\n//           value={dueDate}\r\n//           onChange={(e) => setDueDate(e.target.value)}\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <div style={{ marginBottom: 10 }}>\r\n//         <label>Description :</label>\r\n//         <br />\r\n//         <textarea\r\n//           value={description}\r\n//           onChange={(e) => setDescription(e.target.value)}\r\n//           style={{ width: \"100%\", padding: 5 }}\r\n//         />\r\n//       </div>\r\n\r\n//       <button type=\"submit\" style={{ padding: \"5px 10px\" }}>\r\n//         {editingTask ? \"Mettre à jour\" : \"Enregistrer\"}\r\n//       </button>\r\n\r\n//       {editingTask && (\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={cancelEdit}\r\n//           style={{ padding: \"5px 10px\", marginLeft: 10, background: \"#ccc\" }}\r\n//         >\r\n//           Annuler\r\n//         </button>\r\n//       )}\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// // ======== TaskList ==========\r\n// const statusColors = {\r\n//   pending: \"#f0ad4e\",\r\n//   \"in-progress\": \"#0275d8\",\r\n//   done: \"#5cb85c\",\r\n// };\r\n\r\n// function TaskList({ tasks, onEdit, onDelete }) {\r\n//   return (\r\n//     <table\r\n//       style={{\r\n//         width: \"100%\",\r\n//         borderCollapse: \"collapse\",\r\n//         boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n//         backgroundColor: \"#fff\",\r\n//       }}\r\n//     >\r\n//       <thead>\r\n//         <tr style={{ backgroundColor: \"#007BFF\", color: \"#fff\", textAlign: \"left\" }}>\r\n//           <th style={{ padding: \"10px\" }}>Titre</th>\r\n//           <th style={{ padding: \"10px\" }}>Statut</th>\r\n//           <th style={{ padding: \"10px\" }}>Date limite</th>\r\n//           <th style={{ padding: \"10px\" }}>Description</th>\r\n//           <th style={{ padding: \"10px\" }}>Actions</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {tasks.length > 0 ? (\r\n//           tasks.map((task) => (\r\n//             <tr\r\n//               key={task.id}\r\n//               style={{\r\n//                 borderBottom: \"1px solid #ddd\",\r\n//                 transition: \"background-color 0.3s\",\r\n//                 cursor: \"default\",\r\n//               }}\r\n//               onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#f9f9f9\")}\r\n//               onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"\")}\r\n//             >\r\n//               <td style={{ padding: \"8px\" }}>{task.title || \"Titre manquant\"}</td>\r\n//               <td style={{ padding: \"8px\" }}>\r\n//                 <span\r\n//                   style={{\r\n//                     padding: \"4px 8px\",\r\n//                     borderRadius: 12,\r\n//                     color: \"#fff\",\r\n//                     backgroundColor: statusColors[task.status] || \"#6c757d\",\r\n//                     fontWeight: \"bold\",\r\n//                     textTransform: \"capitalize\",\r\n//                     fontSize: \"0.9rem\",\r\n//                     display: \"inline-block\",\r\n//                     minWidth: 90,\r\n//                     textAlign: \"center\",\r\n//                   }}\r\n//                 >\r\n//                   {task.status || \"Statut manquant\"}\r\n//                 </span>\r\n//               </td>\r\n//               <td style={{ padding: \"8px\" }}>\r\n//                 {task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"}\r\n//               </td>\r\n//               <td style={{ padding: \"8px\" }}>{task.description || \"Description manquante\"}</td>\r\n//               <td style={{ padding: \"8px\" }}>\r\n//                 <button\r\n//                   onClick={() => onEdit(task)}\r\n//                   style={{\r\n//                     cursor: \"pointer\",\r\n//                     marginRight: 8,\r\n//                     backgroundColor: \"#ffc107\",\r\n//                     border: \"none\",\r\n//                     borderRadius: 4,\r\n//                     padding: \"4px 8px\",\r\n//                   }}\r\n//                   title=\"Modifier\"\r\n//                 >\r\n//                   ✏️\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => {\r\n//                     if (window.confirm(\"Confirmer la suppression ?\")) onDelete(task.id);\r\n//                   }}\r\n//                   style={{\r\n//                     cursor: \"pointer\",\r\n//                     backgroundColor: \"#dc3545\",\r\n//                     border: \"none\",\r\n//                     borderRadius: 4,\r\n//                     padding: \"4px 8px\",\r\n//                     color: \"#fff\",\r\n//                   }}\r\n//                   title=\"Supprimer\"\r\n//                 >\r\n//                   🗑️\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))\r\n//         ) : (\r\n//           <tr>\r\n//             <td colSpan=\"5\" style={{ textAlign: \"center\", padding: 20 }}>\r\n//               Aucune tâche disponible\r\n//             </td>\r\n//           </tr>\r\n//         )}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n// // ======== APP PRINCIPAL ==========\r\n// export default function App() {\r\n//   const [token, setToken] = useState(\"\");\r\n//   const [userName, setUserName] = useState(\"\");\r\n//   const [view, setView] = useState(\"login\"); // login | register | dashboard\r\n\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n\r\n//   // Charger les tâches quand on est connecté et sur dashboard\r\n//   useEffect(() => {\r\n//     if (token && view === \"dashboard\") {\r\n//       fakeApi.getTasks().then(setTasks);\r\n//     }\r\n//   }, [token, view]);\r\n\r\n//   // Connexion réussie\r\n//   const handleLogin = (jwt, name) => {\r\n//     setToken(jwt);\r\n//     setUserName(name);\r\n//     setView(\"dashboard\");\r\n//   };\r\n\r\n//   // Déconnexion\r\n//   const handleLogout = () => {\r\n//     setToken(\"\");\r\n//     setUserName(\"\");\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView(\"login\");\r\n//   };\r\n\r\n//   // Enregistrer / modifier tâche\r\n//   const handleSaveTask = (taskData) => {\r\n//     if (editingTask) {\r\n//       fakeApi.updateTask(editingTask.id, taskData).then((updated) => {\r\n//         setTasks(tasks.map((t) => (t.id === updated.id ? updated : t)));\r\n//         setEditingTask(null);\r\n//       });\r\n//     } else {\r\n//       fakeApi.createTask(taskData).then((newTask) => {\r\n//         setTasks([...tasks, newTask]);\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   // Supprimer tâche\r\n//   const handleDeleteTask = (id) => {\r\n//     fakeApi.deleteTask(id).then(() => {\r\n//       setTasks(tasks.filter((t) => t.id !== id));\r\n//       if (editingTask && editingTask.id === id) {\r\n//         setEditingTask(null);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   if (view === \"login\") {\r\n//     return (\r\n//       <>\r\n//         <Login onLogin={handleLogin} />\r\n//         <p style={{ textAlign: \"center\" }}>\r\n//           Pas encore de compte ?{\" \"}\r\n//           <button\r\n//             onClick={() => setView(\"register\")}\r\n//             style={{\r\n//               color: \"blue\",\r\n//               cursor: \"pointer\",\r\n//               border: \"none\",\r\n//               background: \"none\",\r\n//               padding: 0,\r\n//             }}\r\n//           >\r\n//             Inscrivez-vous\r\n//           </button>\r\n//         </p>\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n//   if (view === \"register\") {\r\n//     return (\r\n//       <>\r\n//         <Register onRegister={() => setView(\"login\")} />\r\n//         <p style={{ textAlign: \"center\" }}>\r\n//           Déjà un compte ?{\" \"}\r\n//           <button\r\n//             onClick={() => setView(\"login\")}\r\n//             style={{\r\n//               color: \"blue\",\r\n//               cursor: \"pointer\",\r\n//               border: \"none\",\r\n//               background: \"none\",\r\n//               padding: 0,\r\n//             }}\r\n//           >\r\n//             Connectez-vous\r\n//           </button>\r\n//         </p>\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n//   if (view === \"dashboard\") {\r\n//     return (\r\n//       <div\r\n//         style={{\r\n//           maxWidth: 900,\r\n//           margin: \"auto\",\r\n//           padding: 20,\r\n//                    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n//           backgroundColor: \"#f5f5f5\",\r\n//           minHeight: \"100vh\",\r\n//         }}\r\n//       >\r\n//         <Navbar onLogout={handleLogout} userName={userName} />\r\n\r\n//         <TaskForm\r\n//           onSave={handleSaveTask}\r\n//           editingTask={editingTask}\r\n//           cancelEdit={() => setEditingTask(null)}\r\n//         />\r\n\r\n//         <TaskList\r\n//           tasks={tasks}\r\n//           onEdit={setEditingTask}\r\n//           onDelete={handleDeleteTask}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return null; // fallback, ne devrait jamais arriver\r\n// }\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// ======== FAKE API simulée ==========\r\nconst fakeApi = {\r\n  users: [],\r\n  tasks: [],\r\n  register(name, email, password) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (this.users.some((u) => u.email === email)) {\r\n          resolve({ error: \"Cet email est déjà utilisé.\" });\r\n        } else {\r\n          this.users.push({ name, email, password });\r\n          resolve({ message: \"Inscription réussie\" });\r\n        }\r\n      }, 500);\r\n    });\r\n  },\r\n  login(email, password) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const user = this.users.find(\r\n          (u) => u.email === email && u.password === password\r\n        );\r\n        if (user) {\r\n          resolve({ token: \"fake-jwt-token\", name: user.name });\r\n        } else {\r\n          resolve({ message: \"Email ou mot de passe incorrect\" });\r\n        }\r\n      }, 500);\r\n    });\r\n  },\r\n  getTasks() {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => resolve(this.tasks), 300);\r\n    });\r\n  },\r\n  createTask(task) {\r\n    return new Promise((resolve) => {\r\n      const newTask = { ...task, id: Date.now() };\r\n      this.tasks.push(newTask);\r\n      setTimeout(() => resolve(newTask), 300);\r\n    });\r\n  },\r\n  updateTask(id, updated) {\r\n    return new Promise((resolve) => {\r\n      this.tasks = this.tasks.map((t) =>\r\n        t.id === id ? { ...t, ...updated } : t\r\n      );\r\n      setTimeout(() => resolve(this.tasks.find((t) => t.id === id)), 300);\r\n    });\r\n  },\r\n  deleteTask(id) {\r\n    return new Promise((resolve) => {\r\n      this.tasks = this.tasks.filter((t) => t.id !== id);\r\n      setTimeout(() => resolve({ success: true }), 300);\r\n    });\r\n  },\r\n};\r\n\r\n// ======== Navbar ==========\r\nfunction Navbar({ onLogout, userName }) {\r\n  return (\r\n    <nav\r\n      style={{\r\n        backgroundColor: \"#007BFF\",\r\n        padding: \"10px 20px\",\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.2rem\",\r\n        marginBottom: 20,\r\n        borderRadius: 6,\r\n      }}\r\n    >\r\n      <div>Mon App Tâches - Bonjour {userName}</div>\r\n      <button\r\n        onClick={() => {\r\n          if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\r\n            onLogout();\r\n          }\r\n        }}\r\n        style={{\r\n          backgroundColor: \"#dc3545\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          padding: \"6px 12px\",\r\n          borderRadius: 4,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Déconnexion\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// ======== Login ==========\r\nfunction Login({ onLogin }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    const result = await fakeApi.login(email, password);\r\n    if (result.token) {\r\n      onLogin(result.token, result.name);\r\n    } else {\r\n      setError(result.message || \"Erreur de connexion\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: 350,\r\n        margin: \"40px auto\",\r\n        padding: 20,\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: 8,\r\n        backgroundColor: \"#f9f9f9\",\r\n        boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n      }}\r\n    >\r\n      <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Connexion</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            marginBottom: 15,\r\n            borderRadius: 5,\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            marginBottom: 15,\r\n            borderRadius: 5,\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            backgroundColor: \"#007BFF\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            border: \"none\",\r\n            borderRadius: 5,\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Se connecter\r\n        </button>\r\n        {error && (\r\n          <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\r\n            {error}\r\n          </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ======== Register ==========\r\nfunction Register({ onRegister }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    const result = await fakeApi.register(name, email, password);\r\n    if (result.message) {\r\n      setSuccess(\"Inscription réussie ! Vous pouvez vous connecter.\");\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setTimeout(() => {\r\n        onRegister();\r\n      }, 1500);\r\n    } else {\r\n      setError(result.error || \"Erreur lors de l'inscription\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: 350,\r\n        margin: \"40px auto\",\r\n        padding: 20,\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: 8,\r\n        backgroundColor: \"#f9f9f9\",\r\n        boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n      }}\r\n    >\r\n      <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Inscription</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nom\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            marginBottom: 15,\r\n            borderRadius: 5,\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            marginBottom: 15,\r\n            borderRadius: 5,\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            marginBottom: 15,\r\n            borderRadius: 5,\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            backgroundColor: \"#007BFF\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n            border: \"none\",\r\n            borderRadius: 5,\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          S'inscrire\r\n        </button>\r\n        {success && (\r\n          <p style={{ color: \"green\", marginTop: 15, textAlign: \"center\" }}>\r\n            {success}\r\n          </p>\r\n        )}\r\n        {error && (\r\n          <p style={{ color: \"red\", marginTop: 15, textAlign: \"center\" }}>\r\n            {error}\r\n          </p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ======== TaskForm ========\r\nfunction TaskForm({ onSave, editingTask, cancelEdit }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (editingTask) {\r\n      setTitle(editingTask.title);\r\n      setStatus(editingTask.status);\r\n      setDueDate(editingTask.dueDate);\r\n      setDescription(editingTask.description);\r\n    } else {\r\n      setTitle(\"\");\r\n      setStatus(\"pending\");\r\n      setDueDate(\"\");\r\n      setDescription(\"\");\r\n    }\r\n  }, [editingTask]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) {\r\n      alert(\"Le titre est obligatoire\");\r\n      return;\r\n    }\r\n    onSave({ title, status, dueDate, description });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: 20, padding: 15, border: \"1px solid #ccc\", borderRadius: 6, backgroundColor: \"#fff\" }}>\r\n      <h3>{editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"}</h3>\r\n      <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Titre\" required style={{ width: \"100%\", padding: 8, marginBottom: 8 }} />\r\n      <select value={status} onChange={(e) => setStatus(e.target.value)} style={{ width: \"100%\", padding: 8, marginBottom: 8 }}>\r\n        <option value=\"pending\">En attente</option>\r\n        <option value=\"in-progress\">En cours</option>\r\n        <option value=\"done\">Terminé</option>\r\n      </select>\r\n      <input type=\"date\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} style={{ width: \"100%\", padding: 8, marginBottom: 8 }} />\r\n      <input value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\" style={{ width: \"100%\", padding: 8, marginBottom: 8 }} />\r\n      <button type=\"submit\" style={{ padding: 8, backgroundColor: \"#007BFF\", color: \"#fff\", border: \"none\", borderRadius: 4, marginRight: 5 }}>\r\n        {editingTask ? \"Modifier\" : \"Ajouter\"}\r\n      </button>\r\n      {editingTask && <button type=\"button\" onClick={cancelEdit} style={{ padding: 8, backgroundColor: \"#6c757d\", color: \"#fff\", border: \"none\", borderRadius: 4 }}>Annuler</button>}\r\n    </form>\r\n  );\r\n}\r\n\r\n// ======== TaskList ==========\r\nconst statusColors = { pending: \"#f0ad4e\", \"in-progress\": \"#0275d8\", done: \"#5cb85c\" };\r\nfunction TaskList({ tasks, onEdit, onDelete }) {\r\n  return (\r\n    <table style={{ width: \"100%\", borderCollapse: \"collapse\", backgroundColor: \"#fff\", boxShadow: \"0 0 5px rgba(0,0,0,0.1)\" }}>\r\n      <thead>\r\n        <tr style={{ backgroundColor: \"#007BFF\", color: \"#fff\", textAlign: \"left\" }}>\r\n          <th style={{ padding: 10 }}>Titre</th>\r\n          <th style={{ padding: 10 }}>Statut</th>\r\n          <th style={{ padding: 10 }}>Date limite</th>\r\n          <th style={{ padding: 10 }}>Description</th>\r\n          <th style={{ padding: 10 }}>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tasks.length > 0 ? tasks.map((task) => (\r\n          <tr key={task.id} style={{ borderBottom: \"1px solid #ddd\" }}>\r\n            <td style={{ padding: 8 }}>{task.title}</td>\r\n            <td style={{ padding: 8, color: statusColors[task.status] }}>{task.status}</td>\r\n            <td style={{ padding: 8 }}>{task.dueDate}</td>\r\n            <td style={{ padding: 8 }}>{task.description}</td>\r\n            <td style={{ padding: 8 }}>\r\n              <button onClick={() => onEdit(task)} style={{ marginRight: 5 }}>✏️</button>\r\n              <button onClick={() => { if(window.confirm(\"Supprimer cette tâche ?\")) onDelete(task.id); }}>🗑️</button>\r\n            </td>\r\n          </tr>\r\n        )) : (\r\n          <tr>\r\n            <td colSpan=\"5\" style={{ textAlign: \"center\", padding: 10 }}>Aucune tâche</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\n// ======== TaskFilter ==========\r\nfunction TaskFilter({ onFilterChange }) {\r\n  const [status, setStatus] = useState(\"\");\r\n  const [sort, setSort] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    onFilterChange({ status, sort });\r\n  }, [status, sort]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <select value={status} onChange={(e) => setStatus(e.target.value)} style={{ padding: 6, marginRight: 10 }}>\r\n        <option value=\"\">Tous les statuts</option>\r\n        <option value=\"pending\">En attente</option>\r\n        <option value=\"in-progress\">En cours</option>\r\n        <option value=\"done\">Terminé</option>\r\n      </select>\r\n      <select value={sort} onChange={(e) => setSort(e.target.value)} style={{ padding: 6 }}>\r\n        <option value=\"\">Tri par défaut</option>\r\n        <option value=\"asc\">Date croissante</option>\r\n        <option value=\"desc\">Date décroissante</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ======== App ==========\r\nexport default function App() {\r\n  const [view, setView] = useState(\"login\");\r\n  const [user, setUser] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filters, setFilters] = useState({});\r\n  const [editingTask, setEditingTask] = useState(null);\r\n\r\n  const filteredTasks = tasks\r\n    .filter((t) => !filters.status || t.status === filters.status)\r\n    .sort((a, b) => {\r\n      if (filters.sort === \"asc\") return new Date(a.dueDate) - new Date(b.dueDate);\r\n      if (filters.sort === \"desc\") return new Date(b.dueDate) - new Date(a.dueDate);\r\n      return 0;\r\n    });\r\n\r\n  const addTask = (task) => {\r\n    if (editingTask) {\r\n      setTasks(tasks.map((t) => (t.id === editingTask.id ? { ...task, id: t.id } : t)));\r\n      setEditingTask(null);\r\n    } else {\r\n      setTasks([...tasks, { ...task, id: Date.now() }]);\r\n    }\r\n  };\r\n\r\n  const deleteTask = (id) => setTasks(tasks.filter((t) => t.id !== id));\r\n\r\n  if (view === \"login\") {\r\n    return <Login onLogin={(token, name) => { setUser(name); setView(\"dashboard\"); }} />;\r\n  }\r\n\r\n  if (view === \"register\") {\r\n    return <Register onRegister={() => setView(\"login\")} />;\r\n  }\r\n\r\n  if (view === \"dashboard\") {\r\n    return (\r\n      <div style={{ padding: 20 }}>\r\n        <Navbar userName={user} onLogout={() => setView(\"login\")} />\r\n        <TaskFilter onFilterChange={setFilters} />\r\n        <TaskForm onSave={addTask} editingTask={editingTask} cancelEdit={() => setEditingTask(null)} />\r\n        <TaskList tasks={filteredTasks} onEdit={setEditingTask} onDelete={deleteTask} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"mappings":";;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IAC9B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACf,IAAI,IAAI,CAACR,KAAK,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,KAAK,KAAKA,KAAK,CAAC,EAAE;UAC7CG,OAAO,CAAC;YAAEI,KAAK,EAAE;UAA8B,CAAC,CAAC;QACnD,CAAC,MAAM;UACL,IAAI,CAACX,KAAK,CAACY,IAAI,CAAC;YAAET,IAAI;YAAEC,KAAK;YAAEC;UAAS,CAAC,CAAC;UAC1CE,OAAO,CAAC;YAAEM,OAAO,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}