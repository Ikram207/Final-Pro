{"ast":null,"code":"// const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\n\n// // Enregistrement utilisateur\n// export async function register(name, email, password) {\n//   const res = await fetch(`${API_URL}/users/register`, {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify({ name, email, password }),\n//   });\n//   return res.json();\n// }\n\n// // Connexion utilisateur\n// export async function login(email, password) {\n//   const res = await fetch(`${API_URL}/users/login`, {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify({ email, password }),\n//   });\n//   return res.json();\n// }\n\n// // Création d’une tâche\n// export async function createTask(token, taskData) {\n//   const res = await fetch(`${API_URL}/tasks`, {\n//     method: 'POST',\n//     headers: { \n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(taskData),\n//   });\n//   return res.json();\n// }\n\n// // Récupérer la liste des tâches\n// export async function getTasks(token) {\n//   const res = await fetch(`${API_URL}/tasks`, {\n//     headers: { Authorization: `Bearer ${token}` },\n//   });\n//   return res.json();\n// }\n\n// // Modifier une tâche\n// export async function updateTask(token, id, updatedData) {\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\n//     method: 'PUT',\n//     headers: { \n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(updatedData),\n//   });\n//   return res.json();\n// }\n\n// // Supprimer une tâche\n// export async function deleteTask(token, id) {\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\n//     method: 'DELETE',\n//     headers: { Authorization: `Bearer ${token}` },\n//   });\n//   return res.json();\n// }\n// const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\n\n// // ----------- Utilisateurs -----------\n\n// // Enregistrement utilisateur\n// export async function register(name, email, password) {\n//   const res = await fetch(`${API_URL}/users/register`, {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify({ name, email, password }),\n//   });\n//   return res.json();\n// }\n\n// // Connexion utilisateur\n// export async function login(email, password) {\n//   const res = await fetch(`${API_URL}/users/login`, {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify({ email, password }),\n//   });\n//   return res.json();\n// }\n\n// // ----------- Tâches -----------\n\n// // Création d’une tâche\n// export async function createTask(token, taskData) {\n//   const res = await fetch(`${API_URL}/tasks`, {\n//     method: 'POST',\n//     headers: { \n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(taskData),\n//   });\n//   return res.json();\n// }\n\n// // Récupérer la liste des tâches\n// export async function getTasks(token) {\n//   const res = await fetch(`${API_URL}/tasks`, {\n//     headers: { Authorization: `Bearer ${token}` },\n//   });\n//   return res.json();\n// }\n\n// // Modifier une tâche\n// export async function updateTask(token, id, updatedData) {\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\n//     method: 'PUT',\n//     headers: { \n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(updatedData),\n//   });\n//   return res.json();\n// }\n\n// // Supprimer une tâche\n// export async function deleteTask(token, id) {\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\n//     method: 'DELETE',\n//     headers: { Authorization: `Bearer ${token}` },\n//   });\n//   return res.json();\n// }\n\n// // ----------- Idées -----------\n\n// // Créer une idée\n// export async function createIdea(token, ideaData) {\n//   const res = await fetch(`${API_URL}/ideas`, {\n//     method: 'POST',\n//     headers: { \n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(ideaData),\n//   });\n//   return res.json();\n// }\n\n// // Récupérer toutes les idées\n// export async function getIdeas(token) {\n//   const res = await fetch(`${API_URL}/ideas`, {\n//     headers: { Authorization: `Bearer ${token}` },\n//   });\n//   return res.json();\n// }\n\n// // Modifier une idée\n// export async function updateIdea(token, id, updatedData) {\n//   const res = await fetch(`${API_URL}/ideas/${id}`, {\n//     method: 'PUT',\n//     headers: { \n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`,\n//     },\n//     body: JSON.stringify(updatedData),\n//   });\n//   return res.json();\n// }\n\n// // Supprimer une idée\n// export async function deleteIdea(token, id) {\n//   const res = await fetch(`${API_URL}/ideas/${id}`, {\n//     method: 'DELETE',\n//     headers: { Authorization: `Bearer ${token}` },\n//   });\n//   return res.json();\n// }\n// services/api.js\n\n// services/api.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:4000/api'; // adapte le port si besoin\n\nexport function login(credentials) {\n  return axios.post(`${API_URL}/login`, credentials).then(res => res.data.token);\n}\nexport function register(data) {\n  return axios.post(`${API_URL}/register`, data).then(res => res.data);\n}\nexport function getTasks(token) {\n  return axios.get(`${API_URL}/tasks`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}\nexport function createTask(token, task) {\n  return axios.post(`${API_URL}/tasks`, task, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}\nexport function updateTask(token, id, task) {\n  return axios.put(`${API_URL}/tasks/${id}`, task, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}\nexport function deleteTask(token, id) {\n  return axios.delete(`${API_URL}/tasks/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}\nexport function getIdeas(token) {\n  return axios.get(`${API_URL}/ideas`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}\nexport function createIdea(token, idea) {\n  return axios.post(`${API_URL}/ideas`, idea, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}\nexport function updateIdea(token, id, idea) {\n  return axios.put(`${API_URL}/ideas/${id}`, idea, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}\nexport function deleteIdea(token, id) {\n  return axios.delete(`${API_URL}/ideas/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n}","map":{"version":3,"names":["axios","API_URL","login","credentials","post","then","res","data","token","register","getTasks","get","headers","Authorization","createTask","task","updateTask","id","put","deleteTask","delete","getIdeas","createIdea","idea","updateIdea","deleteIdea"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/services/api.js"],"sourcesContent":["// const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\r\n\r\n// // Enregistrement utilisateur\r\n// export async function register(name, email, password) {\r\n//   const res = await fetch(`${API_URL}/users/register`, {\r\n//     method: 'POST',\r\n//     headers: { 'Content-Type': 'application/json' },\r\n//     body: JSON.stringify({ name, email, password }),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Connexion utilisateur\r\n// export async function login(email, password) {\r\n//   const res = await fetch(`${API_URL}/users/login`, {\r\n//     method: 'POST',\r\n//     headers: { 'Content-Type': 'application/json' },\r\n//     body: JSON.stringify({ email, password }),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Création d’une tâche\r\n// export async function createTask(token, taskData) {\r\n//   const res = await fetch(`${API_URL}/tasks`, {\r\n//     method: 'POST',\r\n//     headers: { \r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(taskData),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Récupérer la liste des tâches\r\n// export async function getTasks(token) {\r\n//   const res = await fetch(`${API_URL}/tasks`, {\r\n//     headers: { Authorization: `Bearer ${token}` },\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Modifier une tâche\r\n// export async function updateTask(token, id, updatedData) {\r\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n//     method: 'PUT',\r\n//     headers: { \r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(updatedData),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Supprimer une tâche\r\n// export async function deleteTask(token, id) {\r\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n//     method: 'DELETE',\r\n//     headers: { Authorization: `Bearer ${token}` },\r\n//   });\r\n//   return res.json();\r\n// }\r\n// const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\r\n\r\n// // ----------- Utilisateurs -----------\r\n\r\n// // Enregistrement utilisateur\r\n// export async function register(name, email, password) {\r\n//   const res = await fetch(`${API_URL}/users/register`, {\r\n//     method: 'POST',\r\n//     headers: { 'Content-Type': 'application/json' },\r\n//     body: JSON.stringify({ name, email, password }),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Connexion utilisateur\r\n// export async function login(email, password) {\r\n//   const res = await fetch(`${API_URL}/users/login`, {\r\n//     method: 'POST',\r\n//     headers: { 'Content-Type': 'application/json' },\r\n//     body: JSON.stringify({ email, password }),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // ----------- Tâches -----------\r\n\r\n// // Création d’une tâche\r\n// export async function createTask(token, taskData) {\r\n//   const res = await fetch(`${API_URL}/tasks`, {\r\n//     method: 'POST',\r\n//     headers: { \r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(taskData),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Récupérer la liste des tâches\r\n// export async function getTasks(token) {\r\n//   const res = await fetch(`${API_URL}/tasks`, {\r\n//     headers: { Authorization: `Bearer ${token}` },\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Modifier une tâche\r\n// export async function updateTask(token, id, updatedData) {\r\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n//     method: 'PUT',\r\n//     headers: { \r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(updatedData),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Supprimer une tâche\r\n// export async function deleteTask(token, id) {\r\n//   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n//     method: 'DELETE',\r\n//     headers: { Authorization: `Bearer ${token}` },\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // ----------- Idées -----------\r\n\r\n// // Créer une idée\r\n// export async function createIdea(token, ideaData) {\r\n//   const res = await fetch(`${API_URL}/ideas`, {\r\n//     method: 'POST',\r\n//     headers: { \r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(ideaData),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Récupérer toutes les idées\r\n// export async function getIdeas(token) {\r\n//   const res = await fetch(`${API_URL}/ideas`, {\r\n//     headers: { Authorization: `Bearer ${token}` },\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Modifier une idée\r\n// export async function updateIdea(token, id, updatedData) {\r\n//   const res = await fetch(`${API_URL}/ideas/${id}`, {\r\n//     method: 'PUT',\r\n//     headers: { \r\n//       'Content-Type': 'application/json',\r\n//       Authorization: `Bearer ${token}`,\r\n//     },\r\n//     body: JSON.stringify(updatedData),\r\n//   });\r\n//   return res.json();\r\n// }\r\n\r\n// // Supprimer une idée\r\n// export async function deleteIdea(token, id) {\r\n//   const res = await fetch(`${API_URL}/ideas/${id}`, {\r\n//     method: 'DELETE',\r\n//     headers: { Authorization: `Bearer ${token}` },\r\n//   });\r\n//   return res.json();\r\n// }\r\n// services/api.js\r\n\r\n// services/api.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:4000/api';  // adapte le port si besoin\r\n\r\nexport function login(credentials) {\r\n  return axios.post(`${API_URL}/login`, credentials).then(res => res.data.token);\r\n}\r\n\r\nexport function register(data) {\r\n  return axios.post(`${API_URL}/register`, data).then(res => res.data);\r\n}\r\n\r\nexport function getTasks(token) {\r\n  return axios.get(`${API_URL}/tasks`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n\r\nexport function createTask(token, task) {\r\n  return axios.post(`${API_URL}/tasks`, task, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n\r\nexport function updateTask(token, id, task) {\r\n  return axios.put(`${API_URL}/tasks/${id}`, task, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n\r\nexport function deleteTask(token, id) {\r\n  return axios.delete(`${API_URL}/tasks/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n\r\nexport function getIdeas(token) {\r\n  return axios.get(`${API_URL}/ideas`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n\r\nexport function createIdea(token, idea) {\r\n  return axios.post(`${API_URL}/ideas`, idea, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n\r\nexport function updateIdea(token, id, idea) {\r\n  return axios.put(`${API_URL}/ideas/${id}`, idea, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n\r\nexport function deleteIdea(token, id) {\r\n  return axios.delete(`${API_URL}/ideas/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  }).then(res => res.data);\r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAE;;AAE9C,OAAO,SAASC,KAAKA,CAACC,WAAW,EAAE;EACjC,OAAOH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,QAAQ,EAAEE,WAAW,CAAC,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;AAChF;AAEA,OAAO,SAASC,QAAQA,CAACF,IAAI,EAAE;EAC7B,OAAOP,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,WAAW,EAAEM,IAAI,CAAC,CAACF,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AACtE;AAEA,OAAO,SAASG,QAAQA,CAACF,KAAK,EAAE;EAC9B,OAAOR,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,QAAQ,EAAE;IACnCW,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B;AAEA,OAAO,SAASO,UAAUA,CAACN,KAAK,EAAEO,IAAI,EAAE;EACtC,OAAOf,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,QAAQ,EAAEc,IAAI,EAAE;IAC1CH,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B;AAEA,OAAO,SAASS,UAAUA,CAACR,KAAK,EAAES,EAAE,EAAEF,IAAI,EAAE;EAC1C,OAAOf,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,UAAUgB,EAAE,EAAE,EAAEF,IAAI,EAAE;IAC/CH,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B;AAEA,OAAO,SAASY,UAAUA,CAACX,KAAK,EAAES,EAAE,EAAE;EACpC,OAAOjB,KAAK,CAACoB,MAAM,CAAC,GAAGnB,OAAO,UAAUgB,EAAE,EAAE,EAAE;IAC5CL,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B;AAEA,OAAO,SAASc,QAAQA,CAACb,KAAK,EAAE;EAC9B,OAAOR,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,QAAQ,EAAE;IACnCW,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B;AAEA,OAAO,SAASe,UAAUA,CAACd,KAAK,EAAEe,IAAI,EAAE;EACtC,OAAOvB,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,QAAQ,EAAEsB,IAAI,EAAE;IAC1CX,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B;AAEA,OAAO,SAASiB,UAAUA,CAAChB,KAAK,EAAES,EAAE,EAAEM,IAAI,EAAE;EAC1C,OAAOvB,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,UAAUgB,EAAE,EAAE,EAAEM,IAAI,EAAE;IAC/CX,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B;AAEA,OAAO,SAASkB,UAAUA,CAACjB,KAAK,EAAES,EAAE,EAAE;EACpC,OAAOjB,KAAK,CAACoB,MAAM,CAAC,GAAGnB,OAAO,UAAUgB,EAAE,EAAE,EAAE;IAC5CL,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,KAAK;IAAG;EAC9C,CAAC,CAAC,CAACH,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}