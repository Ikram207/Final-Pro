{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask, getIdeas } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       console.log('Tâche créée reçue:', created);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login');\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null);\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       console.log('Tâche créée reçue:', created);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\n\n// Simuler l'API (à remplacer par appels réels)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeApi = {\n  tasks: [{\n    id: 1,\n    title: 'Tâche 1',\n    status: 'pending',\n    dueDate: '2025-08-21',\n    description: 'Desc 1'\n  }, {\n    id: 2,\n    title: 'Tâche 2',\n    status: 'done',\n    dueDate: '2025-09-01',\n    description: 'Desc 2'\n  }],\n  createTask(task) {\n    return new Promise(resolve => {\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      this.tasks.push(newTask);\n      setTimeout(() => resolve(newTask), 500);\n    });\n  },\n  updateTask(id, updated) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.map(t => t.id === id ? {\n        ...t,\n        ...updated\n      } : t);\n      setTimeout(() => resolve(this.tasks.find(t => t.id === id)), 500);\n    });\n  },\n  deleteTask(id) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.filter(t => t.id !== id);\n      setTimeout(() => resolve({\n        success: true\n      }), 500);\n    });\n  },\n  getTasks() {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(this.tasks), 500);\n    });\n  }\n};\nfunction TaskForm({\n  onSave,\n  editingTask,\n  cancelEdit\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [status, setStatus] = useState('pending');\n  const [dueDate, setDueDate] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title || '');\n      setStatus(editingTask.status || 'pending');\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : '');\n      setDescription(editingTask.description || '');\n    } else {\n      setTitle('');\n      setStatus('pending');\n      setDueDate('');\n      setDescription('');\n    }\n  }, [editingTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert('Le titre est obligatoire');\n      return;\n    }\n    if (!status) {\n      alert('Le statut est obligatoire');\n      return;\n    }\n    onSave({\n      title,\n      status,\n      dueDate,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: 20,\n      border: '1px solid #ccc',\n      padding: 15,\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editingTask ? 'Modifier une tâche' : 'Ajouter une tâche'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Titre :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        style: {\n          width: '100%',\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Statut :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        required: true,\n        style: {\n          width: '100%',\n          padding: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"En attente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Termin\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date limite :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        style: {\n          width: '100%',\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        style: {\n          width: '100%',\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        padding: '5px 10px'\n      },\n      children: editingTask ? 'Mettre à jour' : 'Enregistrer'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: cancelEdit,\n      style: {\n        padding: '5px 10px',\n        marginLeft: 10,\n        background: '#ccc'\n      },\n      children: \"Annuler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"BhSItGvbqA2WGTX+S0pt5sJ02n4=\");\n_c = TaskForm;\nexport default function App() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n\n  // Chargement initial des tâches\n  useEffect(() => {\n    fakeApi.getTasks().then(setTasks);\n  }, []);\n\n  // Sauvegarder (ajout ou modif)\n  const handleSave = taskData => {\n    if (editingTask) {\n      // Mise à jour\n      fakeApi.updateTask(editingTask.id, taskData).then(updated => {\n        setTasks(tasks.map(t => t.id === updated.id ? updated : t));\n        setEditingTask(null);\n      });\n    } else {\n      // Ajout\n      fakeApi.createTask(taskData).then(newTask => {\n        setTasks([...tasks, newTask]);\n      });\n    }\n  };\n\n  // Suppression\n  const handleDelete = id => {\n    if (window.confirm('Confirmer la suppression ?')) {\n      fakeApi.deleteTask(id).then(() => {\n        setTasks(tasks.filter(t => t.id !== id));\n      });\n    }\n  };\n\n  // Passer en mode édition\n  const handleEdit = task => {\n    setEditingTask(task);\n  };\n\n  // Annuler édition\n  const cancelEdit = () => {\n    setEditingTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: 'auto',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: handleSave,\n      editingTask: editingTask,\n      cancelEdit: cancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              borderBottom: '1px solid #000'\n            },\n            children: \"Titre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              borderBottom: '1px solid #000'\n            },\n            children: \"Statut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              borderBottom: '1px solid #000'\n            },\n            children: \"Date limite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              borderBottom: '1px solid #000'\n            },\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title || 'Titre manquant'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status || 'Statut manquant'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.dueDate ? task.dueDate.substring(0, 10) : 'Date manquante'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(task),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              style: {\n                marginLeft: 5\n              },\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            style: {\n              textAlign: 'center'\n            },\n            children: \"Aucune t\\xE2che disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"nwiSLkn6Y0JvLhs83lscW/YeAV0=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fakeApi","tasks","id","title","status","dueDate","description","createTask","task","Promise","resolve","newTask","Date","now","push","setTimeout","updateTask","updated","map","t","find","deleteTask","filter","success","getTasks","TaskForm","onSave","editingTask","cancelEdit","_s","setTitle","setStatus","setDueDate","setDescription","substring","handleSubmit","e","preventDefault","trim","alert","onSubmit","style","marginBottom","border","padding","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","required","width","type","onClick","marginLeft","background","_c","App","_s2","setTasks","setEditingTask","then","handleSave","taskData","handleDelete","window","confirm","handleEdit","maxWidth","margin","borderCollapse","borderBottom","length","colSpan","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask, getIdeas } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       console.log('Tâche créée reçue:', created);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login');\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       console.log('Tâche créée reçue:', created);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// Simuler l'API (à remplacer par appels réels)\r\nconst fakeApi = {\r\n  tasks: [\r\n    { id: 1, title: 'Tâche 1', status: 'pending', dueDate: '2025-08-21', description: 'Desc 1' },\r\n    { id: 2, title: 'Tâche 2', status: 'done', dueDate: '2025-09-01', description: 'Desc 2' },\r\n  ],\r\n  createTask(task) {\r\n    return new Promise(resolve => {\r\n      const newTask = { ...task, id: Date.now() };\r\n      this.tasks.push(newTask);\r\n      setTimeout(() => resolve(newTask), 500);\r\n    });\r\n  },\r\n  updateTask(id, updated) {\r\n    return new Promise(resolve => {\r\n      this.tasks = this.tasks.map(t => (t.id === id ? { ...t, ...updated } : t));\r\n      setTimeout(() => resolve(this.tasks.find(t => t.id === id)), 500);\r\n    });\r\n  },\r\n  deleteTask(id) {\r\n    return new Promise(resolve => {\r\n      this.tasks = this.tasks.filter(t => t.id !== id);\r\n      setTimeout(() => resolve({ success: true }), 500);\r\n    });\r\n  },\r\n  getTasks() {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => resolve(this.tasks), 500);\r\n    });\r\n  }\r\n};\r\n\r\nfunction TaskForm({ onSave, editingTask, cancelEdit }) {\r\n  const [title, setTitle] = useState('');\r\n  const [status, setStatus] = useState('pending');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (editingTask) {\r\n      setTitle(editingTask.title || '');\r\n      setStatus(editingTask.status || 'pending');\r\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : '');\r\n      setDescription(editingTask.description || '');\r\n    } else {\r\n      setTitle('');\r\n      setStatus('pending');\r\n      setDueDate('');\r\n      setDescription('');\r\n    }\r\n  }, [editingTask]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) {\r\n      alert('Le titre est obligatoire');\r\n      return;\r\n    }\r\n    if (!status) {\r\n      alert('Le statut est obligatoire');\r\n      return;\r\n    }\r\n    onSave({ title, status, dueDate, description });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: 20, border: '1px solid #ccc', padding: 15, borderRadius: 6 }}>\r\n      <h3>{editingTask ? 'Modifier une tâche' : 'Ajouter une tâche'}</h3>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Titre :</label><br />\r\n        <input value={title} onChange={e => setTitle(e.target.value)} required style={{ width: '100%', padding: 5 }} />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Statut :</label><br />\r\n        <select value={status} onChange={e => setStatus(e.target.value)} required style={{ width: '100%', padding: 5 }}>\r\n          <option value=\"pending\">En attente</option>\r\n          <option value=\"in-progress\">En cours</option>\r\n          <option value=\"done\">Terminé</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Date limite :</label><br />\r\n        <input type=\"date\" value={dueDate} onChange={e => setDueDate(e.target.value)} style={{ width: '100%', padding: 5 }} />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Description :</label><br />\r\n        <textarea value={description} onChange={e => setDescription(e.target.value)} style={{ width: '100%', padding: 5 }} />\r\n      </div>\r\n\r\n      <button type=\"submit\" style={{ padding: '5px 10px' }}>{editingTask ? 'Mettre à jour' : 'Enregistrer'}</button>\r\n\r\n      {editingTask && (\r\n        <button type=\"button\" onClick={cancelEdit} style={{ padding: '5px 10px', marginLeft: 10, background: '#ccc' }}>Annuler</button>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n\r\n  // Chargement initial des tâches\r\n  useEffect(() => {\r\n    fakeApi.getTasks().then(setTasks);\r\n  }, []);\r\n\r\n  // Sauvegarder (ajout ou modif)\r\n  const handleSave = (taskData) => {\r\n    if (editingTask) {\r\n      // Mise à jour\r\n      fakeApi.updateTask(editingTask.id, taskData).then(updated => {\r\n        setTasks(tasks.map(t => (t.id === updated.id ? updated : t)));\r\n        setEditingTask(null);\r\n      });\r\n    } else {\r\n      // Ajout\r\n      fakeApi.createTask(taskData).then(newTask => {\r\n        setTasks([...tasks, newTask]);\r\n      });\r\n    }\r\n  };\r\n\r\n  // Suppression\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Confirmer la suppression ?')) {\r\n      fakeApi.deleteTask(id).then(() => {\r\n        setTasks(tasks.filter(t => t.id !== id));\r\n      });\r\n    }\r\n  };\r\n\r\n  // Passer en mode édition\r\n  const handleEdit = (task) => {\r\n    setEditingTask(task);\r\n  };\r\n\r\n  // Annuler édition\r\n  const cancelEdit = () => {\r\n    setEditingTask(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 700, margin: 'auto', padding: 20 }}>\r\n      <TaskForm onSave={handleSave} editingTask={editingTask} cancelEdit={cancelEdit} />\r\n\r\n      <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ borderBottom: '1px solid #000' }}>Titre</th>\r\n            <th style={{ borderBottom: '1px solid #000' }}>Statut</th>\r\n            <th style={{ borderBottom: '1px solid #000' }}>Date limite</th>\r\n            <th style={{ borderBottom: '1px solid #000' }}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.length > 0 ? (\r\n            tasks.map(task => (\r\n              <tr key={task.id}>\r\n                <td>{task.title || 'Titre manquant'}</td>\r\n                <td>{task.status || 'Statut manquant'}</td>\r\n                <td>{task.dueDate ? task.dueDate.substring(0, 10) : 'Date manquante'}</td>\r\n                <td>\r\n                  <button onClick={() => handleEdit(task)}>✏️</button>\r\n                  <button onClick={() => handleDelete(task.id)} style={{ marginLeft: 5 }}>🗑️</button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr><td colSpan=\"4\" style={{ textAlign: 'center' }}>Aucune tâche disponible</td></tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}