{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport IdeaForm from './components/IdeaForm';\nimport IdeaTable from './components/IdeaTable';\nimport api from './services/api'; // Assure-toi que api est bien configuré\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [view, setView] = useState('tasks');\n  const [tasks, setTasks] = useState([]);\n  const [ideas, setIdeas] = useState([]);\n\n  // Charger les tâches et idées dès que token ou view changent\n  useEffect(() => {\n    if (!token) return;\n    if (view === 'tasks') {\n      api.get('/tasks', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => setTasks(res.data)).catch(console.error);\n    } else if (view === 'ideas') {\n      api.get('/ideas', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => setIdeas(res.data)).catch(console.error);\n    }\n  }, [token, view]);\n  function handleLogin(newToken) {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n    setView('tasks'); // Afficher la plateforme après login\n  }\n  function handleLogout() {\n    localStorage.removeItem('token');\n    setToken('');\n    setTasks([]);\n    setIdeas([]);\n  }\n\n  // Si pas connecté → affiche Login sans bouton registre\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      showRegister: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si connecté → affiche plateforme\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      setView: setView,\n      token: token,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), view === 'tasks' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n        token: token,\n        onSave: newTask => setTasks([...tasks, newTask])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        token: token,\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), view === 'ideas' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IdeaForm, {\n        token: token,\n        onSave: newIdea => setIdeas([...ideas, newIdea])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IdeaTable, {\n        ideas: ideas,\n        setIdeas: setIdeas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KmpGqnEWxigiqj1JcAwlKqKidz0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Login","TaskForm","TaskList","IdeaForm","IdeaTable","api","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","localStorage","getItem","view","setView","tasks","setTasks","ideas","setIdeas","get","headers","Authorization","then","res","data","catch","console","error","handleLogin","newToken","setItem","handleLogout","removeItem","onLogin","showRegister","fileName","_jsxFileName","lineNumber","columnNumber","children","onSave","newTask","newIdea","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Login from './components/Login';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\nimport IdeaForm from './components/IdeaForm';\r\nimport IdeaTable from './components/IdeaTable';\r\nimport api from './services/api'; // Assure-toi que api est bien configuré\r\n\r\nexport default function App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n  const [view, setView] = useState('tasks');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [ideas, setIdeas] = useState([]);\r\n\r\n  // Charger les tâches et idées dès que token ou view changent\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    if (view === 'tasks') {\r\n      api.get('/tasks', { headers: { Authorization: `Bearer ${token}` } })\r\n        .then(res => setTasks(res.data))\r\n        .catch(console.error);\r\n    } else if (view === 'ideas') {\r\n      api.get('/ideas', { headers: { Authorization: `Bearer ${token}` } })\r\n        .then(res => setIdeas(res.data))\r\n        .catch(console.error);\r\n    }\r\n  }, [token, view]);\r\n\r\n  function handleLogin(newToken) {\r\n    localStorage.setItem('token', newToken);\r\n    setToken(newToken);\r\n    setView('tasks'); // Afficher la plateforme après login\r\n  }\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem('token');\r\n    setToken('');\r\n    setTasks([]);\r\n    setIdeas([]);\r\n  }\r\n\r\n  // Si pas connecté → affiche Login sans bouton registre\r\n  if (!token) {\r\n    return <Login onLogin={handleLogin} showRegister={false} />;\r\n  }\r\n\r\n  // Si connecté → affiche plateforme\r\n  return (\r\n    <div>\r\n      <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n      {view === 'tasks' && (\r\n        <>\r\n          <TaskForm token={token} onSave={newTask => setTasks([...tasks, newTask])} />\r\n          <TaskList token={token} tasks={tasks} setTasks={setTasks} />\r\n        </>\r\n      )}\r\n\r\n      {view === 'ideas' && (\r\n        <>\r\n          <IdeaForm token={token} onSave={newIdea => setIdeas([...ideas, newIdea])} />\r\n          <IdeaTable ideas={ideas} setIdeas={setIdeas} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}