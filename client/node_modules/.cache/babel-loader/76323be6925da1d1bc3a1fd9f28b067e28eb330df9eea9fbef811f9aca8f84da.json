{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\components\\\\TaskFilter.jsx\";\n// import React, { useState } from 'react';\n\n// export default function TaskFilter({ onFilterChange }) {\n//   // états locaux pour filtre statut, recherche texte, et tri\n//   const [statusFilter, setStatusFilter] = useState('');\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [sortField, setSortField] = useState('');\n//   const [sortOrder, setSortOrder] = useState('asc');\n\n//   // Appelé à chaque changement de filtre ou tri\n//   const handleChange = () => {\n//     onFilterChange({\n//       status: statusFilter,\n//       search: searchTerm,\n//       sortField,\n//       sortOrder,\n//     });\n//   };\n\n//   // Effets pour déclencher handleChange quand un état change\n//   React.useEffect(() => {\n//     handleChange();\n//   }, [statusFilter, searchTerm, sortField, sortOrder]);\n\n//   return (\n//     <div style={{ marginBottom: 20, display: 'flex', gap: 10, flexWrap: 'wrap', alignItems: 'center' }}>\n//       {/* Filtre par statut */}\n//       <select\n//         value={statusFilter}\n//         onChange={e => setStatusFilter(e.target.value)}\n//         style={{ padding: '6px' }}\n//       >\n//         <option value=\"\">Tous les statuts</option>\n//         <option value=\"pending\">En attente</option>\n//         <option value=\"in-progress\">En cours</option>\n//         <option value=\"done\">Terminé</option>\n//       </select>\n\n//       {/* Recherche par texte */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Rechercher...\"\n//         value={searchTerm}\n//         onChange={e => setSearchTerm(e.target.value)}\n//         style={{ padding: '6px', flexGrow: 1, minWidth: 150 }}\n//       />\n\n//       {/* Tri - champ */}\n//       <select\n//         value={sortField}\n//         onChange={e => setSortField(e.target.value)}\n//         style={{ padding: '6px' }}\n//       >\n//         <option value=\"\">Trier par</option>\n//         <option value=\"title\">Titre</option>\n//         <option value=\"dueDate\">Date limite</option>\n//         <option value=\"status\">Statut</option>\n//       </select>\n\n//       {/* Tri - ordre */}\n//       <select\n//         value={sortOrder}\n//         onChange={e => setSortOrder(e.target.value)}\n//         style={{ padding: '6px' }}\n//         disabled={!sortField}\n//       >\n//         <option value=\"asc\">Ascendant</option>\n//         <option value=\"desc\">Descendant</option>\n//       </select>\n//     </div>\n//   );\n// }\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskFilter({\n  filters,\n  setFilters\n}) {\n  const handleChange = e => {\n    setFilters({\n      ...filters,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Filtrer par statut :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: filters.status,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Tous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"En attente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Termin\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: \"20px\"\n      },\n      children: [\"Trier par :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"sort\",\n        value: filters.sort,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Aucun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"Date croissante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"Date d\\xE9croissante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskFilter;\nvar _c;\n$RefreshReg$(_c, \"TaskFilter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskFilter","filters","setFilters","handleChange","e","target","name","value","style","marginBottom","children","status","onChange","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","sort","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/components/TaskFilter.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// export default function TaskFilter({ onFilterChange }) {\r\n//   // états locaux pour filtre statut, recherche texte, et tri\r\n//   const [statusFilter, setStatusFilter] = useState('');\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [sortField, setSortField] = useState('');\r\n//   const [sortOrder, setSortOrder] = useState('asc');\r\n\r\n//   // Appelé à chaque changement de filtre ou tri\r\n//   const handleChange = () => {\r\n//     onFilterChange({\r\n//       status: statusFilter,\r\n//       search: searchTerm,\r\n//       sortField,\r\n//       sortOrder,\r\n//     });\r\n//   };\r\n\r\n//   // Effets pour déclencher handleChange quand un état change\r\n//   React.useEffect(() => {\r\n//     handleChange();\r\n//   }, [statusFilter, searchTerm, sortField, sortOrder]);\r\n\r\n//   return (\r\n//     <div style={{ marginBottom: 20, display: 'flex', gap: 10, flexWrap: 'wrap', alignItems: 'center' }}>\r\n//       {/* Filtre par statut */}\r\n//       <select\r\n//         value={statusFilter}\r\n//         onChange={e => setStatusFilter(e.target.value)}\r\n//         style={{ padding: '6px' }}\r\n//       >\r\n//         <option value=\"\">Tous les statuts</option>\r\n//         <option value=\"pending\">En attente</option>\r\n//         <option value=\"in-progress\">En cours</option>\r\n//         <option value=\"done\">Terminé</option>\r\n//       </select>\r\n\r\n//       {/* Recherche par texte */}\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Rechercher...\"\r\n//         value={searchTerm}\r\n//         onChange={e => setSearchTerm(e.target.value)}\r\n//         style={{ padding: '6px', flexGrow: 1, minWidth: 150 }}\r\n//       />\r\n\r\n//       {/* Tri - champ */}\r\n//       <select\r\n//         value={sortField}\r\n//         onChange={e => setSortField(e.target.value)}\r\n//         style={{ padding: '6px' }}\r\n//       >\r\n//         <option value=\"\">Trier par</option>\r\n//         <option value=\"title\">Titre</option>\r\n//         <option value=\"dueDate\">Date limite</option>\r\n//         <option value=\"status\">Statut</option>\r\n//       </select>\r\n\r\n//       {/* Tri - ordre */}\r\n//       <select\r\n//         value={sortOrder}\r\n//         onChange={e => setSortOrder(e.target.value)}\r\n//         style={{ padding: '6px' }}\r\n//         disabled={!sortField}\r\n//       >\r\n//         <option value=\"asc\">Ascendant</option>\r\n//         <option value=\"desc\">Descendant</option>\r\n//       </select>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React from \"react\";\r\n\r\nexport default function TaskFilter({ filters, setFilters }) {\r\n  const handleChange = (e) => {\r\n    setFilters({\r\n      ...filters,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"20px\" }}>\r\n      <label>\r\n        Filtrer par statut :\r\n        <select name=\"status\" value={filters.status} onChange={handleChange}>\r\n          <option value=\"\">Tous</option>\r\n          <option value=\"pending\">En attente</option>\r\n          <option value=\"in progress\">En cours</option>\r\n          <option value=\"done\">Terminé</option>\r\n        </select>\r\n      </label>\r\n      <label style={{ marginLeft: \"20px\" }}>\r\n        Trier par :\r\n        <select name=\"sort\" value={filters.sort} onChange={handleChange}>\r\n          <option value=\"\">Aucun</option>\r\n          <option value=\"asc\">Date croissante</option>\r\n          <option value=\"desc\">Date décroissante</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}