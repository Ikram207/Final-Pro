{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Bureau\\\\Gomaycode project\\\\final project\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask, getIdeas } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       console.log('Tâche créée reçue:', created);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from 'react';\n// import Navbar from './components/Navbar';\n// import Login from './components/Login';\n// import Register from './components/Register';\n// import TaskForm from './components/TaskForm';\n// import TaskList from './components/TaskList';\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\n\n// export default function App() {\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\n//   const [view, setView] = useState(token ? 'tasks' : 'login');\n//   const [tasks, setTasks] = useState([]);\n//   const [editingTask, setEditingTask] = useState(null);\n//   const [message, setMessage] = useState(null);\n\n//   useEffect(() => {\n//     if (message) {\n//       const timer = setTimeout(() => setMessage(null), 4000);\n//       return () => clearTimeout(timer);\n//     }\n//   }, [message]);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     if (view === 'tasks') {\n//       getTasks(token).then(data => {\n//         setTasks(Array.isArray(data) ? data : []);\n//       });\n//     }\n//   }, [view, token]);\n\n//   const handleLogin = async (jwt) => {\n//     localStorage.setItem('token', jwt);\n//     setToken(jwt);\n//     setView('tasks');\n//     const fetchedTasks = await getTasks(jwt);\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     setToken('');\n//     setTasks([]);\n//     setEditingTask(null);\n//     setView('login');\n//   };\n\n//   const handleSaveTask = async (taskData) => {\n//     if (editingTask) {\n//       const updated = await updateTask(token, editingTask._id, taskData);\n//       if (!updated.error) {\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\n//       }\n//     } else {\n//       const created = await createTask(token, taskData);\n//       console.log('Tâche créée reçue:', created);\n//       if (!created.error) {\n//         setTasks([...tasks, created]);\n//         setEditingTask(null);\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\n//       } else {\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\n//       }\n//     }\n//   };\n\n//   const handleDeleteTask = async (taskId) => {\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\n\n//     const deleted = await deleteTask(token, taskId);\n//     if (!deleted.error) {\n//       setTasks(tasks.filter(t => t._id !== taskId));\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\n//     } else {\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\n\n//       {message && (\n//         <div style={{\n//           marginBottom: 10,\n//           padding: 10,\n//           color: message.type === 'error' ? 'red' : 'green',\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\n//           borderRadius: 5,\n//         }}>\n//           {message.text}\n//         </div>\n//       )}\n\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\n\n//       {token && view === 'tasks' && (\n//         <>\n//           <TaskForm\n//             token={token}\n//             onSave={handleSaveTask}\n//             editingTask={editingTask}\n//             cancelEdit={() => setEditingTask(null)}\n//           />\n//           <TaskList\n//             token={token}\n//             tasks={tasks}\n//             setTasks={setTasks}\n//             onEdit={setEditingTask}\n//             onDelete={handleDeleteTask}\n//           />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n// App.js\nimport React, { useState, useEffect } from \"react\";\n\n// Fake API pour la démo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeApi = {\n  tasks: [{\n    id: 1,\n    title: \"Tâche 1\",\n    status: \"pending\",\n    dueDate: \"2025-08-21\",\n    description: \"Description de la tâche 1\"\n  }, {\n    id: 2,\n    title: \"Tâche 2\",\n    status: \"done\",\n    dueDate: \"2025-09-01\",\n    description: \"Description de la tâche 2\"\n  }],\n  createTask(task) {\n    return new Promise(resolve => {\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      this.tasks.push(newTask);\n      setTimeout(() => resolve(newTask), 500);\n    });\n  },\n  updateTask(id, updated) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.map(t => t.id === id ? {\n        ...t,\n        ...updated\n      } : t);\n      setTimeout(() => resolve(this.tasks.find(t => t.id === id)), 500);\n    });\n  },\n  deleteTask(id) {\n    return new Promise(resolve => {\n      this.tasks = this.tasks.filter(t => t.id !== id);\n      setTimeout(() => resolve({\n        success: true\n      }), 500);\n    });\n  },\n  getTasks() {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(this.tasks), 500);\n    });\n  }\n};\nconst statusColors = {\n  pending: \"#f0ad4e\",\n  // orange\n  \"in-progress\": \"#0275d8\",\n  // bleu\n  done: \"#5cb85c\" // vert\n};\n\n// Navbar avec bouton déconnexion\nfunction Navbar({\n  onLogout\n}) {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    style: {\n      backgroundColor: \"#007BFF\",\n      padding: \"10px 20px\",\n      color: \"#fff\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      fontWeight: \"bold\",\n      fontSize: \"1.2rem\",\n      marginBottom: 20,\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Mon App T\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\n          onLogout();\n        }\n      },\n      style: {\n        backgroundColor: \"#dc3545\",\n        color: \"white\",\n        border: \"none\",\n        padding: \"6px 12px\",\n        borderRadius: 4,\n        cursor: \"pointer\"\n      },\n      children: \"D\\xE9connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n}\n\n// Formulaire de tâche\n_c = Navbar;\nfunction TaskForm({\n  onSave,\n  editingTask,\n  cancelEdit\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    if (editingTask) {\n      setTitle(editingTask.title || \"\");\n      setStatus(editingTask.status || \"pending\");\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\n      setDescription(editingTask.description || \"\");\n    } else {\n      setTitle(\"\");\n      setStatus(\"pending\");\n      setDueDate(\"\");\n      setDescription(\"\");\n    }\n  }, [editingTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) {\n      alert(\"Le titre est obligatoire\");\n      return;\n    }\n    if (!status) {\n      alert(\"Le statut est obligatoire\");\n      return;\n    }\n    onSave({\n      title,\n      status,\n      dueDate,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: 20,\n      border: \"1px solid #ccc\",\n      padding: 15,\n      borderRadius: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Titre :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Statut :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"En attente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"En cours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"done\",\n          children: \"Termin\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date limite :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        padding: \"5px 10px\"\n      },\n      children: editingTask ? \"Mettre à jour\" : \"Enregistrer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: cancelEdit,\n      style: {\n        padding: \"5px 10px\",\n        marginLeft: 10,\n        background: \"#ccc\"\n      },\n      children: \"Annuler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this);\n}\n\n// Composant principal\n_s(TaskForm, \"wMPaLzBV1C+1Yc+RYgJrjY/LpNE=\");\n_c2 = TaskForm;\nexport default function App() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(true); // Pour simuler la connexion\n\n  useEffect(() => {\n    fakeApi.getTasks().then(setTasks);\n  }, []);\n  const handleSave = taskData => {\n    if (editingTask) {\n      fakeApi.updateTask(editingTask.id, taskData).then(updated => {\n        setTasks(tasks.map(t => t.id === updated.id ? updated : t));\n        setEditingTask(null);\n      });\n    } else {\n      fakeApi.createTask(taskData).then(newTask => {\n        setTasks([...tasks, newTask]);\n      });\n    }\n  };\n  const handleDelete = id => {\n    if (window.confirm(\"Confirmer la suppression ?\")) {\n      fakeApi.deleteTask(id).then(() => {\n        setTasks(tasks.filter(t => t.id !== id));\n      });\n    }\n  };\n  const handleEdit = task => {\n    setEditingTask(task);\n  };\n  const cancelEdit = () => {\n    setEditingTask(null);\n  };\n  const handleLogout = () => {\n    if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\n      setIsLoggedIn(false);\n      alert(\"Déconnecté !\");\n      // Ici tu peux aussi supprimer token, rediriger, etc.\n    }\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        padding: 50\n      },\n      children: \"Connectez-vous pour voir vos t\\xE2ches.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 900,\n      margin: \"auto\",\n      padding: 20,\n      fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: handleSave,\n      editingTask: editingTask,\n      cancelEdit: cancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        borderCollapse: \"collapse\",\n        boxShadow: \"0 0 10px rgba(0,0,0,0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: \"#007BFF\",\n            color: \"#fff\",\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: \"Titre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: \"Statut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: \"Date limite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            borderBottom: \"1px solid #ddd\",\n            transition: \"background-color 0.3s\",\n            cursor: \"default\"\n          },\n          onMouseEnter: e => e.currentTarget.style.backgroundColor = \"#f9f9f9\",\n          onMouseLeave: e => e.currentTarget.style.backgroundColor = \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\"\n            },\n            children: task.title || \"Titre manquant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                padding: \"4px 8px\",\n                borderRadius: 12,\n                color: \"#fff\",\n                backgroundColor: statusColors[task.status] || \"#6c757d\",\n                fontWeight: \"bold\",\n                textTransform: \"capitalize\",\n                fontSize: \"0.9rem\",\n                display: \"inline-block\",\n                minWidth: 90,\n                textAlign: \"center\"\n              },\n              children: task.status || \"Statut manquant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\"\n            },\n            children: task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\"\n            },\n            children: task.description || \"Description manquante\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(task),\n              style: {\n                cursor: \"pointer\",\n                marginRight: 8,\n                backgroundColor: \"#ffc107\",\n                border: \"none\",\n                borderRadius: 4,\n                padding: \"4px 8px\"\n              },\n              title: \"Modifier\",\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              style: {\n                cursor: \"pointer\",\n                backgroundColor: \"#dc3545\",\n                border: \"none\",\n                borderRadius: 4,\n                padding: \"4px 8px\",\n                color: \"#fff\"\n              },\n              title: \"Supprimer\",\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: \"center\",\n              padding: 20\n            },\n            children: \"Aucune t\\xE2che disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 612,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"JIkXjZPqsb0fLLmg+0vnih9M1IU=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"TaskForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fakeApi","tasks","id","title","status","dueDate","description","createTask","task","Promise","resolve","newTask","Date","now","push","setTimeout","updateTask","updated","map","t","find","deleteTask","filter","success","getTasks","statusColors","pending","done","Navbar","onLogout","style","backgroundColor","padding","color","display","justifyContent","alignItems","fontWeight","fontSize","marginBottom","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","confirm","border","cursor","_c","TaskForm","onSave","editingTask","cancelEdit","_s","setTitle","setStatus","setDueDate","setDescription","substring","handleSubmit","e","preventDefault","trim","alert","onSubmit","value","onChange","target","required","width","type","marginLeft","background","_c2","App","_s2","setTasks","setEditingTask","isLoggedIn","setIsLoggedIn","then","handleSave","taskData","handleDelete","handleEdit","handleLogout","textAlign","maxWidth","margin","fontFamily","borderCollapse","boxShadow","length","borderBottom","transition","onMouseEnter","currentTarget","onMouseLeave","textTransform","minWidth","marginRight","colSpan","_c3","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask, getIdeas } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login'); // login | register | tasks\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null); // {type: 'error'|'success', text: ''}\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       console.log('Tâche créée reçue:', created);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// import React, { useState, useEffect } from 'react';\r\n// import Navbar from './components/Navbar';\r\n// import Login from './components/Login';\r\n// import Register from './components/Register';\r\n// import TaskForm from './components/TaskForm';\r\n// import TaskList from './components/TaskList';\r\n// import { getTasks, createTask, updateTask, deleteTask } from './services/api';\r\n\r\n// export default function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n//   const [view, setView] = useState(token ? 'tasks' : 'login');\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [editingTask, setEditingTask] = useState(null);\r\n//   const [message, setMessage] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     if (message) {\r\n//       const timer = setTimeout(() => setMessage(null), 4000);\r\n//       return () => clearTimeout(timer);\r\n//     }\r\n//   }, [message]);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     if (view === 'tasks') {\r\n//       getTasks(token).then(data => {\r\n//         setTasks(Array.isArray(data) ? data : []);\r\n//       });\r\n//     }\r\n//   }, [view, token]);\r\n\r\n//   const handleLogin = async (jwt) => {\r\n//     localStorage.setItem('token', jwt);\r\n//     setToken(jwt);\r\n//     setView('tasks');\r\n//     const fetchedTasks = await getTasks(jwt);\r\n//     setTasks(Array.isArray(fetchedTasks) ? fetchedTasks : []);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     setToken('');\r\n//     setTasks([]);\r\n//     setEditingTask(null);\r\n//     setView('login');\r\n//   };\r\n\r\n//   const handleSaveTask = async (taskData) => {\r\n//     if (editingTask) {\r\n//       const updated = await updateTask(token, editingTask._id, taskData);\r\n//       if (!updated.error) {\r\n//         setTasks(tasks.map(t => (t._id === updated._id ? updated : t)));\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche mise à jour avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur mise à jour: ${updated.error}` });\r\n//       }\r\n//     } else {\r\n//       const created = await createTask(token, taskData);\r\n//       console.log('Tâche créée reçue:', created);\r\n//       if (!created.error) {\r\n//         setTasks([...tasks, created]);\r\n//         setEditingTask(null);\r\n//         setMessage({ type: 'success', text: 'Tâche créée avec succès !' });\r\n//       } else {\r\n//         setMessage({ type: 'error', text: `Erreur création: ${created.error}` });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteTask = async (taskId) => {\r\n//     if (!window.confirm('Voulez-vous vraiment supprimer cette tâche ?')) return;\r\n\r\n//     const deleted = await deleteTask(token, taskId);\r\n//     if (!deleted.error) {\r\n//       setTasks(tasks.filter(t => t._id !== taskId));\r\n//       setMessage({ type: 'success', text: 'Tâche supprimée avec succès !' });\r\n//     } else {\r\n//       setMessage({ type: 'error', text: `Erreur suppression: ${deleted.error}` });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto', padding: 20 }}>\r\n//       <Navbar setView={setView} token={token} handleLogout={handleLogout} />\r\n\r\n//       {message && (\r\n//         <div style={{\r\n//           marginBottom: 10,\r\n//           padding: 10,\r\n//           color: message.type === 'error' ? 'red' : 'green',\r\n//           border: `1px solid ${message.type === 'error' ? 'red' : 'green'}`,\r\n//           borderRadius: 5,\r\n//         }}>\r\n//           {message.text}\r\n//         </div>\r\n//       )}\r\n\r\n//       {!token && view === 'login' && <Login onLogin={handleLogin} />}\r\n//       {!token && view === 'register' && <Register onRegister={() => setView('login')} />}\r\n\r\n//       {token && view === 'tasks' && (\r\n//         <>\r\n//           <TaskForm\r\n//             token={token}\r\n//             onSave={handleSaveTask}\r\n//             editingTask={editingTask}\r\n//             cancelEdit={() => setEditingTask(null)}\r\n//           />\r\n//           <TaskList\r\n//             token={token}\r\n//             tasks={tasks}\r\n//             setTasks={setTasks}\r\n//             onEdit={setEditingTask}\r\n//             onDelete={handleDeleteTask}\r\n//           />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n// App.js\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// Fake API pour la démo\r\nconst fakeApi = {\r\n  tasks: [\r\n    {\r\n      id: 1,\r\n      title: \"Tâche 1\",\r\n      status: \"pending\",\r\n      dueDate: \"2025-08-21\",\r\n      description: \"Description de la tâche 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Tâche 2\",\r\n      status: \"done\",\r\n      dueDate: \"2025-09-01\",\r\n      description: \"Description de la tâche 2\",\r\n    },\r\n  ],\r\n  createTask(task) {\r\n    return new Promise((resolve) => {\r\n      const newTask = { ...task, id: Date.now() };\r\n      this.tasks.push(newTask);\r\n      setTimeout(() => resolve(newTask), 500);\r\n    });\r\n  },\r\n  updateTask(id, updated) {\r\n    return new Promise((resolve) => {\r\n      this.tasks = this.tasks.map((t) => (t.id === id ? { ...t, ...updated } : t));\r\n      setTimeout(() => resolve(this.tasks.find((t) => t.id === id)), 500);\r\n    });\r\n  },\r\n  deleteTask(id) {\r\n    return new Promise((resolve) => {\r\n      this.tasks = this.tasks.filter((t) => t.id !== id);\r\n      setTimeout(() => resolve({ success: true }), 500);\r\n    });\r\n  },\r\n  getTasks() {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => resolve(this.tasks), 500);\r\n    });\r\n  },\r\n};\r\n\r\nconst statusColors = {\r\n  pending: \"#f0ad4e\", // orange\r\n  \"in-progress\": \"#0275d8\", // bleu\r\n  done: \"#5cb85c\", // vert\r\n};\r\n\r\n// Navbar avec bouton déconnexion\r\nfunction Navbar({ onLogout }) {\r\n  return (\r\n    <nav\r\n      style={{\r\n        backgroundColor: \"#007BFF\",\r\n        padding: \"10px 20px\",\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.2rem\",\r\n        marginBottom: 20,\r\n        borderRadius: 6,\r\n      }}\r\n    >\r\n      <div>Mon App Tâches</div>\r\n      <button\r\n        onClick={() => {\r\n          if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\r\n            onLogout();\r\n          }\r\n        }}\r\n        style={{\r\n          backgroundColor: \"#dc3545\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          padding: \"6px 12px\",\r\n          borderRadius: 4,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Déconnexion\r\n      </button>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// Formulaire de tâche\r\nfunction TaskForm({ onSave, editingTask, cancelEdit }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [status, setStatus] = useState(\"pending\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (editingTask) {\r\n      setTitle(editingTask.title || \"\");\r\n      setStatus(editingTask.status || \"pending\");\r\n      setDueDate(editingTask.dueDate ? editingTask.dueDate.substring(0, 10) : \"\");\r\n      setDescription(editingTask.description || \"\");\r\n    } else {\r\n      setTitle(\"\");\r\n      setStatus(\"pending\");\r\n      setDueDate(\"\");\r\n      setDescription(\"\");\r\n    }\r\n  }, [editingTask]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) {\r\n      alert(\"Le titre est obligatoire\");\r\n      return;\r\n    }\r\n    if (!status) {\r\n      alert(\"Le statut est obligatoire\");\r\n      return;\r\n    }\r\n    onSave({ title, status, dueDate, description });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      style={{ marginBottom: 20, border: \"1px solid #ccc\", padding: 15, borderRadius: 6 }}\r\n    >\r\n      <h3>{editingTask ? \"Modifier une tâche\" : \"Ajouter une tâche\"}</h3>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Titre :</label>\r\n        <br />\r\n        <input\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n          style={{ width: \"100%\", padding: 5 }}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Statut :</label>\r\n        <br />\r\n        <select\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          required\r\n          style={{ width: \"100%\", padding: 5 }}\r\n        >\r\n          <option value=\"pending\">En attente</option>\r\n          <option value=\"in-progress\">En cours</option>\r\n          <option value=\"done\">Terminé</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Date limite :</label>\r\n        <br />\r\n        <input\r\n          type=\"date\"\r\n          value={dueDate}\r\n          onChange={(e) => setDueDate(e.target.value)}\r\n          style={{ width: \"100%\", padding: 5 }}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 10 }}>\r\n        <label>Description :</label>\r\n        <br />\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          style={{ width: \"100%\", padding: 5 }}\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" style={{ padding: \"5px 10px\" }}>\r\n        {editingTask ? \"Mettre à jour\" : \"Enregistrer\"}\r\n      </button>\r\n\r\n      {editingTask && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={cancelEdit}\r\n          style={{ padding: \"5px 10px\", marginLeft: 10, background: \"#ccc\" }}\r\n        >\r\n          Annuler\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\n// Composant principal\r\nexport default function App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true); // Pour simuler la connexion\r\n\r\n  useEffect(() => {\r\n    fakeApi.getTasks().then(setTasks);\r\n  }, []);\r\n\r\n  const handleSave = (taskData) => {\r\n    if (editingTask) {\r\n      fakeApi.updateTask(editingTask.id, taskData).then((updated) => {\r\n        setTasks(tasks.map((t) => (t.id === updated.id ? updated : t)));\r\n        setEditingTask(null);\r\n      });\r\n    } else {\r\n      fakeApi.createTask(taskData).then((newTask) => {\r\n        setTasks([...tasks, newTask]);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Confirmer la suppression ?\")) {\r\n      fakeApi.deleteTask(id).then(() => {\r\n        setTasks(tasks.filter((t) => t.id !== id));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (task) => {\r\n    setEditingTask(task);\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    if (window.confirm(\"Voulez-vous vraiment vous déconnecter ?\")) {\r\n      setIsLoggedIn(false);\r\n      alert(\"Déconnecté !\");\r\n      // Ici tu peux aussi supprimer token, rediriger, etc.\r\n    }\r\n  };\r\n\r\n  if (!isLoggedIn) {\r\n    return <div style={{ textAlign: \"center\", padding: 50 }}>Connectez-vous pour voir vos tâches.</div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: 900,\r\n        margin: \"auto\",\r\n        padding: 20,\r\n        fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n      }}\r\n    >\r\n      <Navbar onLogout={handleLogout} />\r\n\r\n      <TaskForm onSave={handleSave} editingTask={editingTask} cancelEdit={cancelEdit} />\r\n\r\n      <table\r\n        style={{ width: \"100%\", borderCollapse: \"collapse\", boxShadow: \"0 0 10px rgba(0,0,0,0.1)\" }}\r\n      >\r\n        <thead>\r\n          <tr style={{ backgroundColor: \"#007BFF\", color: \"#fff\", textAlign: \"left\" }}>\r\n            <th style={{ padding: \"10px\" }}>Titre</th>\r\n            <th style={{ padding: \"10px\" }}>Statut</th>\r\n            <th style={{ padding: \"10px\" }}>Date limite</th>\r\n            <th style={{ padding: \"10px\" }}>Description</th>\r\n            <th style={{ padding: \"10px\" }}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.length > 0 ? (\r\n            tasks.map((task) => (\r\n              <tr\r\n                key={task.id}\r\n                style={{\r\n                  borderBottom: \"1px solid #ddd\",\r\n                  transition: \"background-color 0.3s\",\r\n                  cursor: \"default\",\r\n                }}\r\n                onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#f9f9f9\")}\r\n                onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"\")}\r\n              >\r\n                <td style={{ padding: \"8px\" }}>{task.title || \"Titre manquant\"}</td>\r\n                <td style={{ padding: \"8px\" }}>\r\n                  <span\r\n                    style={{\r\n                      padding: \"4px 8px\",\r\n                      borderRadius: 12,\r\n                      color: \"#fff\",\r\n                      backgroundColor: statusColors[task.status] || \"#6c757d\",\r\n                      fontWeight: \"bold\",\r\n                      textTransform: \"capitalize\",\r\n                      fontSize: \"0.9rem\",\r\n                      display: \"inline-block\",\r\n                      minWidth: 90,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {task.status || \"Statut manquant\"}\r\n                  </span>\r\n                </td>\r\n                <td style={{ padding: \"8px\" }}>\r\n                  {task.dueDate ? task.dueDate.substring(0, 10) : \"Date manquante\"}\r\n                </td>\r\n                <td style={{ padding: \"8px\" }}>{task.description || \"Description manquante\"}</td>\r\n                <td style={{ padding: \"8px\" }}>\r\n                  <button\r\n                    onClick={() => handleEdit(task)}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      marginRight: 8,\r\n                      backgroundColor: \"#ffc107\",\r\n                      border: \"none\",\r\n                      borderRadius: 4,\r\n                      padding: \"4px 8px\",\r\n                    }}\r\n                    title=\"Modifier\"\r\n                  >\r\n                    ✏️\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(task.id)}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      backgroundColor: \"#dc3545\",\r\n                      border: \"none\",\r\n                      borderRadius: 4,\r\n                      padding: \"4px 8px\",\r\n                      color: \"#fff\",\r\n                    }}\r\n                    title=\"Supprimer\"\r\n                  >\r\n                    🗑️\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\" style={{ textAlign: \"center\", padding: 20 }}>\r\n                Aucune tâche disponible\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE,SAAS;IACjBC,OAAO,EAAE,YAAY;IACrBC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,YAAY;IACrBC,WAAW,EAAE;EACf,CAAC,CACF;EACDC,UAAUA,CAACC,IAAI,EAAE;IACf,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,OAAO,GAAG;QAAE,GAAGH,IAAI;QAAEN,EAAE,EAAEU,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC;MAC3C,IAAI,CAACZ,KAAK,CAACa,IAAI,CAACH,OAAO,CAAC;MACxBI,UAAU,CAAC,MAAML,OAAO,CAACC,OAAO,CAAC,EAAE,GAAG,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC;EACDK,UAAUA,CAACd,EAAE,EAAEe,OAAO,EAAE;IACtB,OAAO,IAAIR,OAAO,CAAEC,OAAO,IAAK;MAC9B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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}