{"ast":null,"code":"// // const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\n\n// // // Enregistrement utilisateur\n// // export async function register(name, email, password) {\n// //   const res = await fetch(`${API_URL}/users/register`, {\n// //     method: 'POST',\n// //     headers: { 'Content-Type': 'application/json' },\n// //     body: JSON.stringify({ name, email, password }),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Connexion utilisateur\n// // export async function login(email, password) {\n// //   const res = await fetch(`${API_URL}/users/login`, {\n// //     method: 'POST',\n// //     headers: { 'Content-Type': 'application/json' },\n// //     body: JSON.stringify({ email, password }),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Création d’une tâche\n// // export async function createTask(token, taskData) {\n// //   const res = await fetch(`${API_URL}/tasks`, {\n// //     method: 'POST',\n// //     headers: { \n// //       'Content-Type': 'application/json',\n// //       Authorization: `Bearer ${token}`,\n// //     },\n// //     body: JSON.stringify(taskData),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Récupérer la liste des tâches\n// // export async function getTasks(token) {\n// //   const res = await fetch(`${API_URL}/tasks`, {\n// //     headers: { Authorization: `Bearer ${token}` },\n// //   });\n// //   return res.json();\n// // }\n\n// // // Modifier une tâche\n// // export async function updateTask(token, id, updatedData) {\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\n// //     method: 'PUT',\n// //     headers: { \n// //       'Content-Type': 'application/json',\n// //       Authorization: `Bearer ${token}`,\n// //     },\n// //     body: JSON.stringify(updatedData),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Supprimer une tâche\n// // export async function deleteTask(token, id) {\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\n// //     method: 'DELETE',\n// //     headers: { Authorization: `Bearer ${token}` },\n// //   });\n// //   return res.json();\n// // }\n// // const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\n\n// // // ----------- Utilisateurs -----------\n\n// // // Enregistrement utilisateur\n// // export async function register(name, email, password) {\n// //   const res = await fetch(`${API_URL}/users/register`, {\n// //     method: 'POST',\n// //     headers: { 'Content-Type': 'application/json' },\n// //     body: JSON.stringify({ name, email, password }),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Connexion utilisateur\n// // export async function login(email, password) {\n// //   const res = await fetch(`${API_URL}/users/login`, {\n// //     method: 'POST',\n// //     headers: { 'Content-Type': 'application/json' },\n// //     body: JSON.stringify({ email, password }),\n// //   });\n// //   return res.json();\n// // }\n\n// // // ----------- Tâches -----------\n\n// // // Création d’une tâche\n// // export async function createTask(token, taskData) {\n// //   const res = await fetch(`${API_URL}/tasks`, {\n// //     method: 'POST',\n// //     headers: { \n// //       'Content-Type': 'application/json',\n// //       Authorization: `Bearer ${token}`,\n// //     },\n// //     body: JSON.stringify(taskData),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Récupérer la liste des tâches\n// // export async function getTasks(token) {\n// //   const res = await fetch(`${API_URL}/tasks`, {\n// //     headers: { Authorization: `Bearer ${token}` },\n// //   });\n// //   return res.json();\n// // }\n\n// // // Modifier une tâche\n// // export async function updateTask(token, id, updatedData) {\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\n// //     method: 'PUT',\n// //     headers: { \n// //       'Content-Type': 'application/json',\n// //       Authorization: `Bearer ${token}`,\n// //     },\n// //     body: JSON.stringify(updatedData),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Supprimer une tâche\n// // export async function deleteTask(token, id) {\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\n// //     method: 'DELETE',\n// //     headers: { Authorization: `Bearer ${token}` },\n// //   });\n// //   return res.json();\n// // }\n\n// // // ----------- Idées -----------\n\n// // // Créer une idée\n// // export async function createIdea(token, ideaData) {\n// //   const res = await fetch(`${API_URL}/ideas`, {\n// //     method: 'POST',\n// //     headers: { \n// //       'Content-Type': 'application/json',\n// //       Authorization: `Bearer ${token}`,\n// //     },\n// //     body: JSON.stringify(ideaData),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Récupérer toutes les idées\n// // export async function getIdeas(token) {\n// //   const res = await fetch(`${API_URL}/ideas`, {\n// //     headers: { Authorization: `Bearer ${token}` },\n// //   });\n// //   return res.json();\n// // }\n\n// // // Modifier une idée\n// // export async function updateIdea(token, id, updatedData) {\n// //   const res = await fetch(`${API_URL}/ideas/${id}`, {\n// //     method: 'PUT',\n// //     headers: { \n// //       'Content-Type': 'application/json',\n// //       Authorization: `Bearer ${token}`,\n// //     },\n// //     body: JSON.stringify(updatedData),\n// //   });\n// //   return res.json();\n// // }\n\n// // // Supprimer une idée\n// // export async function deleteIdea(token, id) {\n// //   const res = await fetch(`${API_URL}/ideas/${id}`, {\n// //     method: 'DELETE',\n// //     headers: { Authorization: `Bearer ${token}` },\n// //   });\n// //   return res.json();\n// // }\n// // services/api.js\n\n// // services/api.js\n// ------------------------avec module idea ----------------------------------------\n\n//const API_URL = 'http://localhost:4000/api'; // adapte selon ton backend\n\n// ----------- Utilisateurs -----------\n\n// Enregistrement utilisateur\n// api.js\n\n// Définir l'URL de base de ton backend\n// Mets ici l'URL exacte de ton serveur backend (ex: http://localhost:5000 ou https://monapi.com)\nconst API_URL = \"http://localhost:5000\";\n\n// ------------------- TÂCHES -------------------\n\n// Récupérer toutes les tâches\nexport const getTasks = async () => {\n  const response = await fetch(`${API_URL}/tasks`);\n  if (!response.ok) {\n    throw new Error(\"Erreur lors de la récupération des tâches\");\n  }\n  return await response.json();\n};\n\n// Ajouter une nouvelle tâche\nexport const createTask = async taskData => {\n  const response = await fetch(`${API_URL}/tasks`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(taskData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Erreur lors de la création de la tâche\");\n  }\n  return await response.json();\n};\n\n// Mettre à jour une tâche\nexport const updateTask = async (taskId, taskData) => {\n  const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(taskData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Erreur lors de la mise à jour de la tâche\");\n  }\n  return await response.json();\n};\n\n// Supprimer une tâche\nexport const deleteTask = async taskId => {\n  const response = await fetch(`${API_URL}/tasks/${taskId}`, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) {\n    throw new Error(\"Erreur lors de la suppression de la tâche\");\n  }\n  return await response.json();\n};","map":{"version":3,"names":["API_URL","getTasks","response","fetch","ok","Error","json","createTask","taskData","method","headers","body","JSON","stringify","updateTask","taskId","deleteTask"],"sources":["C:/Users/asus/OneDrive/Bureau/Gomaycode project/final project/client/src/services/api.js"],"sourcesContent":["// // const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\r\n\r\n// // // Enregistrement utilisateur\r\n// // export async function register(name, email, password) {\r\n// //   const res = await fetch(`${API_URL}/users/register`, {\r\n// //     method: 'POST',\r\n// //     headers: { 'Content-Type': 'application/json' },\r\n// //     body: JSON.stringify({ name, email, password }),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Connexion utilisateur\r\n// // export async function login(email, password) {\r\n// //   const res = await fetch(`${API_URL}/users/login`, {\r\n// //     method: 'POST',\r\n// //     headers: { 'Content-Type': 'application/json' },\r\n// //     body: JSON.stringify({ email, password }),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Création d’une tâche\r\n// // export async function createTask(token, taskData) {\r\n// //   const res = await fetch(`${API_URL}/tasks`, {\r\n// //     method: 'POST',\r\n// //     headers: { \r\n// //       'Content-Type': 'application/json',\r\n// //       Authorization: `Bearer ${token}`,\r\n// //     },\r\n// //     body: JSON.stringify(taskData),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Récupérer la liste des tâches\r\n// // export async function getTasks(token) {\r\n// //   const res = await fetch(`${API_URL}/tasks`, {\r\n// //     headers: { Authorization: `Bearer ${token}` },\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Modifier une tâche\r\n// // export async function updateTask(token, id, updatedData) {\r\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n// //     method: 'PUT',\r\n// //     headers: { \r\n// //       'Content-Type': 'application/json',\r\n// //       Authorization: `Bearer ${token}`,\r\n// //     },\r\n// //     body: JSON.stringify(updatedData),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Supprimer une tâche\r\n// // export async function deleteTask(token, id) {\r\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n// //     method: 'DELETE',\r\n// //     headers: { Authorization: `Bearer ${token}` },\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n// // const API_URL = 'http://localhost:4000/api'; // adapte selon l’URL de ton backend\r\n\r\n// // // ----------- Utilisateurs -----------\r\n\r\n// // // Enregistrement utilisateur\r\n// // export async function register(name, email, password) {\r\n// //   const res = await fetch(`${API_URL}/users/register`, {\r\n// //     method: 'POST',\r\n// //     headers: { 'Content-Type': 'application/json' },\r\n// //     body: JSON.stringify({ name, email, password }),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Connexion utilisateur\r\n// // export async function login(email, password) {\r\n// //   const res = await fetch(`${API_URL}/users/login`, {\r\n// //     method: 'POST',\r\n// //     headers: { 'Content-Type': 'application/json' },\r\n// //     body: JSON.stringify({ email, password }),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // ----------- Tâches -----------\r\n\r\n// // // Création d’une tâche\r\n// // export async function createTask(token, taskData) {\r\n// //   const res = await fetch(`${API_URL}/tasks`, {\r\n// //     method: 'POST',\r\n// //     headers: { \r\n// //       'Content-Type': 'application/json',\r\n// //       Authorization: `Bearer ${token}`,\r\n// //     },\r\n// //     body: JSON.stringify(taskData),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Récupérer la liste des tâches\r\n// // export async function getTasks(token) {\r\n// //   const res = await fetch(`${API_URL}/tasks`, {\r\n// //     headers: { Authorization: `Bearer ${token}` },\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Modifier une tâche\r\n// // export async function updateTask(token, id, updatedData) {\r\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n// //     method: 'PUT',\r\n// //     headers: { \r\n// //       'Content-Type': 'application/json',\r\n// //       Authorization: `Bearer ${token}`,\r\n// //     },\r\n// //     body: JSON.stringify(updatedData),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Supprimer une tâche\r\n// // export async function deleteTask(token, id) {\r\n// //   const res = await fetch(`${API_URL}/tasks/${id}`, {\r\n// //     method: 'DELETE',\r\n// //     headers: { Authorization: `Bearer ${token}` },\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // ----------- Idées -----------\r\n\r\n// // // Créer une idée\r\n// // export async function createIdea(token, ideaData) {\r\n// //   const res = await fetch(`${API_URL}/ideas`, {\r\n// //     method: 'POST',\r\n// //     headers: { \r\n// //       'Content-Type': 'application/json',\r\n// //       Authorization: `Bearer ${token}`,\r\n// //     },\r\n// //     body: JSON.stringify(ideaData),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Récupérer toutes les idées\r\n// // export async function getIdeas(token) {\r\n// //   const res = await fetch(`${API_URL}/ideas`, {\r\n// //     headers: { Authorization: `Bearer ${token}` },\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Modifier une idée\r\n// // export async function updateIdea(token, id, updatedData) {\r\n// //   const res = await fetch(`${API_URL}/ideas/${id}`, {\r\n// //     method: 'PUT',\r\n// //     headers: { \r\n// //       'Content-Type': 'application/json',\r\n// //       Authorization: `Bearer ${token}`,\r\n// //     },\r\n// //     body: JSON.stringify(updatedData),\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n\r\n// // // Supprimer une idée\r\n// // export async function deleteIdea(token, id) {\r\n// //   const res = await fetch(`${API_URL}/ideas/${id}`, {\r\n// //     method: 'DELETE',\r\n// //     headers: { Authorization: `Bearer ${token}` },\r\n// //   });\r\n// //   return res.json();\r\n// // }\r\n// // services/api.js\r\n\r\n// // services/api.js\r\n// ------------------------avec module idea ----------------------------------------\r\n\r\n//const API_URL = 'http://localhost:4000/api'; // adapte selon ton backend\r\n\r\n// ----------- Utilisateurs -----------\r\n\r\n// Enregistrement utilisateur\r\n// api.js\r\n\r\n// Définir l'URL de base de ton backend\r\n// Mets ici l'URL exacte de ton serveur backend (ex: http://localhost:5000 ou https://monapi.com)\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\n// ------------------- TÂCHES -------------------\r\n\r\n// Récupérer toutes les tâches\r\nexport const getTasks = async () => {\r\n  const response = await fetch(`${API_URL}/tasks`);\r\n  if (!response.ok) {\r\n    throw new Error(\"Erreur lors de la récupération des tâches\");\r\n  }\r\n  return await response.json();\r\n};\r\n\r\n// Ajouter une nouvelle tâche\r\nexport const createTask = async (taskData) => {\r\n  const response = await fetch(`${API_URL}/tasks`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(taskData),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Erreur lors de la création de la tâche\");\r\n  }\r\n  return await response.json();\r\n};\r\n\r\n// Mettre à jour une tâche\r\nexport const updateTask = async (taskId, taskData) => {\r\n  const response = await fetch(`${API_URL}/tasks/${taskId}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(taskData),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Erreur lors de la mise à jour de la tâche\");\r\n  }\r\n  return await response.json();\r\n};\r\n\r\n// Supprimer une tâche\r\nexport const deleteTask = async (taskId) => {\r\n  const response = await fetch(`${API_URL}/tasks/${taskId}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Erreur lors de la suppression de la tâche\");\r\n  }\r\n  return await response.json();\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAMA,OAAO,GAAG,uBAAuB;;AAEvC;;AAEA;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,QAAQ,CAAC;EAChD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,QAAQ,EAAE;IAC/CS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEP,QAAQ,KAAK;EACpD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,UAAUe,MAAM,EAAE,EAAE;IACzDN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ;EAC/B,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC;;AAED;AACA,OAAO,MAAMU,UAAU,GAAG,MAAOD,MAAM,IAAK;EAC1C,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,UAAUe,MAAM,EAAE,EAAE;IACzDN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAC9D;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}